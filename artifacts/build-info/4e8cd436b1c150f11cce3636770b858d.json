{
	"id": "4e8cd436b1c150f11cce3636770b858d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract-dafc3583a0_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts@5.0.0/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts@5.0.0/utils/math/SignedMath.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.0/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.0/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.0/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.0/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.0/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts@5.0.0/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts@5.0.0/interfaces/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n// File: @openzeppelin/contracts@5.0.0/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.0/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts@5.0.0/interfaces/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n// File: @openzeppelin/contracts@5.0.0/interfaces/IERC4906.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n\n// File: @openzeppelin/contracts@5.0.0/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts@5.0.0/token/ERC721/ERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        _update(address(0), tokenId, _msgSender());\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.0/token/ERC721/extensions/ERC721URIStorage.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n\n// File: contract-dafc3583a0.sol\n\n\npragma solidity ^0.8.20;\n\n\n\n\n\ncontract SmileNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {\n    uint256 private _nextTokenId;\n\n    constructor(address initialOwner)\n        ERC721(\"SmileNFT\", \"SMILE\")\n        Ownable(initialOwner)\n    {}\n\n    function safeMint(address to, string memory uri) public onlyOwner {\n        uint256 tokenId = _nextTokenId++;\n        _safeMint(to, tokenId);\n        _setTokenURI(tokenId, uri);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (string memory)\n    {\n        return super.tokenURI(tokenId);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contract-dafc3583a0_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1935,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1937,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1941,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1945,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1949,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1955,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 Token that can be burned (destroyed).",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"ERC721Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1935,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1937,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1941,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1945,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1949,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1955,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1935,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1937,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1941,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1945,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1949,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1955,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2954,
								"contract": "contract-dafc3583a0_flattened.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-dafc3583a0_flattened.sol\":8105:23019  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-dafc3583a0_flattened.sol\":8105:23019  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122046d7771616f87b2fe8b729330815f71d870d043111d72735d6e692d7fca2eb7464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122046d7771616f87b2fe8b729330815f71d870d043111d72735d6e692d7fca2eb7464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xD7 PUSH24 0x1616F87B2FE8B729330815F71D870D043111D72735D6E692 0xD7 0xFC LOG2 0xEB PUSH21 0x64736F6C6343000814003300000000000000000000 ",
							"sourceMap": "8105:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122046d7771616f87b2fe8b729330815f71d870d043111d72735d6e692d7fca2eb7464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xD7 PUSH24 0x1616F87B2FE8B729330815F71D870D043111D72735D6E692 0xD7 0xFC LOG2 0xEB PUSH21 0x64736F6C6343000814003300000000000000000000 ",
							"sourceMap": "8105:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8105,
									"end": 23019,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8105,
									"end": 23019,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122046d7771616f87b2fe8b729330815f71d870d043111d72735d6e692d7fca2eb7464736f6c63430008140033",
									".code": [
										{
											"begin": 8105,
											"end": 23019,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 23019,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 23019,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 23019,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8105,
											"end": 23019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8105,
											"end": 23019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 23019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8105,
											"end": 23019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 23019,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract-dafc3583a0_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1570,
								"contract": "contract-dafc3583a0_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-dafc3583a0_flattened.sol\":6824:7871  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-dafc3583a0_flattened.sol\":6824:7871  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e26df85fe455760e0d9c5702123c080aeeb2b07e1873531da8fddf66d887f1fe64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e26df85fe455760e0d9c5702123c080aeeb2b07e1873531da8fddf66d887f1fe64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 PUSH14 0xF85FE455760E0D9C5702123C080A 0xEE 0xB2 0xB0 PUSH31 0x1873531DA8FDDF66D887F1FE64736F6C634300081400330000000000000000 ",
							"sourceMap": "6824:1047:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e26df85fe455760e0d9c5702123c080aeeb2b07e1873531da8fddf66d887f1fe64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 PUSH14 0xF85FE455760E0D9C5702123C080A 0xEE 0xB2 0xB0 PUSH31 0x1873531DA8FDDF66D887F1FE64736F6C634300081400330000000000000000 ",
							"sourceMap": "6824:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6824,
									"end": 7871,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6824,
									"end": 7871,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e26df85fe455760e0d9c5702123c080aeeb2b07e1873531da8fddf66d887f1fe64736f6c63430008140033",
									".code": [
										{
											"begin": 6824,
											"end": 7871,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7871,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7871,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7871,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6824,
											"end": 7871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6824,
											"end": 7871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 7871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7871,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract-dafc3583a0_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SmileNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-dafc3583a0_flattened.sol\":59927:60810  contract SmileNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contract-dafc3583a0_flattened.sol\":60039:60145  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contract-dafc3583a0_flattened.sol\":60125:60137  initialOwner */\n  dup1\n    /* \"contract-dafc3583a0_flattened.sol\":40753:40866  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x536d696c654e4654000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x534d494c45000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contract-dafc3583a0_flattened.sol\":40827:40832  name_ */\n  dup2\n    /* \"contract-dafc3583a0_flattened.sol\":40819:40824  _name */\n  0x00\n    /* \"contract-dafc3583a0_flattened.sol\":40819:40832  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"contract-dafc3583a0_flattened.sol\":40852:40859  symbol_ */\n  dup1\n    /* \"contract-dafc3583a0_flattened.sol\":40842:40849  _symbol */\n  0x01\n    /* \"contract-dafc3583a0_flattened.sol\":40842:40859  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"contract-dafc3583a0_flattened.sol\":40753:40866  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contract-dafc3583a0_flattened.sol\":28228:28229  0 */\n  0x00\n    /* \"contract-dafc3583a0_flattened.sol\":28204:28230  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract-dafc3583a0_flattened.sol\":28204:28216  initialOwner */\n  dup2\n    /* \"contract-dafc3583a0_flattened.sol\":28204:28230  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contract-dafc3583a0_flattened.sol\":28200:28295  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"contract-dafc3583a0_flattened.sol\":28281:28282  0 */\n  0x00\n    /* \"contract-dafc3583a0_flattened.sol\":28253:28284  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contract-dafc3583a0_flattened.sol\":28200:28295  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"contract-dafc3583a0_flattened.sol\":28304:28336  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"contract-dafc3583a0_flattened.sol\":28323:28335  initialOwner */\n  dup2\n    /* \"contract-dafc3583a0_flattened.sol\":28304:28322  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"contract-dafc3583a0_flattened.sol\":28304:28336  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contract-dafc3583a0_flattened.sol\":28156:28343  constructor(address initialOwner) {... */\n  pop\n    /* \"contract-dafc3583a0_flattened.sol\":60039:60145  constructor(address initialOwner)... */\n  pop\n    /* \"contract-dafc3583a0_flattened.sol\":59927:60810  contract SmileNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n  jump(tag_18)\n    /* \"contract-dafc3583a0_flattened.sol\":29843:30030  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"contract-dafc3583a0_flattened.sol\":29916:29932  address oldOwner */\n  0x00\n    /* \"contract-dafc3583a0_flattened.sol\":29935:29941  _owner */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract-dafc3583a0_flattened.sol\":29916:29941  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contract-dafc3583a0_flattened.sol\":29960:29968  newOwner */\n  dup2\n    /* \"contract-dafc3583a0_flattened.sol\":29951:29957  _owner */\n  0x07\n  0x00\n    /* \"contract-dafc3583a0_flattened.sol\":29951:29968  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract-dafc3583a0_flattened.sol\":30014:30022  newOwner */\n  dup2\n    /* \"contract-dafc3583a0_flattened.sol\":29983:30023  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract-dafc3583a0_flattened.sol\":30004:30012  oldOwner */\n  dup2\n    /* \"contract-dafc3583a0_flattened.sol\":29983:30023  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contract-dafc3583a0_flattened.sol\":29906:30030  {... */\n  pop\n    /* \"contract-dafc3583a0_flattened.sol\":29843:30030  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_62\n  tag_21\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":932:1051   */\ntag_61:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_63\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_27:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_28:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_29:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_30:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_68:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_70\n  tag_29\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1909:1993   */\ntag_69:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_31:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_32:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_33:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_34:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_75\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_33\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2624:2663   */\n  tag_76\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_35:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_36:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_37:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_80\n    /* \"#utility.yul\":3013:3047   */\n  tag_81\n    /* \"#utility.yul\":3022:3046   */\n  tag_82\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3013:3047   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2995:3048   */\n  tag_35\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_38:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_39:\n    /* \"#utility.yul\":3251:3290   */\n  tag_85\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3312:3403   */\n  tag_86\n    /* \"#utility.yul\":3361:3402   */\n  tag_87\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_38\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_34\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_40:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_41:\n    /* \"#utility.yul\":3572:3604   */\n  tag_90\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3613:3678   */\n  tag_91\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_39\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_42:\n    /* \"#utility.yul\":3750:3870   */\ntag_93:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_96\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_41\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_43:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_99\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_31\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4101:4130   */\n  tag_100\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_101:\n    /* \"#utility.yul\":4328:4408   */\n  tag_102\n    /* \"#utility.yul\":4384:4406   */\n  tag_103\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_98:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_44:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_45:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_106\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_44\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_46:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_108\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_110\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_27\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_112\n  tag_28\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5233:5289   */\ntag_111:\n    /* \"#utility.yul\":5313:5351   */\n  tag_113\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_30\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5398:5465   */\n  tag_114\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_117:\n    /* \"#utility.yul\":6339:6406   */\n  tag_118\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_46\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_115)\n    /* \"#utility.yul\":5560:6178   */\ntag_116:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_119\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_31\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_120:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_124\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_123:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_115:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_47:\n    /* \"#utility.yul\":6516:6540   */\n  tag_126\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_24\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_128\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_47\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contract-dafc3583a0_flattened.sol\":59927:60810  contract SmileNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-dafc3583a0_flattened.sol\":59927:60810  contract SmileNFT is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd204c45e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":60603:60808  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-dafc3583a0_flattened.sol\":41737:41826  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-dafc3583a0_flattened.sol\":42869:43023  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-dafc3583a0_flattened.sol\":42695:42808  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contract-dafc3583a0_flattened.sol\":43515:44093  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contract-dafc3583a0_flattened.sol\":44159:44291  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contract-dafc3583a0_flattened.sol\":57600:57914  function burn(uint256 tokenId) public virtual {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contract-dafc3583a0_flattened.sol\":41557:41675  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-dafc3583a0_flattened.sol\":41292:41500  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-dafc3583a0_flattened.sol\":29224:29325  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contract-dafc3583a0_flattened.sol\":28569:28654  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-dafc3583a0_flattened.sol\":41890:41983  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-dafc3583a0_flattened.sol\":43090:43234  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contract-dafc3583a0_flattened.sol\":44357:44565  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contract-dafc3583a0_flattened.sol\":60408:60597  function tokenURI(uint256 tokenId)... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-dafc3583a0_flattened.sol\":60151:60334  function safeMint(address to, string memory uri) public onlyOwner {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contract-dafc3583a0_flattened.sol\":43300:43453  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_19:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-dafc3583a0_flattened.sol\":29474:29689  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contract-dafc3583a0_flattened.sol\":60603:60808  function supportsInterface(bytes4 interfaceId)... */\n    tag_27:\n        /* \"contract-dafc3583a0_flattened.sol\":60738:60742  bool */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":60765:60801  super.supportsInterface(interfaceId) */\n      tag_97\n        /* \"contract-dafc3583a0_flattened.sol\":60789:60800  interfaceId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":60765:60788  super.supportsInterface */\n      tag_98\n        /* \"contract-dafc3583a0_flattened.sol\":60765:60801  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_97:\n        /* \"contract-dafc3583a0_flattened.sol\":60758:60801  return super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":60603:60808  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":41737:41826  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"contract-dafc3583a0_flattened.sol\":41782:41795  string memory */\n      0x60\n        /* \"contract-dafc3583a0_flattened.sol\":41814:41819  _name */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":41807:41819  return _name */\n      dup1\n      sload\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_102\n      swap1\n      tag_101\n      jump\t// in\n    tag_102:\n      dup1\n      iszero\n      tag_103\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_104\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_103)\n    tag_104:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_105:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_105\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":41737:41826  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":42869:43023  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_37:\n        /* \"contract-dafc3583a0_flattened.sol\":42936:42943  address */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":42955:42977  _requireOwned(tokenId) */\n      tag_107\n        /* \"contract-dafc3583a0_flattened.sol\":42969:42976  tokenId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":42955:42968  _requireOwned */\n      tag_108\n        /* \"contract-dafc3583a0_flattened.sol\":42955:42977  _requireOwned(tokenId) */\n      jump\t// in\n    tag_107:\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":42995:43016  _getApproved(tokenId) */\n      tag_109\n        /* \"contract-dafc3583a0_flattened.sol\":43008:43015  tokenId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":42995:43007  _getApproved */\n      tag_110\n        /* \"contract-dafc3583a0_flattened.sol\":42995:43016  _getApproved(tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"contract-dafc3583a0_flattened.sol\":42988:43016  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":42869:43023  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":42695:42808  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_43:\n        /* \"contract-dafc3583a0_flattened.sol\":42766:42801  _approve(to, tokenId, _msgSender()) */\n      tag_112\n        /* \"contract-dafc3583a0_flattened.sol\":42775:42777  to */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":42779:42786  tokenId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":42788:42800  _msgSender() */\n      tag_113\n        /* \"contract-dafc3583a0_flattened.sol\":42788:42798  _msgSender */\n      tag_114\n        /* \"contract-dafc3583a0_flattened.sol\":42788:42800  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contract-dafc3583a0_flattened.sol\":42766:42774  _approve */\n      tag_115\n        /* \"contract-dafc3583a0_flattened.sol\":42766:42801  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_112:\n        /* \"contract-dafc3583a0_flattened.sol\":42695:42808  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":43515:44093  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_47:\n        /* \"contract-dafc3583a0_flattened.sol\":43623:43624  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":43609:43625  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":43609:43611  to */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":43609:43625  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-dafc3583a0_flattened.sol\":43605:43692  if (to == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":43678:43679  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":43648:43681  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":43605:43692  if (to == address(0)) {... */\n    tag_117:\n        /* \"contract-dafc3583a0_flattened.sol\":43910:43931  address previousOwner */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":43934:43968  _update(to, tokenId, _msgSender()) */\n      tag_119\n        /* \"contract-dafc3583a0_flattened.sol\":43942:43944  to */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":43946:43953  tokenId */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":43955:43967  _msgSender() */\n      tag_120\n        /* \"contract-dafc3583a0_flattened.sol\":43955:43965  _msgSender */\n      tag_114\n        /* \"contract-dafc3583a0_flattened.sol\":43955:43967  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"contract-dafc3583a0_flattened.sol\":43934:43941  _update */\n      tag_121\n        /* \"contract-dafc3583a0_flattened.sol\":43934:43968  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_119:\n        /* \"contract-dafc3583a0_flattened.sol\":43910:43968  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":43999:44003  from */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":43982:44003  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":43982:43995  previousOwner */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":43982:44003  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract-dafc3583a0_flattened.sol\":43978:44087  if (previousOwner != from) {... */\n      tag_122\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":44047:44051  from */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":44053:44060  tokenId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":44062:44075  previousOwner */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":44026:44076  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":43978:44087  if (previousOwner != from) {... */\n    tag_122:\n        /* \"contract-dafc3583a0_flattened.sol\":43595:44093  {... */\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":43515:44093  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":44159:44291  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_50:\n        /* \"contract-dafc3583a0_flattened.sol\":44245:44284  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_126\n        /* \"contract-dafc3583a0_flattened.sol\":44262:44266  from */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":44268:44270  to */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":44272:44279  tokenId */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":44245:44284  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":44245:44261  safeTransferFrom */\n      tag_79\n        /* \"contract-dafc3583a0_flattened.sol\":44245:44284  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_126:\n        /* \"contract-dafc3583a0_flattened.sol\":44159:44291  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":57600:57914  function burn(uint256 tokenId) public virtual {... */\n    tag_53:\n        /* \"contract-dafc3583a0_flattened.sol\":57865:57907  _update(address(0), tokenId, _msgSender()) */\n      tag_128\n        /* \"contract-dafc3583a0_flattened.sol\":57881:57882  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":57885:57892  tokenId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":57894:57906  _msgSender() */\n      tag_129\n        /* \"contract-dafc3583a0_flattened.sol\":57894:57904  _msgSender */\n      tag_114\n        /* \"contract-dafc3583a0_flattened.sol\":57894:57906  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"contract-dafc3583a0_flattened.sol\":57865:57872  _update */\n      tag_121\n        /* \"contract-dafc3583a0_flattened.sol\":57865:57907  _update(address(0), tokenId, _msgSender()) */\n      jump\t// in\n    tag_128:\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":57600:57914  function burn(uint256 tokenId) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":41557:41675  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_56:\n        /* \"contract-dafc3583a0_flattened.sol\":41620:41627  address */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":41646:41668  _requireOwned(tokenId) */\n      tag_131\n        /* \"contract-dafc3583a0_flattened.sol\":41660:41667  tokenId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":41646:41659  _requireOwned */\n      tag_108\n        /* \"contract-dafc3583a0_flattened.sol\":41646:41668  _requireOwned(tokenId) */\n      jump\t// in\n    tag_131:\n        /* \"contract-dafc3583a0_flattened.sol\":41639:41668  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":41557:41675  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":41292:41500  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_61:\n        /* \"contract-dafc3583a0_flattened.sol\":41355:41362  uint256 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":41395:41396  0 */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":41378:41397  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":41378:41383  owner */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":41378:41397  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-dafc3583a0_flattened.sol\":41374:41461  if (owner == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":41447:41448  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":41420:41450  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":41374:41461  if (owner == address(0)) {... */\n    tag_133:\n        /* \"contract-dafc3583a0_flattened.sol\":41477:41486  _balances */\n      0x03\n        /* \"contract-dafc3583a0_flattened.sol\":41477:41493  _balances[owner] */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":41487:41492  owner */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":41477:41493  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract-dafc3583a0_flattened.sol\":41470:41493  return _balances[owner] */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":41292:41500  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":29224:29325  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"contract-dafc3583a0_flattened.sol\":28462:28475  _checkOwner() */\n      tag_136\n        /* \"contract-dafc3583a0_flattened.sol\":28462:28473  _checkOwner */\n      tag_137\n        /* \"contract-dafc3583a0_flattened.sol\":28462:28475  _checkOwner() */\n      jump\t// in\n    tag_136:\n        /* \"contract-dafc3583a0_flattened.sol\":29288:29318  _transferOwnership(address(0)) */\n      tag_139\n        /* \"contract-dafc3583a0_flattened.sol\":29315:29316  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":29288:29306  _transferOwnership */\n      tag_140\n        /* \"contract-dafc3583a0_flattened.sol\":29288:29318  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_139:\n        /* \"contract-dafc3583a0_flattened.sol\":29224:29325  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":28569:28654  function owner() public view virtual returns (address) {... */\n    tag_67:\n        /* \"contract-dafc3583a0_flattened.sol\":28615:28622  address */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":28641:28647  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":28634:28647  return _owner */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":28569:28654  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":41890:41983  function symbol() public view virtual returns (string memory) {... */\n    tag_70:\n        /* \"contract-dafc3583a0_flattened.sol\":41937:41950  string memory */\n      0x60\n        /* \"contract-dafc3583a0_flattened.sol\":41969:41976  _symbol */\n      0x01\n        /* \"contract-dafc3583a0_flattened.sol\":41962:41976  return _symbol */\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_101\n      jump\t// in\n    tag_143:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_101\n      jump\t// in\n    tag_144:\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_146\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_145)\n    tag_146:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_147:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_147\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":41890:41983  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":43090:43234  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_75:\n        /* \"contract-dafc3583a0_flattened.sol\":43175:43227  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_149\n        /* \"contract-dafc3583a0_flattened.sol\":43194:43206  _msgSender() */\n      tag_150\n        /* \"contract-dafc3583a0_flattened.sol\":43194:43204  _msgSender */\n      tag_114\n        /* \"contract-dafc3583a0_flattened.sol\":43194:43206  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"contract-dafc3583a0_flattened.sol\":43208:43216  operator */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":43218:43226  approved */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":43175:43193  _setApprovalForAll */\n      tag_151\n        /* \"contract-dafc3583a0_flattened.sol\":43175:43227  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_149:\n        /* \"contract-dafc3583a0_flattened.sol\":43090:43234  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":44357:44565  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_79:\n        /* \"contract-dafc3583a0_flattened.sol\":44470:44501  transferFrom(from, to, tokenId) */\n      tag_153\n        /* \"contract-dafc3583a0_flattened.sol\":44483:44487  from */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":44489:44491  to */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":44493:44500  tokenId */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":44470:44482  transferFrom */\n      tag_47\n        /* \"contract-dafc3583a0_flattened.sol\":44470:44501  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_153:\n        /* \"contract-dafc3583a0_flattened.sol\":44511:44558  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_154\n        /* \"contract-dafc3583a0_flattened.sol\":44534:44538  from */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":44540:44542  to */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":44544:44551  tokenId */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":44553:44557  data */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":44511:44533  _checkOnERC721Received */\n      tag_155\n        /* \"contract-dafc3583a0_flattened.sol\":44511:44558  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_154:\n        /* \"contract-dafc3583a0_flattened.sol\":44357:44565  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":60408:60597  function tokenURI(uint256 tokenId)... */\n    tag_82:\n        /* \"contract-dafc3583a0_flattened.sol\":60531:60544  string memory */\n      0x60\n        /* \"contract-dafc3583a0_flattened.sol\":60567:60590  super.tokenURI(tokenId) */\n      tag_157\n        /* \"contract-dafc3583a0_flattened.sol\":60582:60589  tokenId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":60567:60581  super.tokenURI */\n      tag_158\n        /* \"contract-dafc3583a0_flattened.sol\":60567:60590  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_157:\n        /* \"contract-dafc3583a0_flattened.sol\":60560:60590  return super.tokenURI(tokenId) */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":60408:60597  function tokenURI(uint256 tokenId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":60151:60334  function safeMint(address to, string memory uri) public onlyOwner {... */\n    tag_87:\n        /* \"contract-dafc3583a0_flattened.sol\":28462:28475  _checkOwner() */\n      tag_160\n        /* \"contract-dafc3583a0_flattened.sol\":28462:28473  _checkOwner */\n      tag_137\n        /* \"contract-dafc3583a0_flattened.sol\":28462:28475  _checkOwner() */\n      jump\t// in\n    tag_160:\n        /* \"contract-dafc3583a0_flattened.sol\":60227:60242  uint256 tokenId */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":60245:60257  _nextTokenId */\n      0x08\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":60245:60259  _nextTokenId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contract-dafc3583a0_flattened.sol\":60227:60259  uint256 tokenId = _nextTokenId++ */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":60269:60291  _safeMint(to, tokenId) */\n      tag_164\n        /* \"contract-dafc3583a0_flattened.sol\":60279:60281  to */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":60283:60290  tokenId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":60269:60278  _safeMint */\n      tag_165\n        /* \"contract-dafc3583a0_flattened.sol\":60269:60291  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"contract-dafc3583a0_flattened.sol\":60301:60327  _setTokenURI(tokenId, uri) */\n      tag_166\n        /* \"contract-dafc3583a0_flattened.sol\":60314:60321  tokenId */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":60323:60326  uri */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":60301:60313  _setTokenURI */\n      tag_167\n        /* \"contract-dafc3583a0_flattened.sol\":60301:60327  _setTokenURI(tokenId, uri) */\n      jump\t// in\n    tag_166:\n        /* \"contract-dafc3583a0_flattened.sol\":60217:60334  {... */\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":60151:60334  function safeMint(address to, string memory uri) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":43300:43453  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_91:\n        /* \"contract-dafc3583a0_flattened.sol\":43388:43392  bool */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":43411:43429  _operatorApprovals */\n      0x05\n        /* \"contract-dafc3583a0_flattened.sol\":43411:43436  _operatorApprovals[owner] */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":43430:43435  owner */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":43411:43436  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract-dafc3583a0_flattened.sol\":43411:43446  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":43437:43445  operator */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":43411:43446  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":43404:43446  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":43300:43453  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":29474:29689  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_95:\n        /* \"contract-dafc3583a0_flattened.sol\":28462:28475  _checkOwner() */\n      tag_170\n        /* \"contract-dafc3583a0_flattened.sol\":28462:28473  _checkOwner */\n      tag_137\n        /* \"contract-dafc3583a0_flattened.sol\":28462:28475  _checkOwner() */\n      jump\t// in\n    tag_170:\n        /* \"contract-dafc3583a0_flattened.sol\":29578:29579  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":29558:29580  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":29558:29566  newOwner */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":29558:29580  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-dafc3583a0_flattened.sol\":29554:29645  if (newOwner == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":29631:29632  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":29603:29634  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":29554:29645  if (newOwner == address(0)) {... */\n    tag_172:\n        /* \"contract-dafc3583a0_flattened.sol\":29654:29682  _transferOwnership(newOwner) */\n      tag_174\n        /* \"contract-dafc3583a0_flattened.sol\":29673:29681  newOwner */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":29654:29672  _transferOwnership */\n      tag_140\n        /* \"contract-dafc3583a0_flattened.sol\":29654:29682  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_174:\n        /* \"contract-dafc3583a0_flattened.sol\":29474:29689  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":58706:58913  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_98:\n        /* \"contract-dafc3583a0_flattened.sol\":58808:58812  bool */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":58529:58539  0x49064906 */\n      0x49064906\n        /* \"contract-dafc3583a0_flattened.sol\":58522:58540  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"contract-dafc3583a0_flattened.sol\":58831:58866  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":58831:58842  interfaceId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":58831:58866  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contract-dafc3583a0_flattened.sol\":58831:58906  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_176\n      jumpi\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":58870:58906  super.supportsInterface(interfaceId) */\n      tag_177\n        /* \"contract-dafc3583a0_flattened.sol\":58894:58905  interfaceId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":58870:58893  super.supportsInterface */\n      tag_178\n        /* \"contract-dafc3583a0_flattened.sol\":58870:58906  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_177:\n        /* \"contract-dafc3583a0_flattened.sol\":58831:58906  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_176:\n        /* \"contract-dafc3583a0_flattened.sol\":58824:58906  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":58706:58913  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":55510:55751  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_108:\n        /* \"contract-dafc3583a0_flattened.sol\":55573:55580  address */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":55592:55605  address owner */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":55608:55625  _ownerOf(tokenId) */\n      tag_180\n        /* \"contract-dafc3583a0_flattened.sol\":55617:55624  tokenId */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":55608:55616  _ownerOf */\n      tag_181\n        /* \"contract-dafc3583a0_flattened.sol\":55608:55625  _ownerOf(tokenId) */\n      jump\t// in\n    tag_180:\n        /* \"contract-dafc3583a0_flattened.sol\":55592:55625  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":55656:55657  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":55639:55658  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":55639:55644  owner */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":55639:55658  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-dafc3583a0_flattened.sol\":55635:55723  if (owner == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":55704:55711  tokenId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":55681:55712  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":55635:55723  if (owner == address(0)) {... */\n    tag_182:\n        /* \"contract-dafc3583a0_flattened.sol\":55739:55744  owner */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":55732:55744  return owner */\n      swap2\n      pop\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":55510:55751  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":45310:45437  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_110:\n        /* \"contract-dafc3583a0_flattened.sol\":45380:45387  address */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":45406:45421  _tokenApprovals */\n      0x04\n        /* \"contract-dafc3583a0_flattened.sol\":45406:45430  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":45422:45429  tokenId */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":45406:45430  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":45399:45430  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":45310:45437  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":26744:26840  function _msgSender() internal view virtual returns (address) {... */\n    tag_114:\n        /* \"contract-dafc3583a0_flattened.sol\":26797:26804  address */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":26823:26833  msg.sender */\n      caller\n        /* \"contract-dafc3583a0_flattened.sol\":26816:26833  return msg.sender */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":26744:26840  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":53790:53910  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_115:\n        /* \"contract-dafc3583a0_flattened.sol\":53870:53903  _approve(to, tokenId, auth, true) */\n      tag_187\n        /* \"contract-dafc3583a0_flattened.sol\":53879:53881  to */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":53883:53890  tokenId */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":53892:53896  auth */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":53898:53902  true */\n      0x01\n        /* \"contract-dafc3583a0_flattened.sol\":53870:53878  _approve */\n      tag_188\n        /* \"contract-dafc3583a0_flattened.sol\":53870:53903  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_187:\n        /* \"contract-dafc3583a0_flattened.sol\":53790:53910  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":48210:49005  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_121:\n        /* \"contract-dafc3583a0_flattened.sol\":48296:48303  address */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":48315:48327  address from */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":48330:48347  _ownerOf(tokenId) */\n      tag_190\n        /* \"contract-dafc3583a0_flattened.sol\":48339:48346  tokenId */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":48330:48338  _ownerOf */\n      tag_181\n        /* \"contract-dafc3583a0_flattened.sol\":48330:48347  _ownerOf(tokenId) */\n      jump\t// in\n    tag_190:\n        /* \"contract-dafc3583a0_flattened.sol\":48315:48347  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":48423:48424  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":48407:48425  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":48407:48411  auth */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":48407:48425  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract-dafc3583a0_flattened.sol\":48403:48489  if (auth != address(0)) {... */\n      tag_191\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":48441:48478  _checkAuthorized(from, auth, tokenId) */\n      tag_192\n        /* \"contract-dafc3583a0_flattened.sol\":48458:48462  from */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":48464:48468  auth */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":48470:48477  tokenId */\n      dup7\n        /* \"contract-dafc3583a0_flattened.sol\":48441:48457  _checkAuthorized */\n      tag_193\n        /* \"contract-dafc3583a0_flattened.sol\":48441:48478  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_192:\n        /* \"contract-dafc3583a0_flattened.sol\":48403:48489  if (auth != address(0)) {... */\n    tag_191:\n        /* \"contract-dafc3583a0_flattened.sol\":48549:48550  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":48533:48551  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":48533:48537  from */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":48533:48551  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract-dafc3583a0_flattened.sol\":48529:48785  if (from != address(0)) {... */\n      tag_194\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":48649:48697  _approve(address(0), tokenId, address(0), false) */\n      tag_195\n        /* \"contract-dafc3583a0_flattened.sol\":48666:48667  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":48670:48677  tokenId */\n      dup6\n        /* \"contract-dafc3583a0_flattened.sol\":48687:48688  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":48691:48696  false */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":48649:48657  _approve */\n      tag_188\n        /* \"contract-dafc3583a0_flattened.sol\":48649:48697  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_195:\n        /* \"contract-dafc3583a0_flattened.sol\":48759:48760  1 */\n      0x01\n        /* \"contract-dafc3583a0_flattened.sol\":48740:48749  _balances */\n      0x03\n        /* \"contract-dafc3583a0_flattened.sol\":48740:48755  _balances[from] */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":48750:48754  from */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":48740:48755  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":48740:48760  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":48529:48785  if (from != address(0)) {... */\n    tag_194:\n        /* \"contract-dafc3583a0_flattened.sol\":48813:48814  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":48799:48815  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":48799:48801  to */\n      dup6\n        /* \"contract-dafc3583a0_flattened.sol\":48799:48815  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract-dafc3583a0_flattened.sol\":48795:48902  if (to != address(0)) {... */\n      tag_196\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":48876:48877  1 */\n      0x01\n        /* \"contract-dafc3583a0_flattened.sol\":48859:48868  _balances */\n      0x03\n        /* \"contract-dafc3583a0_flattened.sol\":48859:48872  _balances[to] */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":48869:48871  to */\n      dup8\n        /* \"contract-dafc3583a0_flattened.sol\":48859:48872  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":48859:48877  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":48795:48902  if (to != address(0)) {... */\n    tag_196:\n        /* \"contract-dafc3583a0_flattened.sol\":48931:48933  to */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":48912:48919  _owners */\n      0x02\n        /* \"contract-dafc3583a0_flattened.sol\":48912:48928  _owners[tokenId] */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":48920:48927  tokenId */\n      dup7\n        /* \"contract-dafc3583a0_flattened.sol\":48912:48928  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":48912:48933  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":48968:48975  tokenId */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":48964:48966  to */\n      dup6\n        /* \"contract-dafc3583a0_flattened.sol\":48949:48976  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":48958:48962  from */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":48949:48976  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contract-dafc3583a0_flattened.sol\":48994:48998  from */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":48987:48998  return from */\n      swap2\n      pop\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":48210:49005  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":28727:28889  function _checkOwner() internal view virtual {... */\n    tag_137:\n        /* \"contract-dafc3583a0_flattened.sol\":28797:28809  _msgSender() */\n      tag_198\n        /* \"contract-dafc3583a0_flattened.sol\":28797:28807  _msgSender */\n      tag_114\n        /* \"contract-dafc3583a0_flattened.sol\":28797:28809  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"contract-dafc3583a0_flattened.sol\":28786:28809  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":28786:28793  owner() */\n      tag_199\n        /* \"contract-dafc3583a0_flattened.sol\":28786:28791  owner */\n      tag_67\n        /* \"contract-dafc3583a0_flattened.sol\":28786:28793  owner() */\n      jump\t// in\n    tag_199:\n        /* \"contract-dafc3583a0_flattened.sol\":28786:28809  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract-dafc3583a0_flattened.sol\":28782:28883  if (owner() != _msgSender()) {... */\n      tag_200\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":28859:28871  _msgSender() */\n      tag_201\n        /* \"contract-dafc3583a0_flattened.sol\":28859:28869  _msgSender */\n      tag_114\n        /* \"contract-dafc3583a0_flattened.sol\":28859:28871  _msgSender() */\n      jump\t// in\n    tag_201:\n        /* \"contract-dafc3583a0_flattened.sol\":28832:28872  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":28782:28883  if (owner() != _msgSender()) {... */\n    tag_200:\n        /* \"contract-dafc3583a0_flattened.sol\":28727:28889  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":29843:30030  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_140:\n        /* \"contract-dafc3583a0_flattened.sol\":29916:29932  address oldOwner */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":29935:29941  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":29916:29941  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":29960:29968  newOwner */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":29951:29957  _owner */\n      0x07\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":29951:29968  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":30014:30022  newOwner */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":29983:30023  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":30004:30012  oldOwner */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":29983:30023  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract-dafc3583a0_flattened.sol\":29906:30030  {... */\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":29843:30030  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":54963:55275  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_151:\n        /* \"contract-dafc3583a0_flattened.sol\":55090:55091  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":55070:55092  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":55070:55078  operator */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":55070:55092  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-dafc3583a0_flattened.sol\":55066:55157  if (operator == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":55137:55145  operator */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":55115:55146  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":55066:55157  if (operator == address(0)) {... */\n    tag_205:\n        /* \"contract-dafc3583a0_flattened.sol\":55204:55212  approved */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":55166:55184  _operatorApprovals */\n      0x05\n        /* \"contract-dafc3583a0_flattened.sol\":55166:55191  _operatorApprovals[owner] */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":55185:55190  owner */\n      dup6\n        /* \"contract-dafc3583a0_flattened.sol\":55166:55191  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract-dafc3583a0_flattened.sol\":55166:55201  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":55192:55200  operator */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":55166:55201  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":55166:55212  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":55249:55257  operator */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":55227:55268  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":55242:55247  owner */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":55227:55268  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contract-dafc3583a0_flattened.sol\":55259:55267  approved */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":55227:55268  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_207\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract-dafc3583a0_flattened.sol\":54963:55275  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":56290:57072  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_155:\n        /* \"contract-dafc3583a0_flattened.sol\":56423:56424  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":56406:56408  to */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":56406:56420  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contract-dafc3583a0_flattened.sol\":56406:56424  to.code.length > 0 */\n      gt\n        /* \"contract-dafc3583a0_flattened.sol\":56402:57066  if (to.code.length > 0) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":56460:56462  to */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":56444:56480  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"contract-dafc3583a0_flattened.sol\":56481:56493  _msgSender() */\n      tag_210\n        /* \"contract-dafc3583a0_flattened.sol\":56481:56491  _msgSender */\n      tag_114\n        /* \"contract-dafc3583a0_flattened.sol\":56481:56493  _msgSender() */\n      jump\t// in\n    tag_210:\n        /* \"contract-dafc3583a0_flattened.sol\":56495:56499  from */\n      dup7\n        /* \"contract-dafc3583a0_flattened.sol\":56501:56508  tokenId */\n      dup6\n        /* \"contract-dafc3583a0_flattened.sol\":56510:56514  data */\n      dup6\n        /* \"contract-dafc3583a0_flattened.sol\":56444:56515  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_213\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      0x01\n    tag_213:\n        /* \"contract-dafc3583a0_flattened.sol\":56440:57056  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_216\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_221\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_220)\n    tag_221:\n      0x60\n      swap2\n      pop\n    tag_220:\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":56770:56771  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":56753:56759  reason */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":56753:56766  reason.length */\n      mload\n        /* \"contract-dafc3583a0_flattened.sol\":56753:56771  reason.length == 0 */\n      sub\n        /* \"contract-dafc3583a0_flattened.sol\":56749:57042  if (reason.length == 0) {... */\n      tag_222\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":56824:56826  to */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":56802:56827  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":56749:57042  if (reason.length == 0) {... */\n    tag_222:\n        /* \"contract-dafc3583a0_flattened.sol\":56994:57000  reason */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":56988:57001  mload(reason) */\n      mload\n        /* \"contract-dafc3583a0_flattened.sol\":56979:56985  reason */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":56975:56977  32 */\n      0x20\n        /* \"contract-dafc3583a0_flattened.sol\":56971:56986  add(32, reason) */\n      add\n        /* \"contract-dafc3583a0_flattened.sol\":56964:57002  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":56440:57056  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_216:\n        /* \"contract-dafc3583a0_flattened.sol\":56572:56613  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contract-dafc3583a0_flattened.sol\":56562:56613  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":56562:56568  retval */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":56562:56613  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contract-dafc3583a0_flattened.sol\":56558:56688  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_226\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":56666:56668  to */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":56644:56669  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":56558:56688  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_226:\n        /* \"contract-dafc3583a0_flattened.sol\":56516:56702  returns (bytes4 retval) {... */\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":56402:57066  if (to.code.length > 0) {... */\n    tag_209:\n        /* \"contract-dafc3583a0_flattened.sol\":56290:57072  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":58979:59572  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_158:\n        /* \"contract-dafc3583a0_flattened.sol\":59052:59065  string memory */\n      0x60\n        /* \"contract-dafc3583a0_flattened.sol\":59077:59099  _requireOwned(tokenId) */\n      tag_229\n        /* \"contract-dafc3583a0_flattened.sol\":59091:59098  tokenId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":59077:59090  _requireOwned */\n      tag_108\n        /* \"contract-dafc3583a0_flattened.sol\":59077:59099  _requireOwned(tokenId) */\n      jump\t// in\n    tag_229:\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":59110:59133  string memory _tokenURI */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":59136:59146  _tokenURIs */\n      0x06\n        /* \"contract-dafc3583a0_flattened.sol\":59136:59155  _tokenURIs[tokenId] */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":59147:59154  tokenId */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":59136:59155  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract-dafc3583a0_flattened.sol\":59110:59155  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_230\n      swap1\n      tag_101\n      jump\t// in\n    tag_230:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_231\n      swap1\n      tag_101\n      jump\t// in\n    tag_231:\n      dup1\n      iszero\n      tag_232\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_233\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_232)\n    tag_233:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_234:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_234\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_232:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":59165:59183  string memory base */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":59186:59196  _baseURI() */\n      tag_235\n        /* \"contract-dafc3583a0_flattened.sol\":59186:59194  _baseURI */\n      tag_236\n        /* \"contract-dafc3583a0_flattened.sol\":59186:59196  _baseURI() */\n      jump\t// in\n    tag_235:\n        /* \"contract-dafc3583a0_flattened.sol\":59165:59196  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":59291:59292  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":59275:59279  base */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":59269:59287  bytes(base).length */\n      mload\n        /* \"contract-dafc3583a0_flattened.sol\":59269:59292  bytes(base).length == 0 */\n      sub\n        /* \"contract-dafc3583a0_flattened.sol\":59265:59335  if (bytes(base).length == 0) {... */\n      tag_237\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":59315:59324  _tokenURI */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":59308:59324  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_228)\n        /* \"contract-dafc3583a0_flattened.sol\":59265:59335  if (bytes(base).length == 0) {... */\n    tag_237:\n        /* \"contract-dafc3583a0_flattened.sol\":59460:59461  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":59440:59449  _tokenURI */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":59434:59457  bytes(_tokenURI).length */\n      mload\n        /* \"contract-dafc3583a0_flattened.sol\":59434:59461  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"contract-dafc3583a0_flattened.sol\":59430:59525  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":59498:59502  base */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":59504:59513  _tokenURI */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":59484:59514  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_239\n      swap3\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contract-dafc3583a0_flattened.sol\":59477:59514  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_228)\n        /* \"contract-dafc3583a0_flattened.sol\":59430:59525  if (bytes(_tokenURI).length > 0) {... */\n    tag_238:\n        /* \"contract-dafc3583a0_flattened.sol\":59542:59565  super.tokenURI(tokenId) */\n      tag_241\n        /* \"contract-dafc3583a0_flattened.sol\":59557:59564  tokenId */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":59542:59556  super.tokenURI */\n      tag_242\n        /* \"contract-dafc3583a0_flattened.sol\":59542:59565  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_241:\n        /* \"contract-dafc3583a0_flattened.sol\":59535:59565  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":58979:59572  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_228:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":50005:50105  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_165:\n        /* \"contract-dafc3583a0_flattened.sol\":50072:50098  _safeMint(to, tokenId, \"\") */\n      tag_244\n        /* \"contract-dafc3583a0_flattened.sol\":50082:50084  to */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":50086:50093  tokenId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":50072:50098  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":50072:50081  _safeMint */\n      tag_245\n        /* \"contract-dafc3583a0_flattened.sol\":50072:50098  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_244:\n        /* \"contract-dafc3583a0_flattened.sol\":50005:50105  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":59691:59858  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_167:\n        /* \"contract-dafc3583a0_flattened.sol\":59804:59813  _tokenURI */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":59782:59792  _tokenURIs */\n      0x06\n        /* \"contract-dafc3583a0_flattened.sol\":59782:59801  _tokenURIs[tokenId] */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":59793:59800  tokenId */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":59782:59801  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract-dafc3583a0_flattened.sol\":59782:59813  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_247\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":59828:59851  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"contract-dafc3583a0_flattened.sol\":59843:59850  tokenId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":59828:59851  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_249\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contract-dafc3583a0_flattened.sol\":59691:59858  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":40933:41233  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_178:\n        /* \"contract-dafc3583a0_flattened.sol\":41035:41039  bool */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":41085:41110  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"contract-dafc3583a0_flattened.sol\":41070:41110  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":41070:41081  interfaceId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":41070:41110  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contract-dafc3583a0_flattened.sol\":41070:41174  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_251\n      jumpi\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":41141:41174  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"contract-dafc3583a0_flattened.sol\":41126:41174  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":41126:41137  interfaceId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":41126:41174  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contract-dafc3583a0_flattened.sol\":41070:41174  interfaceId == type(IERC721).interfaceId ||... */\n    tag_251:\n        /* \"contract-dafc3583a0_flattened.sol\":41070:41226  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_252\n      jumpi\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":41190:41226  super.supportsInterface(interfaceId) */\n      tag_253\n        /* \"contract-dafc3583a0_flattened.sol\":41214:41225  interfaceId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":41190:41213  super.supportsInterface */\n      tag_254\n        /* \"contract-dafc3583a0_flattened.sol\":41190:41226  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_253:\n        /* \"contract-dafc3583a0_flattened.sol\":41070:41226  interfaceId == type(IERC721).interfaceId ||... */\n    tag_252:\n        /* \"contract-dafc3583a0_flattened.sol\":41051:41226  return... */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":40933:41233  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":45079:45194  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_181:\n        /* \"contract-dafc3583a0_flattened.sol\":45145:45152  address */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":45171:45178  _owners */\n      0x02\n        /* \"contract-dafc3583a0_flattened.sol\":45171:45187  _owners[tokenId] */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":45179:45186  tokenId */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":45171:45187  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":45164:45187  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":45079:45194  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":54092:54754  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_188:\n        /* \"contract-dafc3583a0_flattened.sol\":54252:54261  emitEvent */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":54252:54283  emitEvent || auth != address(0) */\n      dup1\n      tag_257\n      jumpi\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":54281:54282  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":54265:54283  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":54265:54269  auth */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":54265:54283  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract-dafc3583a0_flattened.sol\":54252:54283  emitEvent || auth != address(0) */\n    tag_257:\n        /* \"contract-dafc3583a0_flattened.sol\":54248:54708  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":54299:54312  address owner */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":54315:54337  _requireOwned(tokenId) */\n      tag_259\n        /* \"contract-dafc3583a0_flattened.sol\":54329:54336  tokenId */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":54315:54328  _requireOwned */\n      tag_108\n        /* \"contract-dafc3583a0_flattened.sol\":54315:54337  _requireOwned(tokenId) */\n      jump\t// in\n    tag_259:\n        /* \"contract-dafc3583a0_flattened.sol\":54299:54337  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":54481:54482  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":54465:54483  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":54465:54469  auth */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":54465:54483  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract-dafc3583a0_flattened.sol\":54465:54500  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_260\n      jumpi\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":54496:54500  auth */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":54487:54500  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":54487:54492  owner */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":54487:54500  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract-dafc3583a0_flattened.sol\":54465:54500  auth != address(0) && owner != auth */\n    tag_260:\n        /* \"contract-dafc3583a0_flattened.sol\":54465:54534  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_261\n      jumpi\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":54505:54534  isApprovedForAll(owner, auth) */\n      tag_262\n        /* \"contract-dafc3583a0_flattened.sol\":54522:54527  owner */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":54529:54533  auth */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":54505:54521  isApprovedForAll */\n      tag_91\n        /* \"contract-dafc3583a0_flattened.sol\":54505:54534  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_262:\n        /* \"contract-dafc3583a0_flattened.sol\":54504:54534  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"contract-dafc3583a0_flattened.sol\":54465:54534  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_261:\n        /* \"contract-dafc3583a0_flattened.sol\":54461:54603  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":54583:54587  auth */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":54561:54588  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":54461:54603  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_263:\n        /* \"contract-dafc3583a0_flattened.sol\":54621:54630  emitEvent */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":54617:54698  if (emitEvent) {... */\n      iszero\n      tag_265\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":54675:54682  tokenId */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":54671:54673  to */\n      dup6\n        /* \"contract-dafc3583a0_flattened.sol\":54655:54683  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":54664:54669  owner */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":54655:54683  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contract-dafc3583a0_flattened.sol\":54617:54698  if (emitEvent) {... */\n    tag_265:\n        /* \"contract-dafc3583a0_flattened.sol\":54285:54708  {... */\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":54248:54708  if (emitEvent || auth != address(0)) {... */\n    tag_258:\n        /* \"contract-dafc3583a0_flattened.sol\":54745:54747  to */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":54718:54733  _tokenApprovals */\n      0x04\n        /* \"contract-dafc3583a0_flattened.sol\":54718:54742  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":54734:54741  tokenId */\n      dup6\n        /* \"contract-dafc3583a0_flattened.sol\":54718:54742  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":54718:54747  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":54092:54754  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":46454:46822  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_193:\n        /* \"contract-dafc3583a0_flattened.sol\":46566:46604  _isAuthorized(owner, spender, tokenId) */\n      tag_267\n        /* \"contract-dafc3583a0_flattened.sol\":46580:46585  owner */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":46587:46594  spender */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":46596:46603  tokenId */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":46566:46579  _isAuthorized */\n      tag_268\n        /* \"contract-dafc3583a0_flattened.sol\":46566:46604  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_267:\n        /* \"contract-dafc3583a0_flattened.sol\":46561:46816  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_269\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":46641:46642  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":46624:46643  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":46624:46629  owner */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":46624:46643  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-dafc3583a0_flattened.sol\":46620:46806  if (owner == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":46693:46700  tokenId */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":46670:46701  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":46620:46806  if (owner == address(0)) {... */\n    tag_270:\n        /* \"contract-dafc3583a0_flattened.sol\":46774:46781  spender */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":46783:46790  tokenId */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":46747:46791  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap3\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":46561:46816  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_269:\n        /* \"contract-dafc3583a0_flattened.sol\":46454:46822  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":42546:42638  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_236:\n        /* \"contract-dafc3583a0_flattened.sol\":42597:42610  string memory */\n      0x60\n        /* \"contract-dafc3583a0_flattened.sol\":42622:42631  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":42546:42638  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":42049:42304  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_242:\n        /* \"contract-dafc3583a0_flattened.sol\":42113:42126  string memory */\n      0x60\n        /* \"contract-dafc3583a0_flattened.sol\":42138:42160  _requireOwned(tokenId) */\n      tag_277\n        /* \"contract-dafc3583a0_flattened.sol\":42152:42159  tokenId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":42138:42151  _requireOwned */\n      tag_108\n        /* \"contract-dafc3583a0_flattened.sol\":42138:42160  _requireOwned(tokenId) */\n      jump\t// in\n    tag_277:\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":42171:42192  string memory baseURI */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":42195:42205  _baseURI() */\n      tag_278\n        /* \"contract-dafc3583a0_flattened.sol\":42195:42203  _baseURI */\n      tag_236\n        /* \"contract-dafc3583a0_flattened.sol\":42195:42205  _baseURI() */\n      jump\t// in\n    tag_278:\n        /* \"contract-dafc3583a0_flattened.sol\":42171:42205  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":42246:42247  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":42228:42235  baseURI */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":42222:42243  bytes(baseURI).length */\n      mload\n        /* \"contract-dafc3583a0_flattened.sol\":42222:42247  bytes(baseURI).length > 0 */\n      gt\n        /* \"contract-dafc3583a0_flattened.sol\":42222:42297  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_279\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_280)\n    tag_279:\n        /* \"contract-dafc3583a0_flattened.sol\":42264:42271  baseURI */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":42273:42291  tokenId.toString() */\n      tag_281\n        /* \"contract-dafc3583a0_flattened.sol\":42273:42280  tokenId */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":42273:42289  tokenId.toString */\n      tag_282\n        /* \"contract-dafc3583a0_flattened.sol\":42273:42291  tokenId.toString() */\n      jump\t// in\n    tag_281:\n        /* \"contract-dafc3583a0_flattened.sol\":42250:42292  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_283\n      swap3\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contract-dafc3583a0_flattened.sol\":42222:42297  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_280:\n        /* \"contract-dafc3583a0_flattened.sol\":42215:42297  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":42049:42304  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":50326:50508  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_245:\n        /* \"contract-dafc3583a0_flattened.sol\":50420:50438  _mint(to, tokenId) */\n      tag_285\n        /* \"contract-dafc3583a0_flattened.sol\":50426:50428  to */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":50430:50437  tokenId */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":50420:50425  _mint */\n      tag_286\n        /* \"contract-dafc3583a0_flattened.sol\":50420:50438  _mint(to, tokenId) */\n      jump\t// in\n    tag_285:\n        /* \"contract-dafc3583a0_flattened.sol\":50448:50501  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_287\n        /* \"contract-dafc3583a0_flattened.sol\":50479:50480  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":50483:50485  to */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":50487:50494  tokenId */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":50496:50500  data */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":50448:50470  _checkOnERC721Received */\n      tag_155\n        /* \"contract-dafc3583a0_flattened.sol\":50448:50501  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_287:\n        /* \"contract-dafc3583a0_flattened.sol\":50326:50508  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":32911:33057  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_254:\n        /* \"contract-dafc3583a0_flattened.sol\":32987:32991  bool */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":33025:33050  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contract-dafc3583a0_flattened.sol\":33010:33050  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":33010:33021  interfaceId */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":33010:33050  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contract-dafc3583a0_flattened.sol\":33003:33050  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":32911:33057  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":45748:46020  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_268:\n        /* \"contract-dafc3583a0_flattened.sol\":45851:45855  bool */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":45905:45906  0 */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":45886:45907  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":45886:45893  spender */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":45886:45907  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract-dafc3583a0_flattened.sol\":45886:46013  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_290\n      jumpi\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":45933:45940  spender */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":45924:45940  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":45924:45929  owner */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":45924:45940  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract-dafc3583a0_flattened.sol\":45924:45976  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_291\n      jumpi\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":45944:45976  isApprovedForAll(owner, spender) */\n      tag_292\n        /* \"contract-dafc3583a0_flattened.sol\":45961:45966  owner */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":45968:45975  spender */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":45944:45960  isApprovedForAll */\n      tag_91\n        /* \"contract-dafc3583a0_flattened.sol\":45944:45976  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_292:\n        /* \"contract-dafc3583a0_flattened.sol\":45924:45976  owner == spender || isApprovedForAll(owner, spender) */\n    tag_291:\n        /* \"contract-dafc3583a0_flattened.sol\":45924:46012  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_293\n      jumpi\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":46005:46012  spender */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":45980:46012  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":45980:46001  _getApproved(tokenId) */\n      tag_294\n        /* \"contract-dafc3583a0_flattened.sol\":45993:46000  tokenId */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":45980:45992  _getApproved */\n      tag_110\n        /* \"contract-dafc3583a0_flattened.sol\":45980:46001  _getApproved(tokenId) */\n      jump\t// in\n    tag_294:\n        /* \"contract-dafc3583a0_flattened.sol\":45980:46012  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract-dafc3583a0_flattened.sol\":45924:46012  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_293:\n        /* \"contract-dafc3583a0_flattened.sol\":45886:46013  spender != address(0) &&... */\n    tag_290:\n        /* \"contract-dafc3583a0_flattened.sol\":45867:46013  return... */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":45748:46020  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":23598:24296  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_282:\n        /* \"contract-dafc3583a0_flattened.sol\":23654:23667  string memory */\n      0x60\n        /* \"contract-dafc3583a0_flattened.sol\":23703:23717  uint256 length */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":23740:23741  1 */\n      0x01\n        /* \"contract-dafc3583a0_flattened.sol\":23720:23737  Math.log10(value) */\n      tag_296\n        /* \"contract-dafc3583a0_flattened.sol\":23731:23736  value */\n      dup5\n        /* \"contract-dafc3583a0_flattened.sol\":23720:23730  Math.log10 */\n      tag_297\n        /* \"contract-dafc3583a0_flattened.sol\":23720:23737  Math.log10(value) */\n      jump\t// in\n    tag_296:\n        /* \"contract-dafc3583a0_flattened.sol\":23720:23741  Math.log10(value) + 1 */\n      add\n        /* \"contract-dafc3583a0_flattened.sol\":23703:23741  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":23755:23775  string memory buffer */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":23789:23795  length */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":23778:23796  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_298\n      jumpi\n      tag_299\n      tag_300\n      jump\t// in\n    tag_299:\n    tag_298:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_301\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_301:\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":23755:23796  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":23810:23821  uint256 ptr */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":23936:23942  length */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":23932:23934  32 */\n      0x20\n        /* \"contract-dafc3583a0_flattened.sol\":23928:23943  add(32, length) */\n      add\n        /* \"contract-dafc3583a0_flattened.sol\":23920:23926  buffer */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":23916:23944  add(buffer, add(32, length)) */\n      add\n        /* \"contract-dafc3583a0_flattened.sol\":23909:23944  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":23971:24253  while (true) {... */\n    tag_302:\n        /* \"contract-dafc3583a0_flattened.sol\":23978:23982  true */\n      0x01\n        /* \"contract-dafc3583a0_flattened.sol\":23971:24253  while (true) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":24002:24007  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":24141:24151  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"contract-dafc3583a0_flattened.sol\":24136:24138  10 */\n      0x0a\n        /* \"contract-dafc3583a0_flattened.sol\":24129:24134  value */\n      dup7\n        /* \"contract-dafc3583a0_flattened.sol\":24125:24139  mod(value, 10) */\n      mod\n        /* \"contract-dafc3583a0_flattened.sol\":24120:24152  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"contract-dafc3583a0_flattened.sol\":24115:24118  ptr */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":24107:24153  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"contract-dafc3583a0_flattened.sol\":24197:24199  10 */\n      0x0a\n        /* \"contract-dafc3583a0_flattened.sol\":24188:24199  value /= 10 */\n      dup6\n      dup2\n      tag_304\n      jumpi\n      tag_305\n      tag_306\n      jump\t// in\n    tag_305:\n    tag_304:\n      div\n      swap5\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":24230:24231  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":24221:24226  value */\n      dup6\n        /* \"contract-dafc3583a0_flattened.sol\":24221:24231  value == 0 */\n      sub\n        /* \"contract-dafc3583a0_flattened.sol\":23971:24253  while (true) {... */\n      tag_302\n        /* \"contract-dafc3583a0_flattened.sol\":24217:24238  if (value == 0) break */\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":23971:24253  while (true) {... */\n    tag_303:\n        /* \"contract-dafc3583a0_flattened.sol\":24273:24279  buffer */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":24266:24279  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":23598:24296  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":49327:49654  function _mint(address to, uint256 tokenId) internal {... */\n    tag_286:\n        /* \"contract-dafc3583a0_flattened.sol\":49408:49409  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":49394:49410  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":49394:49396  to */\n      dup3\n        /* \"contract-dafc3583a0_flattened.sol\":49394:49410  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-dafc3583a0_flattened.sol\":49390:49477  if (to == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":49463:49464  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":49433:49466  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":49390:49477  if (to == address(0)) {... */\n    tag_309:\n        /* \"contract-dafc3583a0_flattened.sol\":49486:49507  address previousOwner */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":49510:49542  _update(to, tokenId, address(0)) */\n      tag_311\n        /* \"contract-dafc3583a0_flattened.sol\":49518:49520  to */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":49522:49529  tokenId */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":49539:49540  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":49510:49517  _update */\n      tag_121\n        /* \"contract-dafc3583a0_flattened.sol\":49510:49542  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_311:\n        /* \"contract-dafc3583a0_flattened.sol\":49486:49542  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":49581:49582  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":49556:49583  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-dafc3583a0_flattened.sol\":49556:49569  previousOwner */\n      dup2\n        /* \"contract-dafc3583a0_flattened.sol\":49556:49583  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract-dafc3583a0_flattened.sol\":49552:49648  if (previousOwner != address(0)) {... */\n      tag_312\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":49634:49635  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":49606:49637  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-dafc3583a0_flattened.sol\":49552:49648  if (previousOwner != address(0)) {... */\n    tag_312:\n        /* \"contract-dafc3583a0_flattened.sol\":49380:49654  {... */\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":49327:49654  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract-dafc3583a0_flattened.sol\":20116:21032  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_297:\n        /* \"contract-dafc3583a0_flattened.sol\":20169:20176  uint256 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":20188:20202  uint256 result */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":20205:20206  0 */\n      0x00\n        /* \"contract-dafc3583a0_flattened.sol\":20188:20206  uint256 result = 0 */\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20253:20261  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"contract-dafc3583a0_flattened.sol\":20244:20249  value */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":20244:20261  value >= 10 ** 64 */\n      lt\n        /* \"contract-dafc3583a0_flattened.sol\":20240:20343  if (value >= 10 ** 64) {... */\n      tag_315\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":20290:20298  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"contract-dafc3583a0_flattened.sol\":20281:20298  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_316\n      jumpi\n      tag_317\n      tag_306\n      jump\t// in\n    tag_317:\n    tag_316:\n      div\n      swap3\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20326:20328  64 */\n      0x40\n        /* \"contract-dafc3583a0_flattened.sol\":20316:20328  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20240:20343  if (value >= 10 ** 64) {... */\n    tag_315:\n        /* \"contract-dafc3583a0_flattened.sol\":20369:20377  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"contract-dafc3583a0_flattened.sol\":20360:20365  value */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":20360:20377  value >= 10 ** 32 */\n      lt\n        /* \"contract-dafc3583a0_flattened.sol\":20356:20459  if (value >= 10 ** 32) {... */\n      tag_318\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":20406:20414  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"contract-dafc3583a0_flattened.sol\":20397:20414  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_319\n      jumpi\n      tag_320\n      tag_306\n      jump\t// in\n    tag_320:\n    tag_319:\n      div\n      swap3\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20442:20444  32 */\n      0x20\n        /* \"contract-dafc3583a0_flattened.sol\":20432:20444  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20356:20459  if (value >= 10 ** 32) {... */\n    tag_318:\n        /* \"contract-dafc3583a0_flattened.sol\":20485:20493  10 ** 16 */\n      0x2386f26fc10000\n        /* \"contract-dafc3583a0_flattened.sol\":20476:20481  value */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":20476:20493  value >= 10 ** 16 */\n      lt\n        /* \"contract-dafc3583a0_flattened.sol\":20472:20575  if (value >= 10 ** 16) {... */\n      tag_321\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":20522:20530  10 ** 16 */\n      0x2386f26fc10000\n        /* \"contract-dafc3583a0_flattened.sol\":20513:20530  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_322\n      jumpi\n      tag_323\n      tag_306\n      jump\t// in\n    tag_323:\n    tag_322:\n      div\n      swap3\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20558:20560  16 */\n      0x10\n        /* \"contract-dafc3583a0_flattened.sol\":20548:20560  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20472:20575  if (value >= 10 ** 16) {... */\n    tag_321:\n        /* \"contract-dafc3583a0_flattened.sol\":20601:20608  10 ** 8 */\n      0x05f5e100\n        /* \"contract-dafc3583a0_flattened.sol\":20592:20597  value */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":20592:20608  value >= 10 ** 8 */\n      lt\n        /* \"contract-dafc3583a0_flattened.sol\":20588:20688  if (value >= 10 ** 8) {... */\n      tag_324\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":20637:20644  10 ** 8 */\n      0x05f5e100\n        /* \"contract-dafc3583a0_flattened.sol\":20628:20644  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_325\n      jumpi\n      tag_326\n      tag_306\n      jump\t// in\n    tag_326:\n    tag_325:\n      div\n      swap3\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20672:20673  8 */\n      0x08\n        /* \"contract-dafc3583a0_flattened.sol\":20662:20673  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20588:20688  if (value >= 10 ** 8) {... */\n    tag_324:\n        /* \"contract-dafc3583a0_flattened.sol\":20714:20721  10 ** 4 */\n      0x2710\n        /* \"contract-dafc3583a0_flattened.sol\":20705:20710  value */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":20705:20721  value >= 10 ** 4 */\n      lt\n        /* \"contract-dafc3583a0_flattened.sol\":20701:20801  if (value >= 10 ** 4) {... */\n      tag_327\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":20750:20757  10 ** 4 */\n      0x2710\n        /* \"contract-dafc3583a0_flattened.sol\":20741:20757  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_328\n      jumpi\n      tag_329\n      tag_306\n      jump\t// in\n    tag_329:\n    tag_328:\n      div\n      swap3\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20785:20786  4 */\n      0x04\n        /* \"contract-dafc3583a0_flattened.sol\":20775:20786  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20701:20801  if (value >= 10 ** 4) {... */\n    tag_327:\n        /* \"contract-dafc3583a0_flattened.sol\":20827:20834  10 ** 2 */\n      0x64\n        /* \"contract-dafc3583a0_flattened.sol\":20818:20823  value */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":20818:20834  value >= 10 ** 2 */\n      lt\n        /* \"contract-dafc3583a0_flattened.sol\":20814:20914  if (value >= 10 ** 2) {... */\n      tag_330\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":20863:20870  10 ** 2 */\n      0x64\n        /* \"contract-dafc3583a0_flattened.sol\":20854:20870  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_331\n      jumpi\n      tag_332\n      tag_306\n      jump\t// in\n    tag_332:\n    tag_331:\n      div\n      swap3\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20898:20899  2 */\n      0x02\n        /* \"contract-dafc3583a0_flattened.sol\":20888:20899  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20814:20914  if (value >= 10 ** 2) {... */\n    tag_330:\n        /* \"contract-dafc3583a0_flattened.sol\":20940:20947  10 ** 1 */\n      0x0a\n        /* \"contract-dafc3583a0_flattened.sol\":20931:20936  value */\n      dup4\n        /* \"contract-dafc3583a0_flattened.sol\":20931:20947  value >= 10 ** 1 */\n      lt\n        /* \"contract-dafc3583a0_flattened.sol\":20927:20993  if (value >= 10 ** 1) {... */\n      tag_333\n      jumpi\n        /* \"contract-dafc3583a0_flattened.sol\":20977:20978  1 */\n      0x01\n        /* \"contract-dafc3583a0_flattened.sol\":20967:20978  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20927:20993  if (value >= 10 ** 1) {... */\n    tag_333:\n        /* \"contract-dafc3583a0_flattened.sol\":21019:21025  result */\n      dup1\n        /* \"contract-dafc3583a0_flattened.sol\":21012:21025  return result */\n      swap2\n      pop\n      pop\n        /* \"contract-dafc3583a0_flattened.sol\":20116:21032  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_334:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_335:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_336:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_337:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_338:\n        /* \"#utility.yul\":561:584   */\n      tag_398\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_337\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_399:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_339:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_401\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_338\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_404\n      tag_335\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":833:952   */\n    tag_403:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_405\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_339\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_340:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_341:\n        /* \"#utility.yul\":1268:1289   */\n      tag_408\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_340\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_410\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_341\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_342:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_343:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_344:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_414:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_414)\n    tag_416:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_345:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_346:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_419\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_342\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":2329:2400   */\n      tag_420\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_343\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_421\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_344\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2499:2528   */\n      tag_422\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_345\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_33:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_424\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_346\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_347:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_348:\n        /* \"#utility.yul\":3016:3040   */\n      tag_427\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_347\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_428:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_349:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_430\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_348\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_36:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_433\n      tag_335\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":3292:3411   */\n    tag_432:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_434\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_349\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_350:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_351:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_437\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_350\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_352:\n        /* \"#utility.yul\":3872:3896   */\n      tag_439\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_351\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_39:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_441\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_352\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_353:\n        /* \"#utility.yul\":4210:4234   */\n      tag_443\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_351\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_444:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_354:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_446\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_353\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_42:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_449\n      tag_335\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":4503:4622   */\n    tag_448:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_450\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_354\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_451\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_349\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_46:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_454\n      tag_335\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":5000:5119   */\n    tag_453:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_455\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_354\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_456\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_354\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_457\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_349\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_60:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_460\n      tag_335\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":5591:5710   */\n    tag_459:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_461\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_354\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_355:\n        /* \"#utility.yul\":5937:5961   */\n      tag_463\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_347\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_63:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_465\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_355\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_356:\n        /* \"#utility.yul\":6272:6293   */\n      tag_467\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_340\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_468:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_357:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_470\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_356\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_74:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_473\n      tag_335\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":6553:6672   */\n    tag_472:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_474\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_354\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_475\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_357\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_358:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_359:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_300:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_360:\n        /* \"#utility.yul\":7452:7479   */\n      tag_480\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_345\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_482\n      tag_300\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":7525:7613   */\n    tag_481:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_361:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_484\n      tag_334\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_485\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_360\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_362:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_488\n      tag_300\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":7928:7984   */\n    tag_487:\n        /* \"#utility.yul\":8002:8031   */\n      tag_489\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_345\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_363:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_364:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_492\n        /* \"#utility.yul\":8374:8422   */\n      tag_493\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_362\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":8358:8423   */\n      tag_361\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_495\n      tag_359\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8498:8610   */\n    tag_494:\n        /* \"#utility.yul\":8619:8673   */\n      tag_496\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_363\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_365:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_499\n      tag_358\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":8769:8891   */\n    tag_498:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_500\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_364\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_78:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_503\n      tag_335\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":9178:9298   */\n    tag_502:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_504\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_354\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_505\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_354\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_506\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_349\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_508\n      tag_336\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":9765:9882   */\n    tag_507:\n        /* \"#utility.yul\":9906:9968   */\n      tag_509\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_365\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10299   */\n    tag_366:\n        /* \"#utility.yul\":10053:10057   */\n      0x00\n        /* \"#utility.yul\":10143:10161   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10135:10141   */\n      dup3\n        /* \"#utility.yul\":10132:10162   */\n      gt\n        /* \"#utility.yul\":10129:10185   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":10165:10183   */\n      tag_512\n      tag_300\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10129:10185   */\n    tag_511:\n        /* \"#utility.yul\":10203:10232   */\n      tag_513\n        /* \"#utility.yul\":10225:10231   */\n      dup3\n        /* \"#utility.yul\":10203:10232   */\n      tag_345\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10195:10232   */\n      swap1\n      pop\n        /* \"#utility.yul\":10287:10291   */\n      0x20\n        /* \"#utility.yul\":10281:10285   */\n      dup2\n        /* \"#utility.yul\":10277:10292   */\n      add\n        /* \"#utility.yul\":10269:10292   */\n      swap1\n      pop\n        /* \"#utility.yul\":9991:10299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10305:10730   */\n    tag_367:\n        /* \"#utility.yul\":10383:10388   */\n      0x00\n        /* \"#utility.yul\":10408:10474   */\n      tag_515\n        /* \"#utility.yul\":10424:10473   */\n      tag_516\n        /* \"#utility.yul\":10466:10472   */\n      dup5\n        /* \"#utility.yul\":10424:10473   */\n      tag_366\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":10408:10474   */\n      tag_361\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10399:10474   */\n      swap1\n      pop\n        /* \"#utility.yul\":10497:10503   */\n      dup3\n        /* \"#utility.yul\":10490:10495   */\n      dup2\n        /* \"#utility.yul\":10483:10504   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x20\n        /* \"#utility.yul\":10528:10533   */\n      dup2\n        /* \"#utility.yul\":10524:10540   */\n      add\n        /* \"#utility.yul\":10573:10576   */\n      dup5\n        /* \"#utility.yul\":10564:10570   */\n      dup5\n        /* \"#utility.yul\":10559:10562   */\n      dup5\n        /* \"#utility.yul\":10555:10571   */\n      add\n        /* \"#utility.yul\":10552:10577   */\n      gt\n        /* \"#utility.yul\":10549:10661   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":10580:10659   */\n      tag_518\n      tag_359\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10549:10661   */\n    tag_517:\n        /* \"#utility.yul\":10670:10724   */\n      tag_519\n        /* \"#utility.yul\":10717:10723   */\n      dup5\n        /* \"#utility.yul\":10712:10715   */\n      dup3\n        /* \"#utility.yul\":10707:10710   */\n      dup6\n        /* \"#utility.yul\":10670:10724   */\n      tag_363\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":10389:10730   */\n      pop\n        /* \"#utility.yul\":10305:10730   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10750:11090   */\n    tag_368:\n        /* \"#utility.yul\":10806:10811   */\n      0x00\n        /* \"#utility.yul\":10855:10858   */\n      dup3\n        /* \"#utility.yul\":10848:10852   */\n      0x1f\n        /* \"#utility.yul\":10840:10846   */\n      dup4\n        /* \"#utility.yul\":10836:10853   */\n      add\n        /* \"#utility.yul\":10832:10859   */\n      slt\n        /* \"#utility.yul\":10822:10944   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":10863:10942   */\n      tag_522\n      tag_358\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":10822:10944   */\n    tag_521:\n        /* \"#utility.yul\":10980:10986   */\n      dup2\n        /* \"#utility.yul\":10967:10987   */\n      calldataload\n        /* \"#utility.yul\":11005:11084   */\n      tag_523\n        /* \"#utility.yul\":11080:11083   */\n      dup5\n        /* \"#utility.yul\":11072:11078   */\n      dup3\n        /* \"#utility.yul\":11065:11069   */\n      0x20\n        /* \"#utility.yul\":11057:11063   */\n      dup7\n        /* \"#utility.yul\":11053:11070   */\n      add\n        /* \"#utility.yul\":11005:11084   */\n      tag_367\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":10996:11084   */\n      swap2\n      pop\n        /* \"#utility.yul\":10812:11090   */\n      pop\n        /* \"#utility.yul\":10750:11090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11096:11750   */\n    tag_86:\n        /* \"#utility.yul\":11174:11180   */\n      0x00\n        /* \"#utility.yul\":11182:11188   */\n      dup1\n        /* \"#utility.yul\":11231:11233   */\n      0x40\n        /* \"#utility.yul\":11219:11228   */\n      dup4\n        /* \"#utility.yul\":11210:11217   */\n      dup6\n        /* \"#utility.yul\":11206:11229   */\n      sub\n        /* \"#utility.yul\":11202:11234   */\n      slt\n        /* \"#utility.yul\":11199:11318   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":11237:11316   */\n      tag_526\n      tag_335\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":11199:11318   */\n    tag_525:\n        /* \"#utility.yul\":11357:11358   */\n      0x00\n        /* \"#utility.yul\":11382:11435   */\n      tag_527\n        /* \"#utility.yul\":11427:11434   */\n      dup6\n        /* \"#utility.yul\":11418:11424   */\n      dup3\n        /* \"#utility.yul\":11407:11416   */\n      dup7\n        /* \"#utility.yul\":11403:11425   */\n      add\n        /* \"#utility.yul\":11382:11435   */\n      tag_354\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":11372:11435   */\n      swap3\n      pop\n        /* \"#utility.yul\":11328:11445   */\n      pop\n        /* \"#utility.yul\":11512:11514   */\n      0x20\n        /* \"#utility.yul\":11501:11510   */\n      dup4\n        /* \"#utility.yul\":11497:11515   */\n      add\n        /* \"#utility.yul\":11484:11516   */\n      calldataload\n        /* \"#utility.yul\":11543:11561   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11535:11541   */\n      dup2\n        /* \"#utility.yul\":11532:11562   */\n      gt\n        /* \"#utility.yul\":11529:11646   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":11565:11644   */\n      tag_529\n      tag_336\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":11529:11646   */\n    tag_528:\n        /* \"#utility.yul\":11670:11733   */\n      tag_530\n        /* \"#utility.yul\":11725:11732   */\n      dup6\n        /* \"#utility.yul\":11716:11722   */\n      dup3\n        /* \"#utility.yul\":11705:11714   */\n      dup7\n        /* \"#utility.yul\":11701:11723   */\n      add\n        /* \"#utility.yul\":11670:11733   */\n      tag_368\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":11660:11733   */\n      swap2\n      pop\n        /* \"#utility.yul\":11455:11743   */\n      pop\n        /* \"#utility.yul\":11096:11750   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11756:12230   */\n    tag_90:\n        /* \"#utility.yul\":11824:11830   */\n      0x00\n        /* \"#utility.yul\":11832:11838   */\n      dup1\n        /* \"#utility.yul\":11881:11883   */\n      0x40\n        /* \"#utility.yul\":11869:11878   */\n      dup4\n        /* \"#utility.yul\":11860:11867   */\n      dup6\n        /* \"#utility.yul\":11856:11879   */\n      sub\n        /* \"#utility.yul\":11852:11884   */\n      slt\n        /* \"#utility.yul\":11849:11968   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":11887:11966   */\n      tag_533\n      tag_335\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":11849:11968   */\n    tag_532:\n        /* \"#utility.yul\":12007:12008   */\n      0x00\n        /* \"#utility.yul\":12032:12085   */\n      tag_534\n        /* \"#utility.yul\":12077:12084   */\n      dup6\n        /* \"#utility.yul\":12068:12074   */\n      dup3\n        /* \"#utility.yul\":12057:12066   */\n      dup7\n        /* \"#utility.yul\":12053:12075   */\n      add\n        /* \"#utility.yul\":12032:12085   */\n      tag_354\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":12022:12085   */\n      swap3\n      pop\n        /* \"#utility.yul\":11978:12095   */\n      pop\n        /* \"#utility.yul\":12134:12136   */\n      0x20\n        /* \"#utility.yul\":12160:12213   */\n      tag_535\n        /* \"#utility.yul\":12205:12212   */\n      dup6\n        /* \"#utility.yul\":12196:12202   */\n      dup3\n        /* \"#utility.yul\":12185:12194   */\n      dup7\n        /* \"#utility.yul\":12181:12203   */\n      add\n        /* \"#utility.yul\":12160:12213   */\n      tag_354\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":12150:12213   */\n      swap2\n      pop\n        /* \"#utility.yul\":12105:12223   */\n      pop\n        /* \"#utility.yul\":11756:12230   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12236:12416   */\n    tag_369:\n        /* \"#utility.yul\":12284:12361   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12281:12282   */\n      0x00\n        /* \"#utility.yul\":12274:12362   */\n      mstore\n        /* \"#utility.yul\":12381:12385   */\n      0x22\n        /* \"#utility.yul\":12378:12379   */\n      0x04\n        /* \"#utility.yul\":12371:12386   */\n      mstore\n        /* \"#utility.yul\":12405:12409   */\n      0x24\n        /* \"#utility.yul\":12402:12403   */\n      0x00\n        /* \"#utility.yul\":12395:12410   */\n      revert\n        /* \"#utility.yul\":12422:12742   */\n    tag_101:\n        /* \"#utility.yul\":12466:12472   */\n      0x00\n        /* \"#utility.yul\":12503:12504   */\n      0x02\n        /* \"#utility.yul\":12497:12501   */\n      dup3\n        /* \"#utility.yul\":12493:12505   */\n      div\n        /* \"#utility.yul\":12483:12505   */\n      swap1\n      pop\n        /* \"#utility.yul\":12550:12551   */\n      0x01\n        /* \"#utility.yul\":12544:12548   */\n      dup3\n        /* \"#utility.yul\":12540:12552   */\n      and\n        /* \"#utility.yul\":12571:12589   */\n      dup1\n        /* \"#utility.yul\":12561:12642   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":12627:12631   */\n      0x7f\n        /* \"#utility.yul\":12619:12625   */\n      dup3\n        /* \"#utility.yul\":12615:12632   */\n      and\n        /* \"#utility.yul\":12605:12632   */\n      swap2\n      pop\n        /* \"#utility.yul\":12561:12642   */\n    tag_538:\n        /* \"#utility.yul\":12689:12691   */\n      0x20\n        /* \"#utility.yul\":12681:12687   */\n      dup3\n        /* \"#utility.yul\":12678:12692   */\n      lt\n        /* \"#utility.yul\":12658:12676   */\n      dup2\n        /* \"#utility.yul\":12655:12693   */\n      sub\n        /* \"#utility.yul\":12652:12736   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":12708:12726   */\n      tag_540\n      tag_369\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":12652:12736   */\n    tag_539:\n        /* \"#utility.yul\":12473:12742   */\n      pop\n        /* \"#utility.yul\":12422:12742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12748:13190   */\n    tag_124:\n        /* \"#utility.yul\":12897:12901   */\n      0x00\n        /* \"#utility.yul\":12935:12937   */\n      0x60\n        /* \"#utility.yul\":12924:12933   */\n      dup3\n        /* \"#utility.yul\":12920:12938   */\n      add\n        /* \"#utility.yul\":12912:12938   */\n      swap1\n      pop\n        /* \"#utility.yul\":12948:13019   */\n      tag_542\n        /* \"#utility.yul\":13016:13017   */\n      0x00\n        /* \"#utility.yul\":13005:13014   */\n      dup4\n        /* \"#utility.yul\":13001:13018   */\n      add\n        /* \"#utility.yul\":12992:12998   */\n      dup7\n        /* \"#utility.yul\":12948:13019   */\n      tag_352\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":13029:13101   */\n      tag_543\n        /* \"#utility.yul\":13097:13099   */\n      0x20\n        /* \"#utility.yul\":13086:13095   */\n      dup4\n        /* \"#utility.yul\":13082:13100   */\n      add\n        /* \"#utility.yul\":13073:13079   */\n      dup6\n        /* \"#utility.yul\":13029:13101   */\n      tag_355\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13111:13183   */\n      tag_544\n        /* \"#utility.yul\":13179:13181   */\n      0x40\n        /* \"#utility.yul\":13168:13177   */\n      dup4\n        /* \"#utility.yul\":13164:13182   */\n      add\n        /* \"#utility.yul\":13155:13161   */\n      dup5\n        /* \"#utility.yul\":13111:13183   */\n      tag_352\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":12748:13190   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13196:13376   */\n    tag_370:\n        /* \"#utility.yul\":13244:13321   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13241:13242   */\n      0x00\n        /* \"#utility.yul\":13234:13322   */\n      mstore\n        /* \"#utility.yul\":13341:13345   */\n      0x11\n        /* \"#utility.yul\":13338:13339   */\n      0x04\n        /* \"#utility.yul\":13331:13346   */\n      mstore\n        /* \"#utility.yul\":13365:13369   */\n      0x24\n        /* \"#utility.yul\":13362:13363   */\n      0x00\n        /* \"#utility.yul\":13355:13370   */\n      revert\n        /* \"#utility.yul\":13382:13615   */\n    tag_163:\n        /* \"#utility.yul\":13421:13424   */\n      0x00\n        /* \"#utility.yul\":13444:13468   */\n      tag_547\n        /* \"#utility.yul\":13462:13467   */\n      dup3\n        /* \"#utility.yul\":13444:13468   */\n      tag_347\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13435:13468   */\n      swap2\n      pop\n        /* \"#utility.yul\":13490:13556   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13483:13488   */\n      dup3\n        /* \"#utility.yul\":13480:13557   */\n      sub\n        /* \"#utility.yul\":13477:13580   */\n      tag_548\n      jumpi\n        /* \"#utility.yul\":13560:13578   */\n      tag_549\n      tag_370\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":13477:13580   */\n    tag_548:\n        /* \"#utility.yul\":13607:13608   */\n      0x01\n        /* \"#utility.yul\":13600:13605   */\n      dup3\n        /* \"#utility.yul\":13596:13609   */\n      add\n        /* \"#utility.yul\":13589:13609   */\n      swap1\n      pop\n        /* \"#utility.yul\":13382:13615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13621:13719   */\n    tag_371:\n        /* \"#utility.yul\":13672:13678   */\n      0x00\n        /* \"#utility.yul\":13706:13711   */\n      dup2\n        /* \"#utility.yul\":13700:13712   */\n      mload\n        /* \"#utility.yul\":13690:13712   */\n      swap1\n      pop\n        /* \"#utility.yul\":13621:13719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13725:13893   */\n    tag_372:\n        /* \"#utility.yul\":13808:13819   */\n      0x00\n        /* \"#utility.yul\":13842:13848   */\n      dup3\n        /* \"#utility.yul\":13837:13840   */\n      dup3\n        /* \"#utility.yul\":13830:13849   */\n      mstore\n        /* \"#utility.yul\":13882:13886   */\n      0x20\n        /* \"#utility.yul\":13877:13880   */\n      dup3\n        /* \"#utility.yul\":13873:13887   */\n      add\n        /* \"#utility.yul\":13858:13887   */\n      swap1\n      pop\n        /* \"#utility.yul\":13725:13893   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13899:14272   */\n    tag_373:\n        /* \"#utility.yul\":13985:13988   */\n      0x00\n        /* \"#utility.yul\":14013:14051   */\n      tag_553\n        /* \"#utility.yul\":14045:14050   */\n      dup3\n        /* \"#utility.yul\":14013:14051   */\n      tag_371\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":14067:14137   */\n      tag_554\n        /* \"#utility.yul\":14130:14136   */\n      dup2\n        /* \"#utility.yul\":14125:14128   */\n      dup6\n        /* \"#utility.yul\":14067:14137   */\n      tag_372\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":14060:14137   */\n      swap4\n      pop\n        /* \"#utility.yul\":14146:14211   */\n      tag_555\n        /* \"#utility.yul\":14204:14210   */\n      dup2\n        /* \"#utility.yul\":14199:14202   */\n      dup6\n        /* \"#utility.yul\":14192:14196   */\n      0x20\n        /* \"#utility.yul\":14185:14190   */\n      dup7\n        /* \"#utility.yul\":14181:14197   */\n      add\n        /* \"#utility.yul\":14146:14211   */\n      tag_344\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":14236:14265   */\n      tag_556\n        /* \"#utility.yul\":14258:14264   */\n      dup2\n        /* \"#utility.yul\":14236:14265   */\n      tag_345\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":14231:14234   */\n      dup5\n        /* \"#utility.yul\":14227:14266   */\n      add\n        /* \"#utility.yul\":14220:14266   */\n      swap2\n      pop\n        /* \"#utility.yul\":13989:14272   */\n      pop\n        /* \"#utility.yul\":13899:14272   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14278:14918   */\n    tag_212:\n        /* \"#utility.yul\":14473:14477   */\n      0x00\n        /* \"#utility.yul\":14511:14514   */\n      0x80\n        /* \"#utility.yul\":14500:14509   */\n      dup3\n        /* \"#utility.yul\":14496:14515   */\n      add\n        /* \"#utility.yul\":14488:14515   */\n      swap1\n      pop\n        /* \"#utility.yul\":14525:14596   */\n      tag_558\n        /* \"#utility.yul\":14593:14594   */\n      0x00\n        /* \"#utility.yul\":14582:14591   */\n      dup4\n        /* \"#utility.yul\":14578:14595   */\n      add\n        /* \"#utility.yul\":14569:14575   */\n      dup8\n        /* \"#utility.yul\":14525:14596   */\n      tag_352\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":14606:14678   */\n      tag_559\n        /* \"#utility.yul\":14674:14676   */\n      0x20\n        /* \"#utility.yul\":14663:14672   */\n      dup4\n        /* \"#utility.yul\":14659:14677   */\n      add\n        /* \"#utility.yul\":14650:14656   */\n      dup7\n        /* \"#utility.yul\":14606:14678   */\n      tag_352\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":14688:14760   */\n      tag_560\n        /* \"#utility.yul\":14756:14758   */\n      0x40\n        /* \"#utility.yul\":14745:14754   */\n      dup4\n        /* \"#utility.yul\":14741:14759   */\n      add\n        /* \"#utility.yul\":14732:14738   */\n      dup6\n        /* \"#utility.yul\":14688:14760   */\n      tag_355\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":14807:14816   */\n      dup2\n        /* \"#utility.yul\":14801:14805   */\n      dup2\n        /* \"#utility.yul\":14797:14817   */\n      sub\n        /* \"#utility.yul\":14792:14794   */\n      0x60\n        /* \"#utility.yul\":14781:14790   */\n      dup4\n        /* \"#utility.yul\":14777:14795   */\n      add\n        /* \"#utility.yul\":14770:14818   */\n      mstore\n        /* \"#utility.yul\":14835:14911   */\n      tag_561\n        /* \"#utility.yul\":14906:14910   */\n      dup2\n        /* \"#utility.yul\":14897:14903   */\n      dup5\n        /* \"#utility.yul\":14835:14911   */\n      tag_373\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":14827:14911   */\n      swap1\n      pop\n        /* \"#utility.yul\":14278:14918   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14924:15065   */\n    tag_374:\n        /* \"#utility.yul\":14980:14985   */\n      0x00\n        /* \"#utility.yul\":15011:15017   */\n      dup2\n        /* \"#utility.yul\":15005:15018   */\n      mload\n        /* \"#utility.yul\":14996:15018   */\n      swap1\n      pop\n        /* \"#utility.yul\":15027:15059   */\n      tag_563\n        /* \"#utility.yul\":15053:15058   */\n      dup2\n        /* \"#utility.yul\":15027:15059   */\n      tag_338\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":14924:15065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15071:15420   */\n    tag_215:\n        /* \"#utility.yul\":15140:15146   */\n      0x00\n        /* \"#utility.yul\":15189:15191   */\n      0x20\n        /* \"#utility.yul\":15177:15186   */\n      dup3\n        /* \"#utility.yul\":15168:15175   */\n      dup5\n        /* \"#utility.yul\":15164:15187   */\n      sub\n        /* \"#utility.yul\":15160:15192   */\n      slt\n        /* \"#utility.yul\":15157:15276   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":15195:15274   */\n      tag_566\n      tag_335\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":15157:15276   */\n    tag_565:\n        /* \"#utility.yul\":15315:15316   */\n      0x00\n        /* \"#utility.yul\":15340:15403   */\n      tag_567\n        /* \"#utility.yul\":15395:15402   */\n      dup5\n        /* \"#utility.yul\":15386:15392   */\n      dup3\n        /* \"#utility.yul\":15375:15384   */\n      dup6\n        /* \"#utility.yul\":15371:15393   */\n      add\n        /* \"#utility.yul\":15340:15403   */\n      tag_374\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":15330:15403   */\n      swap2\n      pop\n        /* \"#utility.yul\":15286:15413   */\n      pop\n        /* \"#utility.yul\":15071:15420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15426:15574   */\n    tag_375:\n        /* \"#utility.yul\":15528:15539   */\n      0x00\n        /* \"#utility.yul\":15565:15568   */\n      dup2\n        /* \"#utility.yul\":15550:15568   */\n      swap1\n      pop\n        /* \"#utility.yul\":15426:15574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15580:15970   */\n    tag_376:\n        /* \"#utility.yul\":15686:15689   */\n      0x00\n        /* \"#utility.yul\":15714:15753   */\n      tag_570\n        /* \"#utility.yul\":15747:15752   */\n      dup3\n        /* \"#utility.yul\":15714:15753   */\n      tag_342\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":15769:15858   */\n      tag_571\n        /* \"#utility.yul\":15851:15857   */\n      dup2\n        /* \"#utility.yul\":15846:15849   */\n      dup6\n        /* \"#utility.yul\":15769:15858   */\n      tag_375\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":15762:15858   */\n      swap4\n      pop\n        /* \"#utility.yul\":15867:15932   */\n      tag_572\n        /* \"#utility.yul\":15925:15931   */\n      dup2\n        /* \"#utility.yul\":15920:15923   */\n      dup6\n        /* \"#utility.yul\":15913:15917   */\n      0x20\n        /* \"#utility.yul\":15906:15911   */\n      dup7\n        /* \"#utility.yul\":15902:15918   */\n      add\n        /* \"#utility.yul\":15867:15932   */\n      tag_344\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":15957:15963   */\n      dup1\n        /* \"#utility.yul\":15952:15955   */\n      dup5\n        /* \"#utility.yul\":15948:15964   */\n      add\n        /* \"#utility.yul\":15941:15964   */\n      swap2\n      pop\n        /* \"#utility.yul\":15690:15970   */\n      pop\n        /* \"#utility.yul\":15580:15970   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15976:16411   */\n    tag_240:\n        /* \"#utility.yul\":16156:16159   */\n      0x00\n        /* \"#utility.yul\":16178:16273   */\n      tag_574\n        /* \"#utility.yul\":16269:16272   */\n      dup3\n        /* \"#utility.yul\":16260:16266   */\n      dup6\n        /* \"#utility.yul\":16178:16273   */\n      tag_376\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":16171:16273   */\n      swap2\n      pop\n        /* \"#utility.yul\":16290:16385   */\n      tag_575\n        /* \"#utility.yul\":16381:16384   */\n      dup3\n        /* \"#utility.yul\":16372:16378   */\n      dup5\n        /* \"#utility.yul\":16290:16385   */\n      tag_376\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":16283:16385   */\n      swap2\n      pop\n        /* \"#utility.yul\":16402:16405   */\n      dup2\n        /* \"#utility.yul\":16395:16405   */\n      swap1\n      pop\n        /* \"#utility.yul\":15976:16411   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16417:16558   */\n    tag_377:\n        /* \"#utility.yul\":16466:16470   */\n      0x00\n        /* \"#utility.yul\":16489:16492   */\n      dup2\n        /* \"#utility.yul\":16481:16492   */\n      swap1\n      pop\n        /* \"#utility.yul\":16512:16515   */\n      dup2\n        /* \"#utility.yul\":16509:16510   */\n      0x00\n        /* \"#utility.yul\":16502:16516   */\n      mstore\n        /* \"#utility.yul\":16546:16550   */\n      0x20\n        /* \"#utility.yul\":16543:16544   */\n      0x00\n        /* \"#utility.yul\":16533:16551   */\n      keccak256\n        /* \"#utility.yul\":16525:16551   */\n      swap1\n      pop\n        /* \"#utility.yul\":16417:16558   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16564:16657   */\n    tag_378:\n        /* \"#utility.yul\":16601:16607   */\n      0x00\n        /* \"#utility.yul\":16648:16650   */\n      0x20\n        /* \"#utility.yul\":16643:16645   */\n      0x1f\n        /* \"#utility.yul\":16636:16641   */\n      dup4\n        /* \"#utility.yul\":16632:16646   */\n      add\n        /* \"#utility.yul\":16628:16651   */\n      div\n        /* \"#utility.yul\":16618:16651   */\n      swap1\n      pop\n        /* \"#utility.yul\":16564:16657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16663:16770   */\n    tag_379:\n        /* \"#utility.yul\":16707:16715   */\n      0x00\n        /* \"#utility.yul\":16757:16762   */\n      dup3\n        /* \"#utility.yul\":16751:16755   */\n      dup3\n        /* \"#utility.yul\":16747:16763   */\n      shl\n        /* \"#utility.yul\":16726:16763   */\n      swap1\n      pop\n        /* \"#utility.yul\":16663:16770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16776:17169   */\n    tag_380:\n        /* \"#utility.yul\":16845:16851   */\n      0x00\n        /* \"#utility.yul\":16895:16896   */\n      0x08\n        /* \"#utility.yul\":16883:16893   */\n      dup4\n        /* \"#utility.yul\":16879:16897   */\n      mul\n        /* \"#utility.yul\":16918:17015   */\n      tag_580\n        /* \"#utility.yul\":16948:17014   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16937:16946   */\n      dup3\n        /* \"#utility.yul\":16918:17015   */\n      tag_379\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":17036:17075   */\n      tag_581\n        /* \"#utility.yul\":17066:17074   */\n      dup7\n        /* \"#utility.yul\":17055:17064   */\n      dup4\n        /* \"#utility.yul\":17036:17075   */\n      tag_379\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":17024:17075   */\n      swap6\n      pop\n        /* \"#utility.yul\":17108:17112   */\n      dup1\n        /* \"#utility.yul\":17104:17113   */\n      not\n        /* \"#utility.yul\":17097:17102   */\n      dup5\n        /* \"#utility.yul\":17093:17114   */\n      and\n        /* \"#utility.yul\":17084:17114   */\n      swap4\n      pop\n        /* \"#utility.yul\":17157:17161   */\n      dup1\n        /* \"#utility.yul\":17147:17155   */\n      dup7\n        /* \"#utility.yul\":17143:17162   */\n      and\n        /* \"#utility.yul\":17136:17141   */\n      dup5\n        /* \"#utility.yul\":17133:17163   */\n      or\n        /* \"#utility.yul\":17123:17163   */\n      swap3\n      pop\n        /* \"#utility.yul\":16852:17169   */\n      pop\n      pop\n        /* \"#utility.yul\":16776:17169   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17175:17235   */\n    tag_381:\n        /* \"#utility.yul\":17203:17206   */\n      0x00\n        /* \"#utility.yul\":17224:17229   */\n      dup2\n        /* \"#utility.yul\":17217:17229   */\n      swap1\n      pop\n        /* \"#utility.yul\":17175:17235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17241:17383   */\n    tag_382:\n        /* \"#utility.yul\":17291:17300   */\n      0x00\n        /* \"#utility.yul\":17324:17377   */\n      tag_584\n        /* \"#utility.yul\":17342:17376   */\n      tag_585\n        /* \"#utility.yul\":17351:17375   */\n      tag_586\n        /* \"#utility.yul\":17369:17374   */\n      dup5\n        /* \"#utility.yul\":17351:17375   */\n      tag_347\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":17342:17376   */\n      tag_381\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":17324:17377   */\n      tag_347\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":17311:17377   */\n      swap1\n      pop\n        /* \"#utility.yul\":17241:17383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17389:17464   */\n    tag_383:\n        /* \"#utility.yul\":17432:17435   */\n      0x00\n        /* \"#utility.yul\":17453:17458   */\n      dup2\n        /* \"#utility.yul\":17446:17458   */\n      swap1\n      pop\n        /* \"#utility.yul\":17389:17464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17470:17739   */\n    tag_384:\n        /* \"#utility.yul\":17580:17619   */\n      tag_589\n        /* \"#utility.yul\":17611:17618   */\n      dup4\n        /* \"#utility.yul\":17580:17619   */\n      tag_382\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":17641:17732   */\n      tag_590\n        /* \"#utility.yul\":17690:17731   */\n      tag_591\n        /* \"#utility.yul\":17714:17730   */\n      dup3\n        /* \"#utility.yul\":17690:17731   */\n      tag_383\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":17682:17688   */\n      dup5\n        /* \"#utility.yul\":17675:17679   */\n      dup5\n        /* \"#utility.yul\":17669:17680   */\n      sload\n        /* \"#utility.yul\":17641:17732   */\n      tag_380\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":17635:17639   */\n      dup3\n        /* \"#utility.yul\":17628:17733   */\n      sstore\n        /* \"#utility.yul\":17546:17739   */\n      pop\n        /* \"#utility.yul\":17470:17739   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17745:17818   */\n    tag_385:\n        /* \"#utility.yul\":17790:17793   */\n      0x00\n        /* \"#utility.yul\":17745:17818   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17824:18013   */\n    tag_386:\n        /* \"#utility.yul\":17901:17933   */\n      tag_594\n      tag_385\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":17942:18007   */\n      tag_595\n        /* \"#utility.yul\":18000:18006   */\n      dup2\n        /* \"#utility.yul\":17992:17998   */\n      dup5\n        /* \"#utility.yul\":17986:17990   */\n      dup5\n        /* \"#utility.yul\":17942:18007   */\n      tag_384\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":17877:18013   */\n      pop\n        /* \"#utility.yul\":17824:18013   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18019:18205   */\n    tag_387:\n        /* \"#utility.yul\":18079:18199   */\n    tag_597:\n        /* \"#utility.yul\":18096:18099   */\n      dup2\n        /* \"#utility.yul\":18089:18094   */\n      dup2\n        /* \"#utility.yul\":18086:18100   */\n      lt\n        /* \"#utility.yul\":18079:18199   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":18150:18189   */\n      tag_600\n        /* \"#utility.yul\":18187:18188   */\n      0x00\n        /* \"#utility.yul\":18180:18185   */\n      dup3\n        /* \"#utility.yul\":18150:18189   */\n      tag_386\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":18123:18124   */\n      0x01\n        /* \"#utility.yul\":18116:18121   */\n      dup2\n        /* \"#utility.yul\":18112:18125   */\n      add\n        /* \"#utility.yul\":18103:18125   */\n      swap1\n      pop\n        /* \"#utility.yul\":18079:18199   */\n      jump(tag_597)\n    tag_599:\n        /* \"#utility.yul\":18019:18205   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18211:18754   */\n    tag_388:\n        /* \"#utility.yul\":18312:18314   */\n      0x1f\n        /* \"#utility.yul\":18307:18310   */\n      dup3\n        /* \"#utility.yul\":18304:18315   */\n      gt\n        /* \"#utility.yul\":18301:18747   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":18346:18384   */\n      tag_603\n        /* \"#utility.yul\":18378:18383   */\n      dup2\n        /* \"#utility.yul\":18346:18384   */\n      tag_377\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":18430:18459   */\n      tag_604\n        /* \"#utility.yul\":18448:18458   */\n      dup5\n        /* \"#utility.yul\":18430:18459   */\n      tag_378\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":18420:18428   */\n      dup2\n        /* \"#utility.yul\":18416:18460   */\n      add\n        /* \"#utility.yul\":18613:18615   */\n      0x20\n        /* \"#utility.yul\":18601:18611   */\n      dup6\n        /* \"#utility.yul\":18598:18616   */\n      lt\n        /* \"#utility.yul\":18595:18644   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":18634:18642   */\n      dup2\n        /* \"#utility.yul\":18619:18642   */\n      swap1\n      pop\n        /* \"#utility.yul\":18595:18644   */\n    tag_605:\n        /* \"#utility.yul\":18657:18737   */\n      tag_606\n        /* \"#utility.yul\":18713:18735   */\n      tag_607\n        /* \"#utility.yul\":18731:18734   */\n      dup6\n        /* \"#utility.yul\":18713:18735   */\n      tag_378\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":18703:18711   */\n      dup4\n        /* \"#utility.yul\":18699:18736   */\n      add\n        /* \"#utility.yul\":18686:18697   */\n      dup3\n        /* \"#utility.yul\":18657:18737   */\n      tag_387\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":18316:18747   */\n      pop\n      pop\n        /* \"#utility.yul\":18301:18747   */\n    tag_602:\n        /* \"#utility.yul\":18211:18754   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18760:18877   */\n    tag_389:\n        /* \"#utility.yul\":18814:18822   */\n      0x00\n        /* \"#utility.yul\":18864:18869   */\n      dup3\n        /* \"#utility.yul\":18858:18862   */\n      dup3\n        /* \"#utility.yul\":18854:18870   */\n      shr\n        /* \"#utility.yul\":18833:18870   */\n      swap1\n      pop\n        /* \"#utility.yul\":18760:18877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18883:19052   */\n    tag_390:\n        /* \"#utility.yul\":18927:18933   */\n      0x00\n        /* \"#utility.yul\":18960:19011   */\n      tag_610\n        /* \"#utility.yul\":19008:19009   */\n      0x00\n        /* \"#utility.yul\":19004:19010   */\n      not\n        /* \"#utility.yul\":18996:19001   */\n      dup5\n        /* \"#utility.yul\":18993:18994   */\n      0x08\n        /* \"#utility.yul\":18989:19002   */\n      mul\n        /* \"#utility.yul\":18960:19011   */\n      tag_389\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":18956:19012   */\n      not\n        /* \"#utility.yul\":19041:19045   */\n      dup1\n        /* \"#utility.yul\":19035:19039   */\n      dup4\n        /* \"#utility.yul\":19031:19046   */\n      and\n        /* \"#utility.yul\":19021:19046   */\n      swap2\n      pop\n        /* \"#utility.yul\":18934:19052   */\n      pop\n        /* \"#utility.yul\":18883:19052   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19057:19352   */\n    tag_391:\n        /* \"#utility.yul\":19133:19137   */\n      0x00\n        /* \"#utility.yul\":19279:19308   */\n      tag_612\n        /* \"#utility.yul\":19304:19307   */\n      dup4\n        /* \"#utility.yul\":19298:19302   */\n      dup4\n        /* \"#utility.yul\":19279:19308   */\n      tag_390\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":19271:19308   */\n      swap2\n      pop\n        /* \"#utility.yul\":19341:19344   */\n      dup3\n        /* \"#utility.yul\":19338:19339   */\n      0x02\n        /* \"#utility.yul\":19334:19345   */\n      mul\n        /* \"#utility.yul\":19328:19332   */\n      dup3\n        /* \"#utility.yul\":19325:19346   */\n      or\n        /* \"#utility.yul\":19317:19346   */\n      swap1\n      pop\n        /* \"#utility.yul\":19057:19352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19357:20752   */\n    tag_248:\n        /* \"#utility.yul\":19474:19511   */\n      tag_614\n        /* \"#utility.yul\":19507:19510   */\n      dup3\n        /* \"#utility.yul\":19474:19511   */\n      tag_342\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":19576:19594   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19568:19574   */\n      dup2\n        /* \"#utility.yul\":19565:19595   */\n      gt\n        /* \"#utility.yul\":19562:19618   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":19598:19616   */\n      tag_616\n      tag_300\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":19562:19618   */\n    tag_615:\n        /* \"#utility.yul\":19642:19680   */\n      tag_617\n        /* \"#utility.yul\":19674:19678   */\n      dup3\n        /* \"#utility.yul\":19668:19679   */\n      sload\n        /* \"#utility.yul\":19642:19680   */\n      tag_101\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":19727:19794   */\n      tag_618\n        /* \"#utility.yul\":19787:19793   */\n      dup3\n        /* \"#utility.yul\":19779:19785   */\n      dup3\n        /* \"#utility.yul\":19773:19777   */\n      dup6\n        /* \"#utility.yul\":19727:19794   */\n      tag_388\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":19821:19822   */\n      0x00\n        /* \"#utility.yul\":19845:19849   */\n      0x20\n        /* \"#utility.yul\":19832:19849   */\n      swap1\n      pop\n        /* \"#utility.yul\":19877:19879   */\n      0x1f\n        /* \"#utility.yul\":19869:19875   */\n      dup4\n        /* \"#utility.yul\":19866:19880   */\n      gt\n        /* \"#utility.yul\":19894:19895   */\n      0x01\n        /* \"#utility.yul\":19889:20507   */\n      dup2\n      eq\n      tag_620\n      jumpi\n        /* \"#utility.yul\":20551:20552   */\n      0x00\n        /* \"#utility.yul\":20568:20574   */\n      dup5\n        /* \"#utility.yul\":20565:20642   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":20617:20626   */\n      dup3\n        /* \"#utility.yul\":20612:20615   */\n      dup8\n        /* \"#utility.yul\":20608:20627   */\n      add\n        /* \"#utility.yul\":20602:20628   */\n      mload\n        /* \"#utility.yul\":20593:20628   */\n      swap1\n      pop\n        /* \"#utility.yul\":20565:20642   */\n    tag_621:\n        /* \"#utility.yul\":20668:20735   */\n      tag_622\n        /* \"#utility.yul\":20728:20734   */\n      dup6\n        /* \"#utility.yul\":20721:20726   */\n      dup3\n        /* \"#utility.yul\":20668:20735   */\n      tag_391\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":20662:20666   */\n      dup7\n        /* \"#utility.yul\":20655:20736   */\n      sstore\n        /* \"#utility.yul\":20524:20746   */\n      pop\n        /* \"#utility.yul\":19859:20746   */\n      jump(tag_619)\n        /* \"#utility.yul\":19889:20507   */\n    tag_620:\n        /* \"#utility.yul\":19941:19945   */\n      0x1f\n        /* \"#utility.yul\":19937:19946   */\n      not\n        /* \"#utility.yul\":19929:19935   */\n      dup5\n        /* \"#utility.yul\":19925:19947   */\n      and\n        /* \"#utility.yul\":19975:20012   */\n      tag_623\n        /* \"#utility.yul\":20007:20011   */\n      dup7\n        /* \"#utility.yul\":19975:20012   */\n      tag_377\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":20034:20035   */\n      0x00\n        /* \"#utility.yul\":20048:20256   */\n    tag_624:\n        /* \"#utility.yul\":20062:20069   */\n      dup3\n        /* \"#utility.yul\":20059:20060   */\n      dup2\n        /* \"#utility.yul\":20056:20070   */\n      lt\n        /* \"#utility.yul\":20048:20256   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":20141:20150   */\n      dup5\n        /* \"#utility.yul\":20136:20139   */\n      dup10\n        /* \"#utility.yul\":20132:20151   */\n      add\n        /* \"#utility.yul\":20126:20152   */\n      mload\n        /* \"#utility.yul\":20118:20124   */\n      dup3\n        /* \"#utility.yul\":20111:20153   */\n      sstore\n        /* \"#utility.yul\":20192:20193   */\n      0x01\n        /* \"#utility.yul\":20184:20190   */\n      dup3\n        /* \"#utility.yul\":20180:20194   */\n      add\n        /* \"#utility.yul\":20170:20194   */\n      swap2\n      pop\n        /* \"#utility.yul\":20239:20241   */\n      0x20\n        /* \"#utility.yul\":20228:20237   */\n      dup6\n        /* \"#utility.yul\":20224:20242   */\n      add\n        /* \"#utility.yul\":20211:20242   */\n      swap5\n      pop\n        /* \"#utility.yul\":20085:20089   */\n      0x20\n        /* \"#utility.yul\":20082:20083   */\n      dup2\n        /* \"#utility.yul\":20078:20090   */\n      add\n        /* \"#utility.yul\":20073:20090   */\n      swap1\n      pop\n        /* \"#utility.yul\":20048:20256   */\n      jump(tag_624)\n    tag_626:\n        /* \"#utility.yul\":20284:20290   */\n      dup7\n        /* \"#utility.yul\":20275:20282   */\n      dup4\n        /* \"#utility.yul\":20272:20291   */\n      lt\n        /* \"#utility.yul\":20269:20448   */\n      iszero\n      tag_627\n      jumpi\n        /* \"#utility.yul\":20342:20351   */\n      dup5\n        /* \"#utility.yul\":20337:20340   */\n      dup10\n        /* \"#utility.yul\":20333:20352   */\n      add\n        /* \"#utility.yul\":20327:20353   */\n      mload\n        /* \"#utility.yul\":20385:20433   */\n      tag_628\n        /* \"#utility.yul\":20427:20431   */\n      0x1f\n        /* \"#utility.yul\":20419:20425   */\n      dup10\n        /* \"#utility.yul\":20415:20432   */\n      and\n        /* \"#utility.yul\":20404:20413   */\n      dup3\n        /* \"#utility.yul\":20385:20433   */\n      tag_390\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":20377:20383   */\n      dup4\n        /* \"#utility.yul\":20370:20434   */\n      sstore\n        /* \"#utility.yul\":20292:20448   */\n      pop\n        /* \"#utility.yul\":20269:20448   */\n    tag_627:\n        /* \"#utility.yul\":20494:20495   */\n      0x01\n        /* \"#utility.yul\":20490:20491   */\n      0x02\n        /* \"#utility.yul\":20482:20488   */\n      dup9\n        /* \"#utility.yul\":20478:20492   */\n      mul\n        /* \"#utility.yul\":20474:20496   */\n      add\n        /* \"#utility.yul\":20468:20472   */\n      dup9\n        /* \"#utility.yul\":20461:20497   */\n      sstore\n        /* \"#utility.yul\":19896:20507   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19859:20746   */\n    tag_619:\n      pop\n        /* \"#utility.yul\":19449:20752   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19357:20752   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20758:21090   */\n    tag_274:\n        /* \"#utility.yul\":20879:20883   */\n      0x00\n        /* \"#utility.yul\":20917:20919   */\n      0x40\n        /* \"#utility.yul\":20906:20915   */\n      dup3\n        /* \"#utility.yul\":20902:20920   */\n      add\n        /* \"#utility.yul\":20894:20920   */\n      swap1\n      pop\n        /* \"#utility.yul\":20930:21001   */\n      tag_630\n        /* \"#utility.yul\":20998:20999   */\n      0x00\n        /* \"#utility.yul\":20987:20996   */\n      dup4\n        /* \"#utility.yul\":20983:21000   */\n      add\n        /* \"#utility.yul\":20974:20980   */\n      dup6\n        /* \"#utility.yul\":20930:21001   */\n      tag_352\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":21011:21083   */\n      tag_631\n        /* \"#utility.yul\":21079:21081   */\n      0x20\n        /* \"#utility.yul\":21068:21077   */\n      dup4\n        /* \"#utility.yul\":21064:21082   */\n      add\n        /* \"#utility.yul\":21055:21061   */\n      dup5\n        /* \"#utility.yul\":21011:21083   */\n      tag_355\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":20758:21090   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21096:21276   */\n    tag_306:\n        /* \"#utility.yul\":21144:21221   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21141:21142   */\n      0x00\n        /* \"#utility.yul\":21134:21222   */\n      mstore\n        /* \"#utility.yul\":21241:21245   */\n      0x12\n        /* \"#utility.yul\":21238:21239   */\n      0x04\n        /* \"#utility.yul\":21231:21246   */\n      mstore\n        /* \"#utility.yul\":21265:21269   */\n      0x24\n        /* \"#utility.yul\":21262:21263   */\n      0x00\n        /* \"#utility.yul\":21255:21270   */\n      revert\n\n    auxdata: 0xa2646970667358221220806452a806eff68175193bbcdf101b46eacadf033b7b14d04d88fd0d1f76ac8c64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1612": {
									"entryPoint": null,
									"id": 1612,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1972": {
									"entryPoint": null,
									"id": 1972,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3076": {
									"entryPoint": null,
									"id": 3076,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_1708": {
									"entryPoint": 340,
									"id": 1708,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1032,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1075,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6778:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1272:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1244:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1254:6:1",
														"type": ""
													}
												],
												"src": "1202:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1521:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1730:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1740:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1848:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1862:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:26:1"
															},
															"nodeType": "YulIf",
															"src": "1818:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1951:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:38:1"
															},
															"nodeType": "YulIf",
															"src": "1909:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1714:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1723:6:1",
														"type": ""
													}
												],
												"src": "1679:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2059:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2069:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2077:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2113:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2046:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2054:4:1",
														"type": ""
													}
												],
												"src": "2005:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2206:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2179:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2189:6:1",
														"type": ""
													}
												],
												"src": "2152:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2304:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2314:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2279:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2285:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2295:8:1",
														"type": ""
													}
												],
												"src": "2251:107:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2440:317:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2506:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2612:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2672:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2711:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:1"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2401:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2408:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2420:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2433:6:1",
														"type": ""
													}
												],
												"src": "2364:393:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2808:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2818:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2829:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2790:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2800:7:1",
														"type": ""
													}
												],
												"src": "2763:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2878:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2888:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2895:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2864:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2874:3:1",
														"type": ""
													}
												],
												"src": "2846:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2972:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2982:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2952:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2962:9:1",
														"type": ""
													}
												],
												"src": "2912:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3107:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3117:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3124:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3103:3:1",
														"type": ""
													}
												],
												"src": "3060:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3217:193:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:105:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3194:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3200:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3208:7:1",
														"type": ""
													}
												],
												"src": "3141:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3465:24:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3475:8:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3482:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3461:3:1",
														"type": ""
													}
												],
												"src": "3416:73:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:136:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3534:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3540:6:1",
														"type": ""
													}
												],
												"src": "3495:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3740:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3807:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:14:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3772:26:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3774:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3754:2:1",
																"statements": []
															},
															"src": "3750:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "3728:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3735:3:1",
														"type": ""
													}
												],
												"src": "3690:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3961:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3987:431:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4288:27:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4290:23:1",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:1"
																		},
																		"nodeType": "YulIf",
																		"src": "4266:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3975:11:1"
															},
															"nodeType": "YulIf",
															"src": "3972:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3937:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3944:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "3949:10:1",
														"type": ""
													}
												],
												"src": "3882:543:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4494:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4504:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4469:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4475:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4485:8:1",
														"type": ""
													}
												],
												"src": "4431:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4605:118:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4692:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:1"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4702:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4582:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "4588:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4598:6:1",
														"type": ""
													}
												],
												"src": "4554:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4809:214:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4942:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:1"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4988:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4996:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4790:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4796:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "4804:4:1",
														"type": ""
													}
												],
												"src": "4728:295:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:1303:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5145:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5267:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:30:1"
															},
															"nodeType": "YulIf",
															"src": "5233:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5398:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5492:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5503:17:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5516:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5567:611:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5764:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5841:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5882:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "5742:21:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5744:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "5723:3:1",
																					"statements": []
																				},
																				"src": "5719:208:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5963:156:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:1"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "5940:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5560:618:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6195:222:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6246:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6264:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "6236:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6187:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "5530:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5109:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5115:3:1",
														"type": ""
													}
												],
												"src": "5028:1395:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6494:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6504:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6482:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6489:3:1",
														"type": ""
													}
												],
												"src": "6429:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6651:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6661:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6623:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6635:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6646:4:1",
														"type": ""
													}
												],
												"src": "6553:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162002c1338038062002c1383398181016040528101906200003691906200027c565b806040518060400160405280600881526020017f536d696c654e46540000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f534d494c45000000000000000000000000000000000000000000000000000000815250815f9081620000b3919062000510565b508060019081620000c5919062000510565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013b575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000132919062000605565b60405180910390fd5b6200014c816200015460201b60201c565b505062000620565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000246826200021b565b9050919050565b62000258816200023a565b811462000263575f80fd5b50565b5f8151905062000276816200024d565b92915050565b5f6020828403121562000294576200029362000217565b5b5f620002a38482850162000266565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200032857607f821691505b6020821081036200033e576200033d620002e3565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003a27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000365565b620003ae868362000365565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003f8620003f2620003ec84620003c6565b620003cf565b620003c6565b9050919050565b5f819050919050565b6200041383620003d8565b6200042b6200042282620003ff565b84845462000371565b825550505050565b5f90565b6200044162000433565b6200044e81848462000408565b505050565b5b818110156200047557620004695f8262000437565b60018101905062000454565b5050565b601f821115620004c4576200048e8162000344565b620004998462000356565b81016020851015620004a9578190505b620004c1620004b88562000356565b83018262000453565b50505b505050565b5f82821c905092915050565b5f620004e65f1984600802620004c9565b1980831691505092915050565b5f620005008383620004d5565b9150826002028217905092915050565b6200051b82620002ac565b67ffffffffffffffff811115620005375762000536620002b6565b5b62000543825462000310565b6200055082828562000479565b5f60209050601f83116001811462000586575f841562000571578287015190505b6200057d8582620004f3565b865550620005ec565b601f198416620005968662000344565b5f5b82811015620005bf5784890151825560018201915060208501945060208101905062000598565b86831015620005df5784890151620005db601f891682620004d5565b8355505b6001600288020188555050505b505050505050565b620005ff816200023a565b82525050565b5f6020820190506200061a5f830184620005f4565b92915050565b6125e5806200062e5f395ff3fe608060405234801561000f575f80fd5b5060043610610114575f3560e01c8063715018a6116100a0578063b88d4fde1161006f578063b88d4fde146102c8578063c87b56dd146102e4578063d204c45e14610314578063e985e9c514610330578063f2fde38b1461036057610114565b8063715018a6146102665780638da5cb5b1461027057806395d89b411461028e578063a22cb465146102ac57610114565b806323b872dd116100e757806323b872dd146101b257806342842e0e146101ce57806342966c68146101ea5780636352211e1461020657806370a082311461023657610114565b806301ffc9a71461011857806306fdde0314610148578063081812fc14610166578063095ea7b314610196575b5f80fd5b610132600480360381019061012d9190611a9e565b61037c565b60405161013f9190611ae3565b60405180910390f35b61015061038d565b60405161015d9190611b86565b60405180910390f35b610180600480360381019061017b9190611bd9565b61041c565b60405161018d9190611c43565b60405180910390f35b6101b060048036038101906101ab9190611c86565b610437565b005b6101cc60048036038101906101c79190611cc4565b61044d565b005b6101e860048036038101906101e39190611cc4565b61054c565b005b61020460048036038101906101ff9190611bd9565b61056b565b005b610220600480360381019061021b9190611bd9565b610581565b60405161022d9190611c43565b60405180910390f35b610250600480360381019061024b9190611d14565b610592565b60405161025d9190611d4e565b60405180910390f35b61026e610648565b005b61027861065b565b6040516102859190611c43565b60405180910390f35b610296610683565b6040516102a39190611b86565b60405180910390f35b6102c660048036038101906102c19190611d91565b610713565b005b6102e260048036038101906102dd9190611efb565b610729565b005b6102fe60048036038101906102f99190611bd9565b610746565b60405161030b9190611b86565b60405180910390f35b61032e60048036038101906103299190612019565b610758565b005b61034a60048036038101906103459190612073565b610792565b6040516103579190611ae3565b60405180910390f35b61037a60048036038101906103759190611d14565b610820565b005b5f610386826108a4565b9050919050565b60605f805461039b906120de565b80601f01602080910402602001604051908101604052809291908181526020018280546103c7906120de565b80156104125780601f106103e957610100808354040283529160200191610412565b820191905f5260205f20905b8154815290600101906020018083116103f557829003601f168201915b5050505050905090565b5f61042682610904565b506104308261098a565b9050919050565b61044982826104446109c3565b6109ca565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104bd575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104b49190611c43565b60405180910390fd5b5f6104d083836104cb6109c3565b6109dc565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610546578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161053d9392919061210e565b60405180910390fd5b50505050565b61056683838360405180602001604052805f815250610729565b505050565b61057d5f826105786109c3565b6109dc565b5050565b5f61058b82610904565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610603575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105fa9190611c43565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610650610be7565b6106595f610c6e565b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610692906120de565b80601f01602080910402602001604051908101604052809291908181526020018280546106be906120de565b80156107095780601f106106e057610100808354040283529160200191610709565b820191905f5260205f20905b8154815290600101906020018083116106ec57829003601f168201915b5050505050905090565b61072561071e6109c3565b8383610d31565b5050565b61073484848461044d565b61074084848484610e9a565b50505050565b60606107518261104c565b9050919050565b610760610be7565b5f60085f81548092919061077390612170565b9190505590506107838382611157565b61078d8183611174565b505050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610828610be7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610898575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161088f9190611c43565b60405180910390fd5b6108a181610c6e565b50565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806108fd57506108fc826111ce565b5b9050919050565b5f8061090f836112af565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361098157826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016109789190611d4e565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6109d783838360016112e8565b505050565b5f806109e7846112af565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a2857610a278184866114a7565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ab357610a675f855f806112e8565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610b3257600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610bef6109c3565b73ffffffffffffffffffffffffffffffffffffffff16610c0d61065b565b73ffffffffffffffffffffffffffffffffffffffff1614610c6c57610c306109c3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c639190611c43565b60405180910390fd5b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da157816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d989190611c43565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e8d9190611ae3565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611046578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610edd6109c3565b8685856040518563ffffffff1660e01b8152600401610eff9493929190612209565b6020604051808303815f875af1925050508015610f3a57506040513d601f19601f82011682018060405250810190610f379190612267565b60015b610fbb573d805f8114610f68576040519150601f19603f3d011682016040523d82523d5f602084013e610f6d565b606091505b505f815103610fb357836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610faa9190611c43565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461104457836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161103b9190611c43565b60405180910390fd5b505b50505050565b606061105782610904565b505f60065f8481526020019081526020015f208054611075906120de565b80601f01602080910402602001604051908101604052809291908181526020018280546110a1906120de565b80156110ec5780601f106110c3576101008083540402835291602001916110ec565b820191905f5260205f20905b8154815290600101906020018083116110cf57829003601f168201915b505050505090505f6110fc61156a565b90505f815103611110578192505050611152565b5f8251111561114457808260405160200161112c9291906122cc565b60405160208183030381529060405292505050611152565b61114d84611580565b925050505b919050565b611170828260405180602001604052805f8152506115e6565b5050565b8060065f8481526020019081526020015f209081611192919061248c565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516111c29190611d4e565b60405180910390a15050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061129857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806112a857506112a782611601565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061132057505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611452575f61132f84610904565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561139957508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156113ac57506113aa8184610792565b155b156113ee57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016113e59190611c43565b60405180910390fd5b811561145057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6114b283838361166a565b611565575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361152657806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161151d9190611d4e565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161155c92919061255b565b60405180910390fd5b505050565b606060405180602001604052805f815250905090565b606061158b82610904565b505f61159561156a565b90505f8151116115b35760405180602001604052805f8152506115de565b806115bd8461172a565b6040516020016115ce9291906122cc565b6040516020818303038152906040525b915050919050565b6115f083836117f4565b6115fc5f848484610e9a565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561172157508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806116e257506116e18484610792565b5b8061172057508273ffffffffffffffffffffffffffffffffffffffff166117088361098a565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b60605f6001611738846118e7565b0190505f8167ffffffffffffffff81111561175657611755611dd7565b5b6040519080825280601f01601f1916602001820160405280156117885781602001600182028036833780820191505090505b5090505f82602001820190505b6001156117e9578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816117de576117dd612582565b5b0494505f8503611795575b819350505050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611864575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161185b9190611c43565b60405180910390fd5b5f61187083835f6109dc565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146118e2575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016118d99190611c43565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611943577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161193957611938612582565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611980576d04ee2d6d415b85acef8100000000838161197657611975612582565b5b0492506020810190505b662386f26fc1000083106119af57662386f26fc1000083816119a5576119a4612582565b5b0492506010810190505b6305f5e10083106119d8576305f5e10083816119ce576119cd612582565b5b0492506008810190505b61271083106119fd5761271083816119f3576119f2612582565b5b0492506004810190505b60648310611a205760648381611a1657611a15612582565b5b0492506002810190505b600a8310611a2f576001810190505b80915050919050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a7d81611a49565b8114611a87575f80fd5b50565b5f81359050611a9881611a74565b92915050565b5f60208284031215611ab357611ab2611a41565b5b5f611ac084828501611a8a565b91505092915050565b5f8115159050919050565b611add81611ac9565b82525050565b5f602082019050611af65f830184611ad4565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611b33578082015181840152602081019050611b18565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611b5882611afc565b611b628185611b06565b9350611b72818560208601611b16565b611b7b81611b3e565b840191505092915050565b5f6020820190508181035f830152611b9e8184611b4e565b905092915050565b5f819050919050565b611bb881611ba6565b8114611bc2575f80fd5b50565b5f81359050611bd381611baf565b92915050565b5f60208284031215611bee57611bed611a41565b5b5f611bfb84828501611bc5565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c2d82611c04565b9050919050565b611c3d81611c23565b82525050565b5f602082019050611c565f830184611c34565b92915050565b611c6581611c23565b8114611c6f575f80fd5b50565b5f81359050611c8081611c5c565b92915050565b5f8060408385031215611c9c57611c9b611a41565b5b5f611ca985828601611c72565b9250506020611cba85828601611bc5565b9150509250929050565b5f805f60608486031215611cdb57611cda611a41565b5b5f611ce886828701611c72565b9350506020611cf986828701611c72565b9250506040611d0a86828701611bc5565b9150509250925092565b5f60208284031215611d2957611d28611a41565b5b5f611d3684828501611c72565b91505092915050565b611d4881611ba6565b82525050565b5f602082019050611d615f830184611d3f565b92915050565b611d7081611ac9565b8114611d7a575f80fd5b50565b5f81359050611d8b81611d67565b92915050565b5f8060408385031215611da757611da6611a41565b5b5f611db485828601611c72565b9250506020611dc585828601611d7d565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611e0d82611b3e565b810181811067ffffffffffffffff82111715611e2c57611e2b611dd7565b5b80604052505050565b5f611e3e611a38565b9050611e4a8282611e04565b919050565b5f67ffffffffffffffff821115611e6957611e68611dd7565b5b611e7282611b3e565b9050602081019050919050565b828183375f83830152505050565b5f611e9f611e9a84611e4f565b611e35565b905082815260208101848484011115611ebb57611eba611dd3565b5b611ec6848285611e7f565b509392505050565b5f82601f830112611ee257611ee1611dcf565b5b8135611ef2848260208601611e8d565b91505092915050565b5f805f8060808587031215611f1357611f12611a41565b5b5f611f2087828801611c72565b9450506020611f3187828801611c72565b9350506040611f4287828801611bc5565b925050606085013567ffffffffffffffff811115611f6357611f62611a45565b5b611f6f87828801611ece565b91505092959194509250565b5f67ffffffffffffffff821115611f9557611f94611dd7565b5b611f9e82611b3e565b9050602081019050919050565b5f611fbd611fb884611f7b565b611e35565b905082815260208101848484011115611fd957611fd8611dd3565b5b611fe4848285611e7f565b509392505050565b5f82601f83011261200057611fff611dcf565b5b8135612010848260208601611fab565b91505092915050565b5f806040838503121561202f5761202e611a41565b5b5f61203c85828601611c72565b925050602083013567ffffffffffffffff81111561205d5761205c611a45565b5b61206985828601611fec565b9150509250929050565b5f806040838503121561208957612088611a41565b5b5f61209685828601611c72565b92505060206120a785828601611c72565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806120f557607f821691505b602082108103612108576121076120b1565b5b50919050565b5f6060820190506121215f830186611c34565b61212e6020830185611d3f565b61213b6040830184611c34565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61217a82611ba6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121ac576121ab612143565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6121db826121b7565b6121e581856121c1565b93506121f5818560208601611b16565b6121fe81611b3e565b840191505092915050565b5f60808201905061221c5f830187611c34565b6122296020830186611c34565b6122366040830185611d3f565b818103606083015261224881846121d1565b905095945050505050565b5f8151905061226181611a74565b92915050565b5f6020828403121561227c5761227b611a41565b5b5f61228984828501612253565b91505092915050565b5f81905092915050565b5f6122a682611afc565b6122b08185612292565b93506122c0818560208601611b16565b80840191505092915050565b5f6122d7828561229c565b91506122e3828461229c565b91508190509392505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261234b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612310565b6123558683612310565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61239061238b61238684611ba6565b61236d565b611ba6565b9050919050565b5f819050919050565b6123a983612376565b6123bd6123b582612397565b84845461231c565b825550505050565b5f90565b6123d16123c5565b6123dc8184846123a0565b505050565b5b818110156123ff576123f45f826123c9565b6001810190506123e2565b5050565b601f82111561244457612415816122ef565b61241e84612301565b8101602085101561242d578190505b61244161243985612301565b8301826123e1565b50505b505050565b5f82821c905092915050565b5f6124645f1984600802612449565b1980831691505092915050565b5f61247c8383612455565b9150826002028217905092915050565b61249582611afc565b67ffffffffffffffff8111156124ae576124ad611dd7565b5b6124b882546120de565b6124c3828285612403565b5f60209050601f8311600181146124f4575f84156124e2578287015190505b6124ec8582612471565b865550612553565b601f198416612502866122ef565b5f5b8281101561252957848901518255600182019150602085019450602081019050612504565b868310156125465784890151612542601f891682612455565b8355505b6001600288020188555050505b505050505050565b5f60408201905061256e5f830185611c34565b61257b6020830184611d3f565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220806452a806eff68175193bbcdf101b46eacadf033b7b14d04d88fd0d1f76ac8c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2C13 CODESIZE SUB DUP1 PUSH3 0x2C13 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x27C JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536D696C654E4654000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x534D494C45000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0xB3 SWAP2 SWAP1 PUSH3 0x510 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0x510 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x132 SWAP2 SWAP1 PUSH3 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x14C DUP2 PUSH3 0x154 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x620 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x246 DUP3 PUSH3 0x21B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x258 DUP2 PUSH3 0x23A JUMP JUMPDEST DUP2 EQ PUSH3 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x276 DUP2 PUSH3 0x24D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x294 JUMPI PUSH3 0x293 PUSH3 0x217 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2A3 DUP5 DUP3 DUP6 ADD PUSH3 0x266 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x328 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x33E JUMPI PUSH3 0x33D PUSH3 0x2E3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x3A2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x365 JUMP JUMPDEST PUSH3 0x3AE DUP7 DUP4 PUSH3 0x365 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x3F8 PUSH3 0x3F2 PUSH3 0x3EC DUP5 PUSH3 0x3C6 JUMP JUMPDEST PUSH3 0x3CF JUMP JUMPDEST PUSH3 0x3C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x413 DUP4 PUSH3 0x3D8 JUMP JUMPDEST PUSH3 0x42B PUSH3 0x422 DUP3 PUSH3 0x3FF JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x371 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x441 PUSH3 0x433 JUMP JUMPDEST PUSH3 0x44E DUP2 DUP5 DUP5 PUSH3 0x408 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x475 JUMPI PUSH3 0x469 PUSH0 DUP3 PUSH3 0x437 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x454 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4C4 JUMPI PUSH3 0x48E DUP2 PUSH3 0x344 JUMP JUMPDEST PUSH3 0x499 DUP5 PUSH3 0x356 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4A9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4C1 PUSH3 0x4B8 DUP6 PUSH3 0x356 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x453 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4E6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4C9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x500 DUP4 DUP4 PUSH3 0x4D5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x51B DUP3 PUSH3 0x2AC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x537 JUMPI PUSH3 0x536 PUSH3 0x2B6 JUMP JUMPDEST JUMPDEST PUSH3 0x543 DUP3 SLOAD PUSH3 0x310 JUMP JUMPDEST PUSH3 0x550 DUP3 DUP3 DUP6 PUSH3 0x479 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x586 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x571 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x57D DUP6 DUP3 PUSH3 0x4F3 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5EC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x596 DUP7 PUSH3 0x344 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5BF JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x598 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5DF JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5DB PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4D5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x5FF DUP2 PUSH3 0x23A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x61A PUSH0 DUP4 ADD DUP5 PUSH3 0x5F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25E5 DUP1 PUSH3 0x62E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x360 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AC JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x236 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH2 0x648 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x278 PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1D91 JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x729 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x792 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x386 DUP3 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0x20DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C7 SWAP1 PUSH2 0x20DE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x412 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x412 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x426 DUP3 PUSH2 0x904 JUMP JUMPDEST POP PUSH2 0x430 DUP3 PUSH2 0x98A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x449 DUP3 DUP3 PUSH2 0x444 PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4BD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4D0 DUP4 DUP4 PUSH2 0x4CB PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x546 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x210E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x566 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x729 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x57D PUSH0 DUP3 PUSH2 0x578 PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x58B DUP3 PUSH2 0x904 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x603 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x650 PUSH2 0xBE7 JUMP JUMPDEST PUSH2 0x659 PUSH0 PUSH2 0xC6E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x692 SWAP1 PUSH2 0x20DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BE SWAP1 PUSH2 0x20DE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x709 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x709 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x725 PUSH2 0x71E PUSH2 0x9C3 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD31 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x734 DUP5 DUP5 DUP5 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x740 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE9A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x751 DUP3 PUSH2 0x104C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x760 PUSH2 0xBE7 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x773 SWAP1 PUSH2 0x2170 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x783 DUP4 DUP3 PUSH2 0x1157 JUMP JUMPDEST PUSH2 0x78D DUP2 DUP4 PUSH2 0x1174 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x828 PUSH2 0xBE7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x898 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A1 DUP2 PUSH2 0xC6E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8FD JUMPI POP PUSH2 0x8FC DUP3 PUSH2 0x11CE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x90F DUP4 PUSH2 0x12AF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x981 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12E8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9E7 DUP5 PUSH2 0x12AF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA28 JUMPI PUSH2 0xA27 DUP2 DUP5 DUP7 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB3 JUMPI PUSH2 0xA67 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB32 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBEF PUSH2 0x9C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC0D PUSH2 0x65B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC6C JUMPI PUSH2 0xC30 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC63 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA1 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD98 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE8D SWAP2 SWAP1 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1046 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xEDD PUSH2 0x9C3 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2209 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF3A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF37 SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFBB JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF68 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xFB3 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1044 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103B SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1057 DUP3 PUSH2 0x904 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x1075 SWAP1 PUSH2 0x20DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10A1 SWAP1 PUSH2 0x20DE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x10FC PUSH2 0x156A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1110 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1152 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x1144 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x112C SWAP3 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x114D DUP5 PUSH2 0x1580 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1170 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x15E6 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1192 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11C2 SWAP2 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1298 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x12A8 JUMPI POP PUSH2 0x12A7 DUP3 PUSH2 0x1601 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1320 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1452 JUMPI PUSH0 PUSH2 0x132F DUP5 PUSH2 0x904 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1399 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13AC JUMPI POP PUSH2 0x13AA DUP2 DUP5 PUSH2 0x792 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x13EE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E5 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1450 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14B2 DUP4 DUP4 DUP4 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x1565 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1526 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151D SWAP2 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155C SWAP3 SWAP2 SWAP1 PUSH2 0x255B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x158B DUP3 PUSH2 0x904 JUMP JUMPDEST POP PUSH0 PUSH2 0x1595 PUSH2 0x156A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x15B3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x15DE JUMP JUMPDEST DUP1 PUSH2 0x15BD DUP5 PUSH2 0x172A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15CE SWAP3 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15F0 DUP4 DUP4 PUSH2 0x17F4 JUMP JUMPDEST PUSH2 0x15FC PUSH0 DUP5 DUP5 DUP5 PUSH2 0xE9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1721 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x16E2 JUMPI POP PUSH2 0x16E1 DUP5 DUP5 PUSH2 0x792 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1720 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1708 DUP4 PUSH2 0x98A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1738 DUP5 PUSH2 0x18E7 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1756 JUMPI PUSH2 0x1755 PUSH2 0x1DD7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1788 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x17E9 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x17DE JUMPI PUSH2 0x17DD PUSH2 0x2582 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1795 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1864 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185B SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1870 DUP4 DUP4 PUSH0 PUSH2 0x9DC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D9 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1943 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1939 JUMPI PUSH2 0x1938 PUSH2 0x2582 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1980 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1976 JUMPI PUSH2 0x1975 PUSH2 0x2582 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x19AF JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0x2582 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x19D8 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x19CE JUMPI PUSH2 0x19CD PUSH2 0x2582 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x19FD JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x19F3 JUMPI PUSH2 0x19F2 PUSH2 0x2582 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1A20 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1A16 JUMPI PUSH2 0x1A15 PUSH2 0x2582 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1A2F JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A7D DUP2 PUSH2 0x1A49 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A87 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A98 DUP2 PUSH2 0x1A74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB3 JUMPI PUSH2 0x1AB2 PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC0 DUP5 DUP3 DUP6 ADD PUSH2 0x1A8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADD DUP2 PUSH2 0x1AC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B33 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B18 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B58 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x1B62 DUP2 DUP6 PUSH2 0x1B06 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B72 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B16 JUMP JUMPDEST PUSH2 0x1B7B DUP2 PUSH2 0x1B3E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B9E DUP2 DUP5 PUSH2 0x1B4E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB8 DUP2 PUSH2 0x1BA6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD3 DUP2 PUSH2 0x1BAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BEE JUMPI PUSH2 0x1BED PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BFB DUP5 DUP3 DUP6 ADD PUSH2 0x1BC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C2D DUP3 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C3D DUP2 PUSH2 0x1C23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C56 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C65 DUP2 PUSH2 0x1C23 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C6F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C80 DUP2 PUSH2 0x1C5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9C JUMPI PUSH2 0x1C9B PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CA9 DUP6 DUP3 DUP7 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CBA DUP6 DUP3 DUP7 ADD PUSH2 0x1BC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CDB JUMPI PUSH2 0x1CDA PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CE8 DUP7 DUP3 DUP8 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CF9 DUP7 DUP3 DUP8 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D0A DUP7 DUP3 DUP8 ADD PUSH2 0x1BC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D29 JUMPI PUSH2 0x1D28 PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D36 DUP5 DUP3 DUP6 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D48 DUP2 PUSH2 0x1BA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D61 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D70 DUP2 PUSH2 0x1AC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D7A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D8B DUP2 PUSH2 0x1D67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DA7 JUMPI PUSH2 0x1DA6 PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DB4 DUP6 DUP3 DUP7 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DC5 DUP6 DUP3 DUP7 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E0D DUP3 PUSH2 0x1B3E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E2C JUMPI PUSH2 0x1E2B PUSH2 0x1DD7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E3E PUSH2 0x1A38 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E4A DUP3 DUP3 PUSH2 0x1E04 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E69 JUMPI PUSH2 0x1E68 PUSH2 0x1DD7 JUMP JUMPDEST JUMPDEST PUSH2 0x1E72 DUP3 PUSH2 0x1B3E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E9F PUSH2 0x1E9A DUP5 PUSH2 0x1E4F JUMP JUMPDEST PUSH2 0x1E35 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1EBB JUMPI PUSH2 0x1EBA PUSH2 0x1DD3 JUMP JUMPDEST JUMPDEST PUSH2 0x1EC6 DUP5 DUP3 DUP6 PUSH2 0x1E7F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EE2 JUMPI PUSH2 0x1EE1 PUSH2 0x1DCF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1EF2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F20 DUP8 DUP3 DUP9 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F31 DUP8 DUP3 DUP9 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F42 DUP8 DUP3 DUP9 ADD PUSH2 0x1BC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F63 JUMPI PUSH2 0x1F62 PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST PUSH2 0x1F6F DUP8 DUP3 DUP9 ADD PUSH2 0x1ECE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F95 JUMPI PUSH2 0x1F94 PUSH2 0x1DD7 JUMP JUMPDEST JUMPDEST PUSH2 0x1F9E DUP3 PUSH2 0x1B3E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FBD PUSH2 0x1FB8 DUP5 PUSH2 0x1F7B JUMP JUMPDEST PUSH2 0x1E35 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FD9 JUMPI PUSH2 0x1FD8 PUSH2 0x1DD3 JUMP JUMPDEST JUMPDEST PUSH2 0x1FE4 DUP5 DUP3 DUP6 PUSH2 0x1E7F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2000 JUMPI PUSH2 0x1FFF PUSH2 0x1DCF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2010 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x202F JUMPI PUSH2 0x202E PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x203C DUP6 DUP3 DUP7 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x205D JUMPI PUSH2 0x205C PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST PUSH2 0x2069 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2089 JUMPI PUSH2 0x2088 PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2096 DUP6 DUP3 DUP7 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20A7 DUP6 DUP3 DUP7 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x20F5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2108 JUMPI PUSH2 0x2107 PUSH2 0x20B1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2121 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x212E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x213B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C34 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x217A DUP3 PUSH2 0x1BA6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x21AC JUMPI PUSH2 0x21AB PUSH2 0x2143 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21DB DUP3 PUSH2 0x21B7 JUMP JUMPDEST PUSH2 0x21E5 DUP2 DUP6 PUSH2 0x21C1 JUMP JUMPDEST SWAP4 POP PUSH2 0x21F5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B16 JUMP JUMPDEST PUSH2 0x21FE DUP2 PUSH2 0x1B3E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x221C PUSH0 DUP4 ADD DUP8 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x2229 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x2236 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D3F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2248 DUP2 DUP5 PUSH2 0x21D1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2261 DUP2 PUSH2 0x1A74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x227C JUMPI PUSH2 0x227B PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2289 DUP5 DUP3 DUP6 ADD PUSH2 0x2253 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22A6 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x22B0 DUP2 DUP6 PUSH2 0x2292 JUMP JUMPDEST SWAP4 POP PUSH2 0x22C0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B16 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22D7 DUP3 DUP6 PUSH2 0x229C JUMP JUMPDEST SWAP2 POP PUSH2 0x22E3 DUP3 DUP5 PUSH2 0x229C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x234B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2310 JUMP JUMPDEST PUSH2 0x2355 DUP7 DUP4 PUSH2 0x2310 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2390 PUSH2 0x238B PUSH2 0x2386 DUP5 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x236D JUMP JUMPDEST PUSH2 0x1BA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23A9 DUP4 PUSH2 0x2376 JUMP JUMPDEST PUSH2 0x23BD PUSH2 0x23B5 DUP3 PUSH2 0x2397 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x231C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x23D1 PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x23DC DUP2 DUP5 DUP5 PUSH2 0x23A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23FF JUMPI PUSH2 0x23F4 PUSH0 DUP3 PUSH2 0x23C9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x23E2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2444 JUMPI PUSH2 0x2415 DUP2 PUSH2 0x22EF JUMP JUMPDEST PUSH2 0x241E DUP5 PUSH2 0x2301 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x242D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2441 PUSH2 0x2439 DUP6 PUSH2 0x2301 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x23E1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2464 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2449 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x247C DUP4 DUP4 PUSH2 0x2455 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2495 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24AE JUMPI PUSH2 0x24AD PUSH2 0x1DD7 JUMP JUMPDEST JUMPDEST PUSH2 0x24B8 DUP3 SLOAD PUSH2 0x20DE JUMP JUMPDEST PUSH2 0x24C3 DUP3 DUP3 DUP6 PUSH2 0x2403 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x24F4 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x24E2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x24EC DUP6 DUP3 PUSH2 0x2471 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2553 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2502 DUP7 PUSH2 0x22EF JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2529 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2504 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2546 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2542 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2455 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x256E PUSH0 DUP4 ADD DUP6 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x257B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D3F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH5 0x52A806EFF6 DUP2 PUSH22 0x193BBCDF101B46EACADF033B7B14D04D88FD0D1F76AC DUP13 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "59927:883:0:-:0;;;60039:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60125:12;40753:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40827:5;40819;:13;;;;;;:::i;:::-;;40852:7;40842;:17;;;;;;:::i;:::-;;40753:113;;28228:1;28204:26;;:12;:26;;;28200:95;;28281:1;28253:31;;;;;;;;;;;:::i;:::-;;;;;;;;28200:95;28304:32;28323:12;28304:18;;;:32;;:::i;:::-;28156:187;60039:106;59927:883;;29843:187;29916:16;29935:6;;;;;;;;;;;29916:25;;29960:8;29951:6;;:17;;;;;;;;;;;;;;;;;;30014:8;29983:40;;30004:8;29983:40;;;;;;;;;;;;29906:124;29843:187;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;59927:883:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_2714": {
									"entryPoint": 2506,
									"id": 2714,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_2780": {
									"entryPoint": 4840,
									"id": 2780,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_2107": {
									"entryPoint": 5482,
									"id": 2107,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_2362": {
									"entryPoint": 5287,
									"id": 2362,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2910": {
									"entryPoint": 3738,
									"id": 2910,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_1646": {
									"entryPoint": 3047,
									"id": 1646,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_2289": {
									"entryPoint": 2442,
									"id": 2289,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_2325": {
									"entryPoint": 5738,
									"id": 2325,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_2518": {
									"entryPoint": 6132,
									"id": 2518,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1554": {
									"entryPoint": 2499,
									"id": 1554,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_2276": {
									"entryPoint": 4783,
									"id": 2276,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_2846": {
									"entryPoint": 2308,
									"id": 2846,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_2533": {
									"entryPoint": 4439,
									"id": 2533,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_2559": {
									"entryPoint": 5606,
									"id": 2559,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_2817": {
									"entryPoint": 3377,
									"id": 2817,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_3051": {
									"entryPoint": 4468,
									"id": 3051,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_1708": {
									"entryPoint": 3182,
									"id": 1708,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_2468": {
									"entryPoint": 2524,
									"id": 2468,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_2123": {
									"entryPoint": 1079,
									"id": 2123,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_2031": {
									"entryPoint": 1426,
									"id": 2031,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_2934": {
									"entryPoint": 1387,
									"id": 2934,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getApproved_2140": {
									"entryPoint": 1052,
									"id": 2140,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_2173": {
									"entryPoint": 1938,
									"id": 2173,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_1113": {
									"entryPoint": 6375,
									"id": 1113,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_2053": {
									"entryPoint": 909,
									"id": 2053,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_2044": {
									"entryPoint": 1409,
									"id": 2044,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_1629": {
									"entryPoint": 1627,
									"id": 1629,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1660": {
									"entryPoint": 1608,
									"id": 1660,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_3101": {
									"entryPoint": 1880,
									"id": 3101,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_2237": {
									"entryPoint": 1356,
									"id": 2237,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2263": {
									"entryPoint": 1833,
									"id": 2263,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_2156": {
									"entryPoint": 1811,
									"id": 2156,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1758": {
									"entryPoint": 5633,
									"id": 1758,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2003": {
									"entryPoint": 4558,
									"id": 2003,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2975": {
									"entryPoint": 2212,
									"id": 2975,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3133": {
									"entryPoint": 892,
									"id": 3133,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_2062": {
									"entryPoint": 1667,
									"id": 2062,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1356": {
									"entryPoint": 5930,
									"id": 1356,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2098": {
									"entryPoint": 5504,
									"id": 2098,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_3032": {
									"entryPoint": 4172,
									"id": 3032,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_3117": {
									"entryPoint": 1862,
									"id": 3117,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_2219": {
									"entryPoint": 1101,
									"id": 2219,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_1688": {
									"entryPoint": 2080,
									"id": 1688,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7821,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8107,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 8217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8908,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8713,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9563,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8462,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6712,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9219,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7807,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6934,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8515,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9602,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8369,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7639,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7631,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7635,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6725,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6721,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8988,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9120,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9157,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21279:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"src": "1518:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:1",
														"type": ""
													}
												],
												"src": "1623:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:1",
																"statements": []
															},
															"src": "1889:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:1",
														"type": ""
													}
												],
												"src": "1798:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:1",
														"type": ""
													}
												],
												"src": "2050:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:1",
														"type": ""
													}
												],
												"src": "2158:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:1",
														"type": ""
													}
												],
												"src": "2541:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:1",
														"type": ""
													}
												],
												"src": "2860:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:1"
															},
															"nodeType": "YulIf",
															"src": "2996:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:1",
														"type": ""
													}
												],
												"src": "2943:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:1",
														"type": ""
													}
												],
												"src": "3071:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:1"
															},
															"nodeType": "YulIf",
															"src": "3292:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:1",
														"type": ""
													}
												],
												"src": "3216:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:1",
														"type": ""
													}
												],
												"src": "3551:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:1",
														"type": ""
													}
												],
												"src": "3683:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:1",
														"type": ""
													}
												],
												"src": "3785:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:1",
														"type": ""
													}
												],
												"src": "3909:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:1"
															},
															"nodeType": "YulIf",
															"src": "4190:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:1",
														"type": ""
													}
												],
												"src": "4137:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:1",
														"type": ""
													}
												],
												"src": "4265:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:1"
															},
															"nodeType": "YulIf",
															"src": "4503:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:1",
														"type": ""
													}
												],
												"src": "4410:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4990:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5036:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:32:1"
															},
															"nodeType": "YulIf",
															"src": "5000:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5129:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5173:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5256:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5301:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5384:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5429:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4955:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4967:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4975:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4983:6:1",
														"type": ""
													}
												],
												"src": "4890:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5581:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5627:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:32:1"
															},
															"nodeType": "YulIf",
															"src": "5591:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5720:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5764:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5551:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5562:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5574:6:1",
														"type": ""
													}
												],
												"src": "5515:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5915:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5903:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5910:3:1",
														"type": ""
													}
												],
												"src": "5850:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6072:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6082:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6090:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6044:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6056:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6067:4:1",
														"type": ""
													}
												],
												"src": "5974:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:1"
															},
															"nodeType": "YulIf",
															"src": "6252:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:1",
														"type": ""
													}
												],
												"src": "6202:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:1",
														"type": ""
													}
												],
												"src": "6324:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:1"
															},
															"nodeType": "YulIf",
															"src": "6553:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:1",
														"type": ""
													}
												],
												"src": "6463:468:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:1"
															},
															"nodeType": "YulIf",
															"src": "7525:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:1",
														"type": ""
													}
												],
												"src": "7369:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:1",
														"type": ""
													}
												],
												"src": "7656:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:1"
															},
															"nodeType": "YulIf",
															"src": "7928:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:1",
														"type": ""
													}
												],
												"src": "7791:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:1",
														"type": ""
													}
												],
												"src": "8104:146:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:1"
															},
															"nodeType": "YulIf",
															"src": "8498:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:1",
														"type": ""
													}
												],
												"src": "8256:423:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:1"
															},
															"nodeType": "YulIf",
															"src": "8769:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:1",
														"type": ""
													}
												],
												"src": "8698:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:1"
															},
															"nodeType": "YulIf",
															"src": "9178:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:1",
														"type": ""
													}
												],
												"src": "9042:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10058:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10163:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10165:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10165:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10135:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10143:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10132:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10132:30:1"
															},
															"nodeType": "YulIf",
															"src": "10129:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10195:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10225:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "10203:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10203:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10195:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10269:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10281:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10287:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10277:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10277:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10269:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10042:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10053:4:1",
														"type": ""
													}
												],
												"src": "9991:308:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10389:341:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10399:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10466:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10424:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10424:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10408:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10408:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10399:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10490:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10497:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10483:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10483:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10483:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10513:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10528:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10524:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10524:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10517:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10578:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "10580:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10580:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10580:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10559:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10564:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10555:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10573:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10552:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:25:1"
															},
															"nodeType": "YulIf",
															"src": "10549:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10707:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10712:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10717:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10670:36:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10670:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10670:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10362:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10367:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10375:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10383:5:1",
														"type": ""
													}
												],
												"src": "10305:425:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10812:278:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10861:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "10863:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10863:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10863:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10840:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10848:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10836:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10836:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10855:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10832:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10825:35:1"
															},
															"nodeType": "YulIf",
															"src": "10822:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10953:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10980:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10967:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10967:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10957:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10996:88:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11057:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11065:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11053:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11053:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11072:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11080:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11005:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11005:79:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10996:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10790:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10798:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10806:5:1",
														"type": ""
													}
												],
												"src": "10750:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11189:561:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11235:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11237:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11237:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11237:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11210:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11219:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11206:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11231:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11202:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11202:32:1"
															},
															"nodeType": "YulIf",
															"src": "11199:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "11328:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11343:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11357:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11347:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11372:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11407:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11418:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11403:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11403:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11427:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11382:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11382:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11372:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11455:288:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11470:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11501:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11512:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11497:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11497:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11484:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11484:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11474:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11563:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11565:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11565:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11565:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11535:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11543:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11532:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11532:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "11529:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11660:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11705:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11716:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11701:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11701:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11725:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11670:30:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11670:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11660:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11151:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11162:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11174:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11182:6:1",
														"type": ""
													}
												],
												"src": "11096:654:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11839:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11885:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11887:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11887:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11887:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11860:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11869:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11856:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11856:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11881:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11852:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11852:32:1"
															},
															"nodeType": "YulIf",
															"src": "11849:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "11978:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11993:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12007:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11997:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12022:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12057:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12068:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12053:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12053:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12077:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12032:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12032:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12022:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12105:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12120:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12134:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12124:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12150:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12185:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12196:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12181:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12181:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12205:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12160:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12160:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12150:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11801:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11812:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11824:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11832:6:1",
														"type": ""
													}
												],
												"src": "11756:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12264:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12281:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12284:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12274:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12274:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12274:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12378:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12381:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12371:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12371:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12371:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12402:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12405:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12395:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12395:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12395:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12236:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12473:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12483:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12497:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12503:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12493:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12483:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12514:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12544:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12550:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12540:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12540:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12518:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12591:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12605:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12619:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12627:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12615:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12615:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12605:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12571:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12564:26:1"
															},
															"nodeType": "YulIf",
															"src": "12561:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12694:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "12708:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12708:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12708:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12658:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12681:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12689:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12678:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12678:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12655:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12655:38:1"
															},
															"nodeType": "YulIf",
															"src": "12652:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12457:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12466:6:1",
														"type": ""
													}
												],
												"src": "12422:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12902:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12912:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12924:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12935:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12920:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12912:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12992:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13005:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13016:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13001:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12948:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12948:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12948:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13073:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13086:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13097:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13082:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13082:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13029:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13029:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13029:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13155:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13168:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13179:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13164:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13164:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13111:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13111:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13111:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12858:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12870:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12878:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12886:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12897:4:1",
														"type": ""
													}
												],
												"src": "12748:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13224:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13241:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13244:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13234:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13234:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13338:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13341:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13331:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13331:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13362:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13365:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13355:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13355:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13355:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13196:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13425:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13435:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13462:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13444:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13444:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "13435:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13558:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13560:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13560:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13560:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13483:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13490:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13480:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13480:77:1"
															},
															"nodeType": "YulIf",
															"src": "13477:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13589:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13600:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13607:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13596:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13596:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13589:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13411:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13421:3:1",
														"type": ""
													}
												],
												"src": "13382:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13679:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13690:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13706:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13700:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13700:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13690:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13662:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13672:6:1",
														"type": ""
													}
												],
												"src": "13621:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13820:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13837:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13842:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13830:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13830:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13858:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13877:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13882:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13873:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13873:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13858:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13792:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13797:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13808:11:1",
														"type": ""
													}
												],
												"src": "13725:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13989:283:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13999:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14045:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14013:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14013:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14003:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14060:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14125:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14130:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14067:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14067:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14060:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14185:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14192:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14181:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14181:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14199:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14204:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14146:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14146:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14146:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14220:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14231:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14258:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "14236:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14236:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14227:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14227:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14220:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13970:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13977:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13985:3:1",
														"type": ""
													}
												],
												"src": "13899:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14478:440:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14488:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14500:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14511:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14496:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14496:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14488:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14569:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14582:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14593:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14578:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14578:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14525:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14525:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14525:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14650:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14663:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14674:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14659:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14606:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14606:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14606:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14732:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14745:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14756:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14741:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14741:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14688:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14688:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14688:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14781:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14792:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14777:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14777:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14801:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14807:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14797:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14797:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14770:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14770:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14770:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14827:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14897:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14906:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14835:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14835:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14827:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14426:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14438:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14446:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14454:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14462:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14473:4:1",
														"type": ""
													}
												],
												"src": "14278:640:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14986:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14996:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15011:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15005:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15005:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14996:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15053:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "15027:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15027:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15027:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14964:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14972:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14980:5:1",
														"type": ""
													}
												],
												"src": "14924:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15147:273:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15193:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15195:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15195:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15195:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15168:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15177:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15164:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15164:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15189:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15160:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15160:32:1"
															},
															"nodeType": "YulIf",
															"src": "15157:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "15286:127:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15301:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15315:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15305:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15330:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15375:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15386:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15371:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15371:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15395:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "15340:30:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15340:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15330:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15117:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15128:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15140:6:1",
														"type": ""
													}
												],
												"src": "15071:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15540:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15550:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15565:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15550:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15512:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15517:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15528:11:1",
														"type": ""
													}
												],
												"src": "15426:148:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15690:280:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15700:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15747:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15714:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15714:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15704:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15762:96:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15846:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15851:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15769:76:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15769:89:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15762:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15906:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15913:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15902:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15902:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15920:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15925:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15867:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15867:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15867:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15941:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15952:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15957:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15948:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15948:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15941:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15671:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15678:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15686:3:1",
														"type": ""
													}
												],
												"src": "15580:390:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16160:251:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16171:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16260:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16269:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16178:81:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16178:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16171:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16283:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16372:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16381:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16290:81:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16290:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16283:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16395:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16402:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16395:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16131:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16137:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16145:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16156:3:1",
														"type": ""
													}
												],
												"src": "15976:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16471:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16481:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "16489:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "16481:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16509:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "16512:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16502:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16502:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16525:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16543:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16546:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "16533:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16533:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "16525:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "16458:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "16466:4:1",
														"type": ""
													}
												],
												"src": "16417:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16608:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16618:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16636:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16643:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16632:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16632:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16648:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "16628:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16628:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16618:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16591:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "16601:6:1",
														"type": ""
													}
												],
												"src": "16564:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16716:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16726:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "16751:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16757:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "16747:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16747:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "16726:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "16691:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16697:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "16707:8:1",
														"type": ""
													}
												],
												"src": "16663:107:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16852:317:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16862:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "16883:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16895:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "16879:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16879:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "16866:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16906:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "16937:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16948:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "16918:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16918:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "16910:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17024:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "17055:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "17066:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "17036:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17036:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "17024:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17084:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17097:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "17108:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17104:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17104:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17093:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17093:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17084:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17123:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17136:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "17147:8:1"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "17157:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17143:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17143:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "17133:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17133:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "17123:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16813:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "16820:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "16832:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "16845:6:1",
														"type": ""
													}
												],
												"src": "16776:393:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17207:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17217:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "17224:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17217:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17193:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17203:3:1",
														"type": ""
													}
												],
												"src": "17175:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17301:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17311:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17369:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "17351:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17351:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "17342:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17342:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17324:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17324:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "17311:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17281:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "17291:9:1",
														"type": ""
													}
												],
												"src": "17241:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17436:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17446:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "17453:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17446:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17422:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17432:3:1",
														"type": ""
													}
												],
												"src": "17389:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17546:193:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17556:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "17611:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17580:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17580:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "17560:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "17635:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "17675:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "17669:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17669:11:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "17682:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "17714:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "17690:23:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17690:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "17641:27:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17641:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "17628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17628:105:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17628:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "17523:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17529:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "17537:7:1",
														"type": ""
													}
												],
												"src": "17470:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17794:24:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17804:8:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "17811:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17804:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17790:3:1",
														"type": ""
													}
												],
												"src": "17745:73:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17877:136:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17887:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17901:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17901:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "17891:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "17986:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17992:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "18000:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17942:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17942:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17942:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "17863:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17869:6:1",
														"type": ""
													}
												],
												"src": "17824:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18069:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18136:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "18180:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18187:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "18150:29:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18150:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18150:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "18089:5:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "18096:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18086:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18086:14:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "18101:26:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18103:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "18116:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18123:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "18112:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18112:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "18103:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "18083:2:1",
																"statements": []
															},
															"src": "18079:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "18057:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18064:3:1",
														"type": ""
													}
												],
												"src": "18019:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18290:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18316:431:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "18330:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "18378:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "18346:31:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18346:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "18334:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "18397:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "18420:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "18448:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "18430:17:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18430:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "18416:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18416:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "18401:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "18617:27:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "18619:23:1",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "18634:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "18619:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "18601:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18613:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "18598:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18598:18:1"
																		},
																		"nodeType": "YulIf",
																		"src": "18595:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "18686:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "18703:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "18731:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "18713:17:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18713:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "18699:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18699:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "18657:28:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18657:80:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18657:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "18307:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18312:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18304:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18304:11:1"
															},
															"nodeType": "YulIf",
															"src": "18301:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "18266:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "18273:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "18278:10:1",
														"type": ""
													}
												],
												"src": "18211:543:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18823:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18833:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "18858:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18864:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "18854:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18854:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "18833:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "18798:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18804:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "18814:8:1",
														"type": ""
													}
												],
												"src": "18760:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18934:118:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18944:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18993:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "18996:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "18989:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18989:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19008:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "19004:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19004:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "18960:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18960:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "18956:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18956:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "18948:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19021:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19035:4:1"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "19041:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19031:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19031:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "19021:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18911:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "18917:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "18927:6:1",
														"type": ""
													}
												],
												"src": "18883:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19138:214:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19271:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19298:4:1"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "19304:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "19279:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19279:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "19271:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19317:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19328:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19338:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "19341:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "19334:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19334:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19325:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19325:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "19317:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "19119:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "19125:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "19133:4:1",
														"type": ""
													}
												],
												"src": "19057:295:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19449:1303:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19460:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "19507:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "19474:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19474:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "19464:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19596:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "19598:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19598:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19598:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "19568:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19576:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19565:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19565:30:1"
															},
															"nodeType": "YulIf",
															"src": "19562:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19628:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "19674:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "19668:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19668:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "19642:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19642:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "19632:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "19773:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "19779:6:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "19787:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "19727:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19727:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19727:67:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19804:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19821:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "19808:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19832:17:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19845:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "19832:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "19896:611:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "19910:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "19929:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "19941:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "19937:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19937:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "19925:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19925:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "19914:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "19961:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "20007:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "19975:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19975:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "19965:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "20025:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20034:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "20029:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "20093:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "20118:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "20136:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "20141:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "20132:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "20132:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "20126:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20126:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "20111:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20111:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "20111:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "20170:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "20184:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "20192:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "20180:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20180:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "20170:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "20211:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "20228:9:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "20239:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "20224:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20224:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "20211:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "20059:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "20062:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "20056:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20056:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "20071:21:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "20073:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "20082:1:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "20085:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "20078:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20078:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "20073:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "20052:3:1",
																					"statements": []
																				},
																				"src": "20048:208:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "20292:156:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "20310:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "20337:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "20342:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "20333:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20333:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "20327:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20327:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "20314:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "20377:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "20404:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "20419:6:1"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "20427:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "20415:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "20415:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "20385:18:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20385:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "20370:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20370:64:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "20370:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "20275:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "20284:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "20272:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20272:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "20269:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "20468:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "20482:6:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "20490:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "20478:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "20478:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "20494:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "20474:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20474:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "20461:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20461:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "20461:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "19889:618:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19894:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "20524:222:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "20538:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20551:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "20542:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "20575:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "20593:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "20612:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "20617:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "20608:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "20608:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "20602:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20602:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "20593:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "20568:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "20565:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "20662:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "20721:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "20728:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "20668:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "20668:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "20655:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20655:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "20655:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "20516:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "19869:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19877:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19866:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19866:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "19859:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "19438:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "19444:3:1",
														"type": ""
													}
												],
												"src": "19357:1395:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20884:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20894:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20906:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20917:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20902:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20902:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20894:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20974:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20987:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20998:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20983:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20983:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20930:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20930:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20930:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21055:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21068:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21079:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21064:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21064:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21011:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21011:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21011:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20848:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20860:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20868:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20879:4:1",
														"type": ""
													}
												],
												"src": "20758:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21124:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21141:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21144:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21134:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21134:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21134:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21238:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21241:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21231:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21231:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21231:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21262:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21265:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21255:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21255:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21255:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "21096:180:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x360 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AC JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x236 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH2 0x648 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x278 PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1D91 JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH2 0x729 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x792 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1D14 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x386 DUP3 PUSH2 0x8A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0x20DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C7 SWAP1 PUSH2 0x20DE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x412 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x412 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x426 DUP3 PUSH2 0x904 JUMP JUMPDEST POP PUSH2 0x430 DUP3 PUSH2 0x98A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x449 DUP3 DUP3 PUSH2 0x444 PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4BD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4D0 DUP4 DUP4 PUSH2 0x4CB PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x546 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x210E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x566 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x729 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x57D PUSH0 DUP3 PUSH2 0x578 PUSH2 0x9C3 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x58B DUP3 PUSH2 0x904 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x603 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x650 PUSH2 0xBE7 JUMP JUMPDEST PUSH2 0x659 PUSH0 PUSH2 0xC6E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x692 SWAP1 PUSH2 0x20DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BE SWAP1 PUSH2 0x20DE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x709 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x709 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x725 PUSH2 0x71E PUSH2 0x9C3 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD31 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x734 DUP5 DUP5 DUP5 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x740 DUP5 DUP5 DUP5 DUP5 PUSH2 0xE9A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x751 DUP3 PUSH2 0x104C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x760 PUSH2 0xBE7 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x773 SWAP1 PUSH2 0x2170 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x783 DUP4 DUP3 PUSH2 0x1157 JUMP JUMPDEST PUSH2 0x78D DUP2 DUP4 PUSH2 0x1174 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x828 PUSH2 0xBE7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x898 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A1 DUP2 PUSH2 0xC6E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x8FD JUMPI POP PUSH2 0x8FC DUP3 PUSH2 0x11CE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x90F DUP4 PUSH2 0x12AF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x981 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12E8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9E7 DUP5 PUSH2 0x12AF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA28 JUMPI PUSH2 0xA27 DUP2 DUP5 DUP7 PUSH2 0x14A7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB3 JUMPI PUSH2 0xA67 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB32 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBEF PUSH2 0x9C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC0D PUSH2 0x65B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC6C JUMPI PUSH2 0xC30 PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC63 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDA1 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD98 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE8D SWAP2 SWAP1 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1046 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xEDD PUSH2 0x9C3 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2209 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF3A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF37 SWAP2 SWAP1 PUSH2 0x2267 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFBB JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF68 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xFB3 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1044 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103B SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1057 DUP3 PUSH2 0x904 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x1075 SWAP1 PUSH2 0x20DE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10A1 SWAP1 PUSH2 0x20DE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x10FC PUSH2 0x156A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1110 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1152 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x1144 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x112C SWAP3 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x114D DUP5 PUSH2 0x1580 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1170 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x15E6 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1192 SWAP2 SWAP1 PUSH2 0x248C JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11C2 SWAP2 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1298 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x12A8 JUMPI POP PUSH2 0x12A7 DUP3 PUSH2 0x1601 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1320 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1452 JUMPI PUSH0 PUSH2 0x132F DUP5 PUSH2 0x904 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1399 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13AC JUMPI POP PUSH2 0x13AA DUP2 DUP5 PUSH2 0x792 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x13EE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E5 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1450 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x14B2 DUP4 DUP4 DUP4 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x1565 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1526 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151D SWAP2 SWAP1 PUSH2 0x1D4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155C SWAP3 SWAP2 SWAP1 PUSH2 0x255B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x158B DUP3 PUSH2 0x904 JUMP JUMPDEST POP PUSH0 PUSH2 0x1595 PUSH2 0x156A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x15B3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x15DE JUMP JUMPDEST DUP1 PUSH2 0x15BD DUP5 PUSH2 0x172A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x15CE SWAP3 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15F0 DUP4 DUP4 PUSH2 0x17F4 JUMP JUMPDEST PUSH2 0x15FC PUSH0 DUP5 DUP5 DUP5 PUSH2 0xE9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1721 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x16E2 JUMPI POP PUSH2 0x16E1 DUP5 DUP5 PUSH2 0x792 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1720 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1708 DUP4 PUSH2 0x98A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1738 DUP5 PUSH2 0x18E7 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1756 JUMPI PUSH2 0x1755 PUSH2 0x1DD7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1788 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x17E9 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x17DE JUMPI PUSH2 0x17DD PUSH2 0x2582 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1795 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1864 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185B SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1870 DUP4 DUP4 PUSH0 PUSH2 0x9DC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D9 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1943 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1939 JUMPI PUSH2 0x1938 PUSH2 0x2582 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1980 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1976 JUMPI PUSH2 0x1975 PUSH2 0x2582 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x19AF JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0x2582 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x19D8 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x19CE JUMPI PUSH2 0x19CD PUSH2 0x2582 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x19FD JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x19F3 JUMPI PUSH2 0x19F2 PUSH2 0x2582 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1A20 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1A16 JUMPI PUSH2 0x1A15 PUSH2 0x2582 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1A2F JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A7D DUP2 PUSH2 0x1A49 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A87 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A98 DUP2 PUSH2 0x1A74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB3 JUMPI PUSH2 0x1AB2 PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC0 DUP5 DUP3 DUP6 ADD PUSH2 0x1A8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADD DUP2 PUSH2 0x1AC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B33 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B18 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B58 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x1B62 DUP2 DUP6 PUSH2 0x1B06 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B72 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B16 JUMP JUMPDEST PUSH2 0x1B7B DUP2 PUSH2 0x1B3E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B9E DUP2 DUP5 PUSH2 0x1B4E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB8 DUP2 PUSH2 0x1BA6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD3 DUP2 PUSH2 0x1BAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BEE JUMPI PUSH2 0x1BED PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BFB DUP5 DUP3 DUP6 ADD PUSH2 0x1BC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C2D DUP3 PUSH2 0x1C04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C3D DUP2 PUSH2 0x1C23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C56 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C65 DUP2 PUSH2 0x1C23 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C6F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C80 DUP2 PUSH2 0x1C5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9C JUMPI PUSH2 0x1C9B PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CA9 DUP6 DUP3 DUP7 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CBA DUP6 DUP3 DUP7 ADD PUSH2 0x1BC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CDB JUMPI PUSH2 0x1CDA PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CE8 DUP7 DUP3 DUP8 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CF9 DUP7 DUP3 DUP8 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D0A DUP7 DUP3 DUP8 ADD PUSH2 0x1BC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D29 JUMPI PUSH2 0x1D28 PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D36 DUP5 DUP3 DUP6 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D48 DUP2 PUSH2 0x1BA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D61 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D70 DUP2 PUSH2 0x1AC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D7A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D8B DUP2 PUSH2 0x1D67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DA7 JUMPI PUSH2 0x1DA6 PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DB4 DUP6 DUP3 DUP7 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DC5 DUP6 DUP3 DUP7 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E0D DUP3 PUSH2 0x1B3E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E2C JUMPI PUSH2 0x1E2B PUSH2 0x1DD7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E3E PUSH2 0x1A38 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E4A DUP3 DUP3 PUSH2 0x1E04 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E69 JUMPI PUSH2 0x1E68 PUSH2 0x1DD7 JUMP JUMPDEST JUMPDEST PUSH2 0x1E72 DUP3 PUSH2 0x1B3E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E9F PUSH2 0x1E9A DUP5 PUSH2 0x1E4F JUMP JUMPDEST PUSH2 0x1E35 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1EBB JUMPI PUSH2 0x1EBA PUSH2 0x1DD3 JUMP JUMPDEST JUMPDEST PUSH2 0x1EC6 DUP5 DUP3 DUP6 PUSH2 0x1E7F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EE2 JUMPI PUSH2 0x1EE1 PUSH2 0x1DCF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1EF2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F20 DUP8 DUP3 DUP9 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F31 DUP8 DUP3 DUP9 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F42 DUP8 DUP3 DUP9 ADD PUSH2 0x1BC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F63 JUMPI PUSH2 0x1F62 PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST PUSH2 0x1F6F DUP8 DUP3 DUP9 ADD PUSH2 0x1ECE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F95 JUMPI PUSH2 0x1F94 PUSH2 0x1DD7 JUMP JUMPDEST JUMPDEST PUSH2 0x1F9E DUP3 PUSH2 0x1B3E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FBD PUSH2 0x1FB8 DUP5 PUSH2 0x1F7B JUMP JUMPDEST PUSH2 0x1E35 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FD9 JUMPI PUSH2 0x1FD8 PUSH2 0x1DD3 JUMP JUMPDEST JUMPDEST PUSH2 0x1FE4 DUP5 DUP3 DUP6 PUSH2 0x1E7F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2000 JUMPI PUSH2 0x1FFF PUSH2 0x1DCF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2010 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FAB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x202F JUMPI PUSH2 0x202E PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x203C DUP6 DUP3 DUP7 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x205D JUMPI PUSH2 0x205C PUSH2 0x1A45 JUMP JUMPDEST JUMPDEST PUSH2 0x2069 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2089 JUMPI PUSH2 0x2088 PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2096 DUP6 DUP3 DUP7 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20A7 DUP6 DUP3 DUP7 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x20F5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2108 JUMPI PUSH2 0x2107 PUSH2 0x20B1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2121 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x212E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x213B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C34 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x217A DUP3 PUSH2 0x1BA6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x21AC JUMPI PUSH2 0x21AB PUSH2 0x2143 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21DB DUP3 PUSH2 0x21B7 JUMP JUMPDEST PUSH2 0x21E5 DUP2 DUP6 PUSH2 0x21C1 JUMP JUMPDEST SWAP4 POP PUSH2 0x21F5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B16 JUMP JUMPDEST PUSH2 0x21FE DUP2 PUSH2 0x1B3E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x221C PUSH0 DUP4 ADD DUP8 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x2229 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x2236 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D3F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2248 DUP2 DUP5 PUSH2 0x21D1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2261 DUP2 PUSH2 0x1A74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x227C JUMPI PUSH2 0x227B PUSH2 0x1A41 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2289 DUP5 DUP3 DUP6 ADD PUSH2 0x2253 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22A6 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH2 0x22B0 DUP2 DUP6 PUSH2 0x2292 JUMP JUMPDEST SWAP4 POP PUSH2 0x22C0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B16 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22D7 DUP3 DUP6 PUSH2 0x229C JUMP JUMPDEST SWAP2 POP PUSH2 0x22E3 DUP3 DUP5 PUSH2 0x229C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x234B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2310 JUMP JUMPDEST PUSH2 0x2355 DUP7 DUP4 PUSH2 0x2310 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2390 PUSH2 0x238B PUSH2 0x2386 DUP5 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x236D JUMP JUMPDEST PUSH2 0x1BA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23A9 DUP4 PUSH2 0x2376 JUMP JUMPDEST PUSH2 0x23BD PUSH2 0x23B5 DUP3 PUSH2 0x2397 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x231C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x23D1 PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x23DC DUP2 DUP5 DUP5 PUSH2 0x23A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23FF JUMPI PUSH2 0x23F4 PUSH0 DUP3 PUSH2 0x23C9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x23E2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2444 JUMPI PUSH2 0x2415 DUP2 PUSH2 0x22EF JUMP JUMPDEST PUSH2 0x241E DUP5 PUSH2 0x2301 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x242D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2441 PUSH2 0x2439 DUP6 PUSH2 0x2301 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x23E1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2464 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2449 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x247C DUP4 DUP4 PUSH2 0x2455 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2495 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24AE JUMPI PUSH2 0x24AD PUSH2 0x1DD7 JUMP JUMPDEST JUMPDEST PUSH2 0x24B8 DUP3 SLOAD PUSH2 0x20DE JUMP JUMPDEST PUSH2 0x24C3 DUP3 DUP3 DUP6 PUSH2 0x2403 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x24F4 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x24E2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x24EC DUP6 DUP3 PUSH2 0x2471 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2553 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2502 DUP7 PUSH2 0x22EF JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2529 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2504 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2546 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2542 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2455 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x256E PUSH0 DUP4 ADD DUP6 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x257B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D3F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH5 0x52A806EFF6 DUP2 PUSH22 0x193BBCDF101B46EACADF033B7B14D04D88FD0D1F76AC DUP13 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "59927:883:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;60603:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41737:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42869:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42695:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;43515:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;44159:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;57600:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;41557:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41292:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29224:101;;;:::i;:::-;;28569:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41890:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;43090:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;44357:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;60408:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;60151:183;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;43300:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29474:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;60603:205;60738:4;60765:36;60789:11;60765:23;:36::i;:::-;60758:43;;60603:205;;;:::o;41737:89::-;41782:13;41814:5;41807:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41737:89;:::o;42869:154::-;42936:7;42955:22;42969:7;42955:13;:22::i;:::-;;42995:21;43008:7;42995:12;:21::i;:::-;42988:28;;42869:154;;;:::o;42695:113::-;42766:35;42775:2;42779:7;42788:12;:10;:12::i;:::-;42766:8;:35::i;:::-;42695:113;;:::o;43515:578::-;43623:1;43609:16;;:2;:16;;;43605:87;;43678:1;43648:33;;;;;;;;;;;:::i;:::-;;;;;;;;43605:87;43910:21;43934:34;43942:2;43946:7;43955:12;:10;:12::i;:::-;43934:7;:34::i;:::-;43910:58;;43999:4;43982:21;;:13;:21;;;43978:109;;44047:4;44053:7;44062:13;44026:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;43978:109;43595:498;43515:578;;;:::o;44159:132::-;44245:39;44262:4;44268:2;44272:7;44245:39;;;;;;;;;;;;:16;:39::i;:::-;44159:132;;;:::o;57600:314::-;57865:42;57881:1;57885:7;57894:12;:10;:12::i;:::-;57865:7;:42::i;:::-;;57600:314;:::o;41557:118::-;41620:7;41646:22;41660:7;41646:13;:22::i;:::-;41639:29;;41557:118;;;:::o;41292:208::-;41355:7;41395:1;41378:19;;:5;:19;;;41374:87;;41447:1;41420:30;;;;;;;;;;;:::i;:::-;;;;;;;;41374:87;41477:9;:16;41487:5;41477:16;;;;;;;;;;;;;;;;41470:23;;41292:208;;;:::o;29224:101::-;28462:13;:11;:13::i;:::-;29288:30:::1;29315:1;29288:18;:30::i;:::-;29224:101::o:0;28569:85::-;28615:7;28641:6;;;;;;;;;;;28634:13;;28569:85;:::o;41890:93::-;41937:13;41969:7;41962:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41890:93;:::o;43090:144::-;43175:52;43194:12;:10;:12::i;:::-;43208:8;43218;43175:18;:52::i;:::-;43090:144;;:::o;44357:208::-;44470:31;44483:4;44489:2;44493:7;44470:12;:31::i;:::-;44511:47;44534:4;44540:2;44544:7;44553:4;44511:22;:47::i;:::-;44357:208;;;;:::o;60408:189::-;60531:13;60567:23;60582:7;60567:14;:23::i;:::-;60560:30;;60408:189;;;:::o;60151:183::-;28462:13;:11;:13::i;:::-;60227:15:::1;60245:12;;:14;;;;;;;;;:::i;:::-;;;;;60227:32;;60269:22;60279:2;60283:7;60269:9;:22::i;:::-;60301:26;60314:7;60323:3;60301:12;:26::i;:::-;60217:117;60151:183:::0;;:::o;43300:153::-;43388:4;43411:18;:25;43430:5;43411:25;;;;;;;;;;;;;;;:35;43437:8;43411:35;;;;;;;;;;;;;;;;;;;;;;;;;43404:42;;43300:153;;;;:::o;29474:215::-;28462:13;:11;:13::i;:::-;29578:1:::1;29558:22;;:8;:22;;::::0;29554:91:::1;;29631:1;29603:31;;;;;;;;;;;:::i;:::-;;;;;;;;29554:91;29654:28;29673:8;29654:18;:28::i;:::-;29474:215:::0;:::o;58706:207::-;58808:4;58529:10;58522:18;;58831:35;;;:11;:35;;;;:75;;;;58870:36;58894:11;58870:23;:36::i;:::-;58831:75;58824:82;;58706:207;;;:::o;55510:241::-;55573:7;55592:13;55608:17;55617:7;55608:8;:17::i;:::-;55592:33;;55656:1;55639:19;;:5;:19;;;55635:88;;55704:7;55681:31;;;;;;;;;;;:::i;:::-;;;;;;;;55635:88;55739:5;55732:12;;;55510:241;;;:::o;45310:127::-;45380:7;45406:15;:24;45422:7;45406:24;;;;;;;;;;;;;;;;;;;;;45399:31;;45310:127;;;:::o;26744:96::-;26797:7;26823:10;26816:17;;26744:96;:::o;53790:120::-;53870:33;53879:2;53883:7;53892:4;53898;53870:8;:33::i;:::-;53790:120;;;:::o;48210:795::-;48296:7;48315:12;48330:17;48339:7;48330:8;:17::i;:::-;48315:32;;48423:1;48407:18;;:4;:18;;;48403:86;;48441:37;48458:4;48464;48470:7;48441:16;:37::i;:::-;48403:86;48549:1;48533:18;;:4;:18;;;48529:256;;48649:48;48666:1;48670:7;48687:1;48691:5;48649:8;:48::i;:::-;48759:1;48740:9;:15;48750:4;48740:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;48529:256;48813:1;48799:16;;:2;:16;;;48795:107;;48876:1;48859:9;:13;48869:2;48859:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;48795:107;48931:2;48912:7;:16;48920:7;48912:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;48968:7;48964:2;48949:27;;48958:4;48949:27;;;;;;;;;;;;48994:4;48987:11;;;48210:795;;;;;:::o;28727:162::-;28797:12;:10;:12::i;:::-;28786:23;;:7;:5;:7::i;:::-;:23;;;28782:101;;28859:12;:10;:12::i;:::-;28832:40;;;;;;;;;;;:::i;:::-;;;;;;;;28782:101;28727:162::o;29843:187::-;29916:16;29935:6;;;;;;;;;;;29916:25;;29960:8;29951:6;;:17;;;;;;;;;;;;;;;;;;30014:8;29983:40;;30004:8;29983:40;;;;;;;;;;;;29906:124;29843:187;:::o;54963:312::-;55090:1;55070:22;;:8;:22;;;55066:91;;55137:8;55115:31;;;;;;;;;;;:::i;:::-;;;;;;;;55066:91;55204:8;55166:18;:25;55185:5;55166:25;;;;;;;;;;;;;;;:35;55192:8;55166:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;55249:8;55227:41;;55242:5;55227:41;;;55259:8;55227:41;;;;;;:::i;:::-;;;;;;;;54963:312;;;:::o;56290:782::-;56423:1;56406:2;:14;;;:18;56402:664;;;56460:2;56444:36;;;56481:12;:10;:12::i;:::-;56495:4;56501:7;56510:4;56444:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;56440:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56770:1;56753:6;:13;:18;56749:293;;56824:2;56802:25;;;;;;;;;;;:::i;:::-;;;;;;;;56749:293;56994:6;56988:13;56979:6;56975:2;56971:15;56964:38;56440:616;56572:41;;;56562:51;;;:6;:51;;;;56558:130;;56666:2;56644:25;;;;;;;;;;;:::i;:::-;;;;;;;;56558:130;56516:186;56402:664;56290:782;;;;:::o;58979:593::-;59052:13;59077:22;59091:7;59077:13;:22::i;:::-;;59110:23;59136:10;:19;59147:7;59136:19;;;;;;;;;;;59110:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59165:18;59186:10;:8;:10::i;:::-;59165:31;;59291:1;59275:4;59269:18;:23;59265:70;;59315:9;59308:16;;;;;;59265:70;59460:1;59440:9;59434:23;:27;59430:95;;;59498:4;59504:9;59484:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;59477:37;;;;;;59430:95;59542:23;59557:7;59542:14;:23::i;:::-;59535:30;;;;58979:593;;;;:::o;50005:100::-;50072:26;50082:2;50086:7;50072:26;;;;;;;;;;;;:9;:26::i;:::-;50005:100;;:::o;59691:167::-;59804:9;59782:10;:19;59793:7;59782:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;59828:23;59843:7;59828:23;;;;;;:::i;:::-;;;;;;;;59691:167;;:::o;40933:300::-;41035:4;41085:25;41070:40;;;:11;:40;;;;:104;;;;41141:33;41126:48;;;:11;:48;;;;41070:104;:156;;;;41190:36;41214:11;41190:23;:36::i;:::-;41070:156;41051:175;;40933:300;;;:::o;45079:115::-;45145:7;45171;:16;45179:7;45171:16;;;;;;;;;;;;;;;;;;;;;45164:23;;45079:115;;;:::o;54092:662::-;54252:9;:31;;;;54281:1;54265:18;;:4;:18;;;;54252:31;54248:460;;;54299:13;54315:22;54329:7;54315:13;:22::i;:::-;54299:38;;54481:1;54465:18;;:4;:18;;;;:35;;;;;54496:4;54487:13;;:5;:13;;;;54465:35;:69;;;;;54505:29;54522:5;54529:4;54505:16;:29::i;:::-;54504:30;54465:69;54461:142;;;54583:4;54561:27;;;;;;;;;;;:::i;:::-;;;;;;;;54461:142;54621:9;54617:81;;;54675:7;54671:2;54655:28;;54664:5;54655:28;;;;;;;;;;;;54617:81;54285:423;54248:460;54745:2;54718:15;:24;54734:7;54718:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;54092:662;;;;:::o;46454:368::-;46566:38;46580:5;46587:7;46596;46566:13;:38::i;:::-;46561:255;;46641:1;46624:19;;:5;:19;;;46620:186;;46693:7;46670:31;;;;;;;;;;;:::i;:::-;;;;;;;;46620:186;46774:7;46783;46747:44;;;;;;;;;;;;:::i;:::-;;;;;;;;46561:255;46454:368;;;:::o;42546:92::-;42597:13;42622:9;;;;;;;;;;;;;;42546:92;:::o;42049:255::-;42113:13;42138:22;42152:7;42138:13;:22::i;:::-;;42171:21;42195:10;:8;:10::i;:::-;42171:34;;42246:1;42228:7;42222:21;:25;:75;;;;;;;;;;;;;;;;;42264:7;42273:18;:7;:16;:18::i;:::-;42250:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;42222:75;42215:82;;;42049:255;;;:::o;50326:182::-;50420:18;50426:2;50430:7;50420:5;:18::i;:::-;50448:53;50479:1;50483:2;50487:7;50496:4;50448:22;:53::i;:::-;50326:182;;;:::o;32911:146::-;32987:4;33025:25;33010:40;;;:11;:40;;;;33003:47;;32911:146;;;:::o;45748:272::-;45851:4;45905:1;45886:21;;:7;:21;;;;:127;;;;;45933:7;45924:16;;:5;:16;;;:52;;;;45944:32;45961:5;45968:7;45944:16;:32::i;:::-;45924:52;:88;;;;46005:7;45980:32;;:21;45993:7;45980:12;:21::i;:::-;:32;;;45924:88;45886:127;45867:146;;45748:272;;;;;:::o;23598:698::-;23654:13;23703:14;23740:1;23720:17;23731:5;23720:10;:17::i;:::-;:21;23703:38;;23755:20;23789:6;23778:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23755:41;;23810:11;23936:6;23932:2;23928:15;23920:6;23916:28;23909:35;;23971:282;23978:4;23971:282;;;24002:5;;;;;;;;24141:10;24136:2;24129:5;24125:14;24120:32;24115:3;24107:46;24197:2;24188:11;;;;;;:::i;:::-;;;;;24230:1;24221:5;:10;23971:282;24217:21;23971:282;24273:6;24266:13;;;;;23598:698;;;:::o;49327:327::-;49408:1;49394:16;;:2;:16;;;49390:87;;49463:1;49433:33;;;;;;;;;;;:::i;:::-;;;;;;;;49390:87;49486:21;49510:32;49518:2;49522:7;49539:1;49510:7;:32::i;:::-;49486:56;;49581:1;49556:27;;:13;:27;;;49552:96;;49634:1;49606:31;;;;;;;;;;;:::i;:::-;;;;;;;;49552:96;49380:274;49327:327;;:::o;20116:916::-;20169:7;20188:14;20205:1;20188:18;;20253:8;20244:5;:17;20240:103;;20290:8;20281:17;;;;;;:::i;:::-;;;;;20326:2;20316:12;;;;20240:103;20369:8;20360:5;:17;20356:103;;20406:8;20397:17;;;;;;:::i;:::-;;;;;20442:2;20432:12;;;;20356:103;20485:8;20476:5;:17;20472:103;;20522:8;20513:17;;;;;;:::i;:::-;;;;;20558:2;20548:12;;;;20472:103;20601:7;20592:5;:16;20588:100;;20637:7;20628:16;;;;;;:::i;:::-;;;;;20672:1;20662:11;;;;20588:100;20714:7;20705:5;:16;20701:100;;20750:7;20741:16;;;;;;:::i;:::-;;;;;20785:1;20775:11;;;;20701:100;20827:7;20818:5;:16;20814:100;;20863:7;20854:16;;;;;;:::i;:::-;;;;;20898:1;20888:11;;;;20814:100;20940:7;20931:5;:16;20927:66;;20977:1;20967:11;;;;20927:66;21019:6;21012:13;;;20116:916;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:308::-;10053:4;10143:18;10135:6;10132:30;10129:56;;;10165:18;;:::i;:::-;10129:56;10203:29;10225:6;10203:29;:::i;:::-;10195:37;;10287:4;10281;10277:15;10269:23;;9991:308;;;:::o;10305:425::-;10383:5;10408:66;10424:49;10466:6;10424:49;:::i;:::-;10408:66;:::i;:::-;10399:75;;10497:6;10490:5;10483:21;10535:4;10528:5;10524:16;10573:3;10564:6;10559:3;10555:16;10552:25;10549:112;;;10580:79;;:::i;:::-;10549:112;10670:54;10717:6;10712:3;10707;10670:54;:::i;:::-;10389:341;10305:425;;;;;:::o;10750:340::-;10806:5;10855:3;10848:4;10840:6;10836:17;10832:27;10822:122;;10863:79;;:::i;:::-;10822:122;10980:6;10967:20;11005:79;11080:3;11072:6;11065:4;11057:6;11053:17;11005:79;:::i;:::-;10996:88;;10812:278;10750:340;;;;:::o;11096:654::-;11174:6;11182;11231:2;11219:9;11210:7;11206:23;11202:32;11199:119;;;11237:79;;:::i;:::-;11199:119;11357:1;11382:53;11427:7;11418:6;11407:9;11403:22;11382:53;:::i;:::-;11372:63;;11328:117;11512:2;11501:9;11497:18;11484:32;11543:18;11535:6;11532:30;11529:117;;;11565:79;;:::i;:::-;11529:117;11670:63;11725:7;11716:6;11705:9;11701:22;11670:63;:::i;:::-;11660:73;;11455:288;11096:654;;;;;:::o;11756:474::-;11824:6;11832;11881:2;11869:9;11860:7;11856:23;11852:32;11849:119;;;11887:79;;:::i;:::-;11849:119;12007:1;12032:53;12077:7;12068:6;12057:9;12053:22;12032:53;:::i;:::-;12022:63;;11978:117;12134:2;12160:53;12205:7;12196:6;12185:9;12181:22;12160:53;:::i;:::-;12150:63;;12105:118;11756:474;;;;;:::o;12236:180::-;12284:77;12281:1;12274:88;12381:4;12378:1;12371:15;12405:4;12402:1;12395:15;12422:320;12466:6;12503:1;12497:4;12493:12;12483:22;;12550:1;12544:4;12540:12;12571:18;12561:81;;12627:4;12619:6;12615:17;12605:27;;12561:81;12689:2;12681:6;12678:14;12658:18;12655:38;12652:84;;12708:18;;:::i;:::-;12652:84;12473:269;12422:320;;;:::o;12748:442::-;12897:4;12935:2;12924:9;12920:18;12912:26;;12948:71;13016:1;13005:9;13001:17;12992:6;12948:71;:::i;:::-;13029:72;13097:2;13086:9;13082:18;13073:6;13029:72;:::i;:::-;13111;13179:2;13168:9;13164:18;13155:6;13111:72;:::i;:::-;12748:442;;;;;;:::o;13196:180::-;13244:77;13241:1;13234:88;13341:4;13338:1;13331:15;13365:4;13362:1;13355:15;13382:233;13421:3;13444:24;13462:5;13444:24;:::i;:::-;13435:33;;13490:66;13483:5;13480:77;13477:103;;13560:18;;:::i;:::-;13477:103;13607:1;13600:5;13596:13;13589:20;;13382:233;;;:::o;13621:98::-;13672:6;13706:5;13700:12;13690:22;;13621:98;;;:::o;13725:168::-;13808:11;13842:6;13837:3;13830:19;13882:4;13877:3;13873:14;13858:29;;13725:168;;;;:::o;13899:373::-;13985:3;14013:38;14045:5;14013:38;:::i;:::-;14067:70;14130:6;14125:3;14067:70;:::i;:::-;14060:77;;14146:65;14204:6;14199:3;14192:4;14185:5;14181:16;14146:65;:::i;:::-;14236:29;14258:6;14236:29;:::i;:::-;14231:3;14227:39;14220:46;;13989:283;13899:373;;;;:::o;14278:640::-;14473:4;14511:3;14500:9;14496:19;14488:27;;14525:71;14593:1;14582:9;14578:17;14569:6;14525:71;:::i;:::-;14606:72;14674:2;14663:9;14659:18;14650:6;14606:72;:::i;:::-;14688;14756:2;14745:9;14741:18;14732:6;14688:72;:::i;:::-;14807:9;14801:4;14797:20;14792:2;14781:9;14777:18;14770:48;14835:76;14906:4;14897:6;14835:76;:::i;:::-;14827:84;;14278:640;;;;;;;:::o;14924:141::-;14980:5;15011:6;15005:13;14996:22;;15027:32;15053:5;15027:32;:::i;:::-;14924:141;;;;:::o;15071:349::-;15140:6;15189:2;15177:9;15168:7;15164:23;15160:32;15157:119;;;15195:79;;:::i;:::-;15157:119;15315:1;15340:63;15395:7;15386:6;15375:9;15371:22;15340:63;:::i;:::-;15330:73;;15286:127;15071:349;;;;:::o;15426:148::-;15528:11;15565:3;15550:18;;15426:148;;;;:::o;15580:390::-;15686:3;15714:39;15747:5;15714:39;:::i;:::-;15769:89;15851:6;15846:3;15769:89;:::i;:::-;15762:96;;15867:65;15925:6;15920:3;15913:4;15906:5;15902:16;15867:65;:::i;:::-;15957:6;15952:3;15948:16;15941:23;;15690:280;15580:390;;;;:::o;15976:435::-;16156:3;16178:95;16269:3;16260:6;16178:95;:::i;:::-;16171:102;;16290:95;16381:3;16372:6;16290:95;:::i;:::-;16283:102;;16402:3;16395:10;;15976:435;;;;;:::o;16417:141::-;16466:4;16489:3;16481:11;;16512:3;16509:1;16502:14;16546:4;16543:1;16533:18;16525:26;;16417:141;;;:::o;16564:93::-;16601:6;16648:2;16643;16636:5;16632:14;16628:23;16618:33;;16564:93;;;:::o;16663:107::-;16707:8;16757:5;16751:4;16747:16;16726:37;;16663:107;;;;:::o;16776:393::-;16845:6;16895:1;16883:10;16879:18;16918:97;16948:66;16937:9;16918:97;:::i;:::-;17036:39;17066:8;17055:9;17036:39;:::i;:::-;17024:51;;17108:4;17104:9;17097:5;17093:21;17084:30;;17157:4;17147:8;17143:19;17136:5;17133:30;17123:40;;16852:317;;16776:393;;;;;:::o;17175:60::-;17203:3;17224:5;17217:12;;17175:60;;;:::o;17241:142::-;17291:9;17324:53;17342:34;17351:24;17369:5;17351:24;:::i;:::-;17342:34;:::i;:::-;17324:53;:::i;:::-;17311:66;;17241:142;;;:::o;17389:75::-;17432:3;17453:5;17446:12;;17389:75;;;:::o;17470:269::-;17580:39;17611:7;17580:39;:::i;:::-;17641:91;17690:41;17714:16;17690:41;:::i;:::-;17682:6;17675:4;17669:11;17641:91;:::i;:::-;17635:4;17628:105;17546:193;17470:269;;;:::o;17745:73::-;17790:3;17745:73;:::o;17824:189::-;17901:32;;:::i;:::-;17942:65;18000:6;17992;17986:4;17942:65;:::i;:::-;17877:136;17824:189;;:::o;18019:186::-;18079:120;18096:3;18089:5;18086:14;18079:120;;;18150:39;18187:1;18180:5;18150:39;:::i;:::-;18123:1;18116:5;18112:13;18103:22;;18079:120;;;18019:186;;:::o;18211:543::-;18312:2;18307:3;18304:11;18301:446;;;18346:38;18378:5;18346:38;:::i;:::-;18430:29;18448:10;18430:29;:::i;:::-;18420:8;18416:44;18613:2;18601:10;18598:18;18595:49;;;18634:8;18619:23;;18595:49;18657:80;18713:22;18731:3;18713:22;:::i;:::-;18703:8;18699:37;18686:11;18657:80;:::i;:::-;18316:431;;18301:446;18211:543;;;:::o;18760:117::-;18814:8;18864:5;18858:4;18854:16;18833:37;;18760:117;;;;:::o;18883:169::-;18927:6;18960:51;19008:1;19004:6;18996:5;18993:1;18989:13;18960:51;:::i;:::-;18956:56;19041:4;19035;19031:15;19021:25;;18934:118;18883:169;;;;:::o;19057:295::-;19133:4;19279:29;19304:3;19298:4;19279:29;:::i;:::-;19271:37;;19341:3;19338:1;19334:11;19328:4;19325:21;19317:29;;19057:295;;;;:::o;19357:1395::-;19474:37;19507:3;19474:37;:::i;:::-;19576:18;19568:6;19565:30;19562:56;;;19598:18;;:::i;:::-;19562:56;19642:38;19674:4;19668:11;19642:38;:::i;:::-;19727:67;19787:6;19779;19773:4;19727:67;:::i;:::-;19821:1;19845:4;19832:17;;19877:2;19869:6;19866:14;19894:1;19889:618;;;;20551:1;20568:6;20565:77;;;20617:9;20612:3;20608:19;20602:26;20593:35;;20565:77;20668:67;20728:6;20721:5;20668:67;:::i;:::-;20662:4;20655:81;20524:222;19859:887;;19889:618;19941:4;19937:9;19929:6;19925:22;19975:37;20007:4;19975:37;:::i;:::-;20034:1;20048:208;20062:7;20059:1;20056:14;20048:208;;;20141:9;20136:3;20132:19;20126:26;20118:6;20111:42;20192:1;20184:6;20180:14;20170:24;;20239:2;20228:9;20224:18;20211:31;;20085:4;20082:1;20078:12;20073:17;;20048:208;;;20284:6;20275:7;20272:19;20269:179;;;20342:9;20337:3;20333:19;20327:26;20385:48;20427:4;20419:6;20415:17;20404:9;20385:48;:::i;:::-;20377:6;20370:64;20292:156;20269:179;20494:1;20490;20482:6;20478:14;20474:22;20468:4;20461:36;19896:611;;;19859:887;;19449:1303;;;19357:1395;;:::o;20758:332::-;20879:4;20917:2;20906:9;20902:18;20894:26;;20930:71;20998:1;20987:9;20983:17;20974:6;20930:71;:::i;:::-;21011:72;21079:2;21068:9;21064:18;21055:6;21011:72;:::i;:::-;20758:332;;;;;:::o;21096:180::-;21144:77;21141:1;21134:88;21241:4;21238:1;21231:15;21265:4;21262:1;21255:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1940200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"burn(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2560",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeMint(address,string)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "923",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59927,
									"end": 60810,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 59927,
									"end": 60810,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59927,
									"end": 60810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 60039,
									"end": 60145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60125,
									"end": 60137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "PUSH",
									"source": 0,
									"value": "536D696C654E4654000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "PUSH",
									"source": 0,
									"value": "534D494C45000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40827,
									"end": 40832,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40819,
									"end": 40824,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40819,
									"end": 40832,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40819,
									"end": 40832,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40819,
									"end": 40832,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 40819,
									"end": 40832,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40819,
									"end": 40832,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40819,
									"end": 40832,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 40819,
									"end": 40832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 40819,
									"end": 40832,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 40819,
									"end": 40832,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40819,
									"end": 40832,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40852,
									"end": 40859,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40842,
									"end": 40849,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40842,
									"end": 40859,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40842,
									"end": 40859,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40842,
									"end": 40859,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 40842,
									"end": 40859,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40842,
									"end": 40859,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40842,
									"end": 40859,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 40842,
									"end": 40859,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 40842,
									"end": 40859,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 40842,
									"end": 40859,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40842,
									"end": 40859,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40753,
									"end": 40866,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28228,
									"end": 28229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28204,
									"end": 28230,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 28204,
									"end": 28230,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28204,
									"end": 28216,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28204,
									"end": 28230,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 28204,
									"end": 28230,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28204,
									"end": 28230,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 28200,
									"end": 28295,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28200,
									"end": 28295,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28281,
									"end": 28282,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 28253,
									"end": 28284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28253,
									"end": 28284,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28200,
									"end": 28295,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28200,
									"end": 28295,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28304,
									"end": 28336,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 28323,
									"end": 28335,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28304,
									"end": 28322,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 28304,
									"end": 28322,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28304,
									"end": 28322,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 28304,
									"end": 28336,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28304,
									"end": 28336,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 28304,
									"end": 28336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28304,
									"end": 28336,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 28304,
									"end": 28336,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28156,
									"end": 28343,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60039,
									"end": 60145,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59927,
									"end": 60810,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 59927,
									"end": 60810,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29843,
									"end": 30030,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 29843,
									"end": 30030,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29916,
									"end": 29932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29935,
									"end": 29941,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 29935,
									"end": 29941,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29935,
									"end": 29941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29935,
									"end": 29941,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29935,
									"end": 29941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29935,
									"end": 29941,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 29935,
									"end": 29941,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 29935,
									"end": 29941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29935,
									"end": 29941,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 29935,
									"end": 29941,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29935,
									"end": 29941,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29916,
									"end": 29941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29916,
									"end": 29941,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29960,
									"end": 29968,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29957,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 29951,
									"end": 29957,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29951,
									"end": 29968,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30014,
									"end": 30022,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29983,
									"end": 30023,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29983,
									"end": 30023,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30004,
									"end": 30012,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29983,
									"end": 30023,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29983,
									"end": 30023,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29983,
									"end": 30023,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 29983,
									"end": 30023,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29983,
									"end": 30023,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29983,
									"end": 30023,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29983,
									"end": 30023,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29983,
									"end": 30023,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29983,
									"end": 30023,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29983,
									"end": 30023,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 29983,
									"end": 30023,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29983,
									"end": 30023,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 29906,
									"end": 30030,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29843,
									"end": 30030,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29843,
									"end": 30030,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 59927,
									"end": 60810,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 59927,
									"end": 60810,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59927,
									"end": 60810,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59927,
									"end": 60810,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59927,
									"end": 60810,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59927,
									"end": 60810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59927,
									"end": 60810,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59927,
									"end": 60810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59927,
									"end": 60810,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220806452a806eff68175193bbcdf101b46eacadf033b7b14d04d88fd0d1f76ac8c64736f6c63430008140033",
									".code": [
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "D204C45E"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59927,
											"end": 60810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 60603,
											"end": 60808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 60603,
											"end": 60808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 60603,
											"end": 60808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 41737,
											"end": 41826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 41737,
											"end": 41826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 42869,
											"end": 43023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 42869,
											"end": 43023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 42869,
											"end": 43023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 42695,
											"end": 42808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 42695,
											"end": 42808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 43515,
											"end": 44093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 43515,
											"end": 44093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 44159,
											"end": 44291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 44159,
											"end": 44291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 57600,
											"end": 57914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 57600,
											"end": 57914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 41557,
											"end": 41675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 41557,
											"end": 41675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 41557,
											"end": 41675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41292,
											"end": 41500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 41292,
											"end": 41500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 41292,
											"end": 41500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29224,
											"end": 29325,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 29224,
											"end": 29325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29224,
											"end": 29325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29224,
											"end": 29325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 29224,
											"end": 29325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29224,
											"end": 29325,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29224,
											"end": 29325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29224,
											"end": 29325,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 28569,
											"end": 28654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 28569,
											"end": 28654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 41890,
											"end": 41983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 41890,
											"end": 41983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 43090,
											"end": 43234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 43090,
											"end": 43234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 44357,
											"end": 44565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 44357,
											"end": 44565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 60408,
											"end": 60597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 60408,
											"end": 60597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 60408,
											"end": 60597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 60151,
											"end": 60334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 60151,
											"end": 60334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 43300,
											"end": 43453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 43300,
											"end": 43453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 43300,
											"end": 43453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 29474,
											"end": 29689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 29474,
											"end": 29689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60738,
											"end": 60742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60765,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 60789,
											"end": 60800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60765,
											"end": 60788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 60765,
											"end": 60801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60765,
											"end": 60801,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 60765,
											"end": 60801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60758,
											"end": 60801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60758,
											"end": 60801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60603,
											"end": 60808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41795,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41814,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 41807,
											"end": 41819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 41807,
											"end": 41819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41737,
											"end": 41826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42936,
											"end": 42943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42955,
											"end": 42977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 42969,
											"end": 42976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42955,
											"end": 42968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 42955,
											"end": 42977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42955,
											"end": 42977,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 42955,
											"end": 42977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42955,
											"end": 42977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42995,
											"end": 43016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 43008,
											"end": 43015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42995,
											"end": 43007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 42995,
											"end": 43016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42995,
											"end": 43016,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 42995,
											"end": 43016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42988,
											"end": 43016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42988,
											"end": 43016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42869,
											"end": 43023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42766,
											"end": 42801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 42775,
											"end": 42777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42779,
											"end": 42786,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42788,
											"end": 42800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 42788,
											"end": 42798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 42788,
											"end": 42800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42788,
											"end": 42800,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 42788,
											"end": 42800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42766,
											"end": 42774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 42766,
											"end": 42801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42766,
											"end": 42801,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 42766,
											"end": 42801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42695,
											"end": 42808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43623,
											"end": 43624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43609,
											"end": 43625,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43609,
											"end": 43625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43609,
											"end": 43611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43609,
											"end": 43625,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43609,
											"end": 43625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43609,
											"end": 43625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43605,
											"end": 43692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 43605,
											"end": 43692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43678,
											"end": 43679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 43648,
											"end": 43681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43648,
											"end": 43681,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43605,
											"end": 43692,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 43605,
											"end": 43692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43934,
											"end": 43968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 43942,
											"end": 43944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43946,
											"end": 43953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 43955,
											"end": 43965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 43955,
											"end": 43967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43967,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 43955,
											"end": 43967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43934,
											"end": 43941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 43934,
											"end": 43968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43934,
											"end": 43968,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 43934,
											"end": 43968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43910,
											"end": 43968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43999,
											"end": 44003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43982,
											"end": 44003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43982,
											"end": 44003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43982,
											"end": 43995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43982,
											"end": 44003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43982,
											"end": 44003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43982,
											"end": 44003,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43978,
											"end": 44087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 43978,
											"end": 44087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44047,
											"end": 44051,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44053,
											"end": 44060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44062,
											"end": 44075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "PUSH",
											"source": 0,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 44026,
											"end": 44076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44026,
											"end": 44076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43978,
											"end": 44087,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 43978,
											"end": 44087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43595,
											"end": 44093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43515,
											"end": 44093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 44262,
											"end": 44266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44268,
											"end": 44270,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44272,
											"end": 44279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 44245,
											"end": 44284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 44245,
											"end": 44284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44159,
											"end": 44291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57865,
											"end": 57907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 57881,
											"end": 57882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57885,
											"end": 57892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57894,
											"end": 57906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 57894,
											"end": 57904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 57894,
											"end": 57906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57894,
											"end": 57906,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 57894,
											"end": 57906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57865,
											"end": 57872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 57865,
											"end": 57907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57865,
											"end": 57907,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 57865,
											"end": 57907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57865,
											"end": 57907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57600,
											"end": 57914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41620,
											"end": 41627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41646,
											"end": 41668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 41660,
											"end": 41667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41646,
											"end": 41659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 41646,
											"end": 41668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41646,
											"end": 41668,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 41646,
											"end": 41668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41639,
											"end": 41668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41639,
											"end": 41668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41557,
											"end": 41675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41355,
											"end": 41362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41395,
											"end": 41396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41378,
											"end": 41397,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41378,
											"end": 41397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41378,
											"end": 41383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41378,
											"end": 41397,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41378,
											"end": 41397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41378,
											"end": 41397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41374,
											"end": 41461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 41374,
											"end": 41461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41447,
											"end": 41448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "PUSH",
											"source": 0,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 41420,
											"end": 41450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41420,
											"end": 41450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41374,
											"end": 41461,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 41374,
											"end": 41461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41477,
											"end": 41486,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41487,
											"end": 41492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41477,
											"end": 41493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41470,
											"end": 41493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41470,
											"end": 41493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41292,
											"end": 41500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29224,
											"end": 29325,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 29224,
											"end": 29325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28462,
											"end": 28475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 28462,
											"end": 28473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 28462,
											"end": 28475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28462,
											"end": 28475,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 28462,
											"end": 28475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29288,
											"end": 29318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 29315,
											"end": 29316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29288,
											"end": 29306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 29288,
											"end": 29318,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29288,
											"end": 29318,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 29288,
											"end": 29318,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29224,
											"end": 29325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28615,
											"end": 28622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28641,
											"end": 28647,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28641,
											"end": 28647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28641,
											"end": 28647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28647,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28647,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28641,
											"end": 28647,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28647,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28647,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28641,
											"end": 28647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28634,
											"end": 28647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28634,
											"end": 28647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28569,
											"end": 28654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41937,
											"end": 41950,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41969,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 41962,
											"end": 41976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 41962,
											"end": 41976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41890,
											"end": 41983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43175,
											"end": 43227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 43194,
											"end": 43206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 43194,
											"end": 43204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 43194,
											"end": 43206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43194,
											"end": 43206,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 43194,
											"end": 43206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43208,
											"end": 43216,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43218,
											"end": 43226,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43175,
											"end": 43193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 43175,
											"end": 43227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43175,
											"end": 43227,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 43175,
											"end": 43227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43090,
											"end": 43234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44470,
											"end": 44501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 44483,
											"end": 44487,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44489,
											"end": 44491,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44493,
											"end": 44500,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44470,
											"end": 44482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 44470,
											"end": 44501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44470,
											"end": 44501,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 44470,
											"end": 44501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44511,
											"end": 44558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 44534,
											"end": 44538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44540,
											"end": 44542,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44544,
											"end": 44551,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44553,
											"end": 44557,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44511,
											"end": 44533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 44511,
											"end": 44558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44511,
											"end": 44558,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 44511,
											"end": 44558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44357,
											"end": 44565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60531,
											"end": 60544,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60567,
											"end": 60590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 60582,
											"end": 60589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60567,
											"end": 60581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 60567,
											"end": 60590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60567,
											"end": 60590,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 60567,
											"end": 60590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60560,
											"end": 60590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60560,
											"end": 60590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60408,
											"end": 60597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28462,
											"end": 28475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 28462,
											"end": 28473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 28462,
											"end": 28475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28462,
											"end": 28475,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 28462,
											"end": 28475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60227,
											"end": 60242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60245,
											"end": 60257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60245,
											"end": 60257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 60245,
											"end": 60259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60245,
											"end": 60259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60227,
											"end": 60259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60227,
											"end": 60259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60269,
											"end": 60291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 60279,
											"end": 60281,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60283,
											"end": 60290,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60269,
											"end": 60278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 60269,
											"end": 60291,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60269,
											"end": 60291,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 60269,
											"end": 60291,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60301,
											"end": 60327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 60314,
											"end": 60321,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60323,
											"end": 60326,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60301,
											"end": 60313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 60301,
											"end": 60327,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60301,
											"end": 60327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 60301,
											"end": 60327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60217,
											"end": 60334,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60151,
											"end": 60334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43388,
											"end": 43392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43411,
											"end": 43429,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43430,
											"end": 43435,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43411,
											"end": 43436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43437,
											"end": 43445,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 43411,
											"end": 43446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43404,
											"end": 43446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43404,
											"end": 43446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43300,
											"end": 43453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28462,
											"end": 28475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 28462,
											"end": 28473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 28462,
											"end": 28475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28462,
											"end": 28475,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 28462,
											"end": 28475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29578,
											"end": 29579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29558,
											"end": 29580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29558,
											"end": 29580,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29558,
											"end": 29580,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 29554,
											"end": 29645,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29631,
											"end": 29632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 29603,
											"end": 29634,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29603,
											"end": 29634,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29554,
											"end": 29645,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 29554,
											"end": 29645,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 29673,
											"end": 29681,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29672,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 29654,
											"end": 29682,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 29654,
											"end": 29682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58706,
											"end": 58913,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 58706,
											"end": 58913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58808,
											"end": 58812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58529,
											"end": 58539,
											"name": "PUSH",
											"source": 0,
											"value": "49064906"
										},
										{
											"begin": 58522,
											"end": 58540,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58522,
											"end": 58540,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 58831,
											"end": 58866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58831,
											"end": 58866,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 58831,
											"end": 58866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58831,
											"end": 58842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58831,
											"end": 58866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58831,
											"end": 58866,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 58831,
											"end": 58866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58831,
											"end": 58866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58831,
											"end": 58906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58831,
											"end": 58906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 58831,
											"end": 58906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58831,
											"end": 58906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58870,
											"end": 58906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 58894,
											"end": 58905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58870,
											"end": 58893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 58870,
											"end": 58906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58870,
											"end": 58906,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 58870,
											"end": 58906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58831,
											"end": 58906,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 58831,
											"end": 58906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58824,
											"end": 58906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58824,
											"end": 58906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58706,
											"end": 58913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58706,
											"end": 58913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58706,
											"end": 58913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58706,
											"end": 58913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55510,
											"end": 55751,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 55510,
											"end": 55751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55573,
											"end": 55580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55592,
											"end": 55605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55608,
											"end": 55625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 55617,
											"end": 55624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55608,
											"end": 55616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 55608,
											"end": 55625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55608,
											"end": 55625,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 55608,
											"end": 55625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55592,
											"end": 55625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55592,
											"end": 55625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55656,
											"end": 55657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55639,
											"end": 55658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55639,
											"end": 55658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55639,
											"end": 55644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55639,
											"end": 55658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55639,
											"end": 55658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55639,
											"end": 55658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55635,
											"end": 55723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 55635,
											"end": 55723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55704,
											"end": 55711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 55681,
											"end": 55712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55681,
											"end": 55712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55635,
											"end": 55723,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 55635,
											"end": 55723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55739,
											"end": 55744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55732,
											"end": 55744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55732,
											"end": 55744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55732,
											"end": 55744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55510,
											"end": 55751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55510,
											"end": 55751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55510,
											"end": 55751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55510,
											"end": 55751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45310,
											"end": 45437,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 45310,
											"end": 45437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45380,
											"end": 45387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45406,
											"end": 45421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45422,
											"end": 45429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45406,
											"end": 45430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45399,
											"end": 45430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45399,
											"end": 45430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45310,
											"end": 45437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45310,
											"end": 45437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45310,
											"end": 45437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45310,
											"end": 45437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26840,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 26744,
											"end": 26840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26823,
											"end": 26833,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26816,
											"end": 26833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26816,
											"end": 26833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26744,
											"end": 26840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53790,
											"end": 53910,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 53790,
											"end": 53910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53870,
											"end": 53903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 53879,
											"end": 53881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53883,
											"end": 53890,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53892,
											"end": 53896,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53898,
											"end": 53902,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53870,
											"end": 53878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 53870,
											"end": 53903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53870,
											"end": 53903,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 53870,
											"end": 53903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53790,
											"end": 53910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53790,
											"end": 53910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53790,
											"end": 53910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53790,
											"end": 53910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48210,
											"end": 49005,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 48210,
											"end": 49005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48296,
											"end": 48303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48315,
											"end": 48327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48330,
											"end": 48347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 48339,
											"end": 48346,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48330,
											"end": 48338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 48330,
											"end": 48347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48330,
											"end": 48347,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 48330,
											"end": 48347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48315,
											"end": 48347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48315,
											"end": 48347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48423,
											"end": 48424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48407,
											"end": 48425,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48407,
											"end": 48425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48407,
											"end": 48411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48407,
											"end": 48425,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48407,
											"end": 48425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48407,
											"end": 48425,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48403,
											"end": 48489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 48403,
											"end": 48489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48441,
											"end": 48478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 48458,
											"end": 48462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48464,
											"end": 48468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48470,
											"end": 48477,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48441,
											"end": 48457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 48441,
											"end": 48478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48441,
											"end": 48478,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 48441,
											"end": 48478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48403,
											"end": 48489,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 48403,
											"end": 48489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48549,
											"end": 48550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48533,
											"end": 48551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48533,
											"end": 48551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48533,
											"end": 48537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48533,
											"end": 48551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48533,
											"end": 48551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48533,
											"end": 48551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48529,
											"end": 48785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 48529,
											"end": 48785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48649,
											"end": 48697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 48666,
											"end": 48667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48670,
											"end": 48677,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48687,
											"end": 48688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48691,
											"end": 48696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48649,
											"end": 48657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 48649,
											"end": 48697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48649,
											"end": 48697,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 48649,
											"end": 48697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48759,
											"end": 48760,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48740,
											"end": 48749,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48750,
											"end": 48754,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48740,
											"end": 48760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48760,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48760,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48760,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48529,
											"end": 48785,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 48529,
											"end": 48785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48813,
											"end": 48814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48799,
											"end": 48815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48799,
											"end": 48815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48799,
											"end": 48801,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48799,
											"end": 48815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48799,
											"end": 48815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48799,
											"end": 48815,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48795,
											"end": 48902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 48795,
											"end": 48902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48876,
											"end": 48877,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48859,
											"end": 48868,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48869,
											"end": 48871,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48859,
											"end": 48877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48877,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48877,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48877,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48859,
											"end": 48877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48795,
											"end": 48902,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 48795,
											"end": 48902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48931,
											"end": 48933,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48919,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48912,
											"end": 48928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48920,
											"end": 48927,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48928,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48912,
											"end": 48928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48928,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48912,
											"end": 48928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48912,
											"end": 48928,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48912,
											"end": 48933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48968,
											"end": 48975,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48964,
											"end": 48966,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48949,
											"end": 48976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48949,
											"end": 48976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48958,
											"end": 48962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48949,
											"end": 48976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48949,
											"end": 48976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48949,
											"end": 48976,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 48949,
											"end": 48976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48949,
											"end": 48976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48949,
											"end": 48976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48949,
											"end": 48976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48949,
											"end": 48976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48949,
											"end": 48976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48949,
											"end": 48976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48949,
											"end": 48976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48949,
											"end": 48976,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 48994,
											"end": 48998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48987,
											"end": 48998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48987,
											"end": 48998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48987,
											"end": 48998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48210,
											"end": 49005,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 48210,
											"end": 49005,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48210,
											"end": 49005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48210,
											"end": 49005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48210,
											"end": 49005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48210,
											"end": 49005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28889,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 28727,
											"end": 28889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28797,
											"end": 28809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 28797,
											"end": 28807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 28797,
											"end": 28809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28797,
											"end": 28809,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 28797,
											"end": 28809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28786,
											"end": 28809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28786,
											"end": 28809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28786,
											"end": 28793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 28786,
											"end": 28791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 28786,
											"end": 28793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28786,
											"end": 28793,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 28786,
											"end": 28793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28786,
											"end": 28809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28786,
											"end": 28809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28786,
											"end": 28809,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28782,
											"end": 28883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 28782,
											"end": 28883,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28859,
											"end": 28871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 28859,
											"end": 28869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 28859,
											"end": 28871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28859,
											"end": 28871,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 28859,
											"end": 28871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 28832,
											"end": 28872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28832,
											"end": 28872,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28782,
											"end": 28883,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 28782,
											"end": 28883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29843,
											"end": 30030,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 29843,
											"end": 30030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29916,
											"end": 29932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29935,
											"end": 29941,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29935,
											"end": 29941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29935,
											"end": 29941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29935,
											"end": 29941,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29935,
											"end": 29941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29935,
											"end": 29941,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29935,
											"end": 29941,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29935,
											"end": 29941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29935,
											"end": 29941,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29935,
											"end": 29941,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29935,
											"end": 29941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29916,
											"end": 29941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29916,
											"end": 29941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29960,
											"end": 29968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29957,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29951,
											"end": 29957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30014,
											"end": 30022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29983,
											"end": 30023,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29983,
											"end": 30023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30004,
											"end": 30012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29983,
											"end": 30023,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29983,
											"end": 30023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29983,
											"end": 30023,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 29983,
											"end": 30023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29983,
											"end": 30023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29983,
											"end": 30023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29983,
											"end": 30023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29983,
											"end": 30023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29983,
											"end": 30023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29983,
											"end": 30023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29983,
											"end": 30023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29983,
											"end": 30023,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 30030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29843,
											"end": 30030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29843,
											"end": 30030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 55275,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 54963,
											"end": 55275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55090,
											"end": 55091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55070,
											"end": 55092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55070,
											"end": 55092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55070,
											"end": 55078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55070,
											"end": 55092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55070,
											"end": 55092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55070,
											"end": 55092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55066,
											"end": 55157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 55066,
											"end": 55157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55137,
											"end": 55145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "PUSH",
											"source": 0,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 55115,
											"end": 55146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55146,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55066,
											"end": 55157,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 55066,
											"end": 55157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55204,
											"end": 55212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55184,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55185,
											"end": 55190,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55166,
											"end": 55191,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55192,
											"end": 55200,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55166,
											"end": 55212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55249,
											"end": 55257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55242,
											"end": 55247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 55259,
											"end": 55267,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 55227,
											"end": 55268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55227,
											"end": 55268,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 55275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 55275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 55275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54963,
											"end": 55275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56290,
											"end": 57072,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 56290,
											"end": 57072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56423,
											"end": 56424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56406,
											"end": 56408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56406,
											"end": 56420,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56406,
											"end": 56420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56406,
											"end": 56420,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 56406,
											"end": 56424,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56402,
											"end": 57066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56402,
											"end": 57066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 56402,
											"end": 57066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56460,
											"end": 56462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56480,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56444,
											"end": 56480,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56480,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 56481,
											"end": 56493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 56481,
											"end": 56491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 56481,
											"end": 56493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56481,
											"end": 56493,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 56481,
											"end": 56493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56495,
											"end": 56499,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 56501,
											"end": 56508,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56510,
											"end": 56514,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 56444,
											"end": 56515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 56444,
											"end": 56515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 56444,
											"end": 56515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56770,
											"end": 56771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56753,
											"end": 56759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56753,
											"end": 56766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56753,
											"end": 56771,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56749,
											"end": 57042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 56749,
											"end": 57042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56824,
											"end": 56826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 56802,
											"end": 56827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56802,
											"end": 56827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56749,
											"end": 57042,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 56749,
											"end": 57042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56994,
											"end": 57000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56988,
											"end": 57001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56979,
											"end": 56985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56975,
											"end": 56977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56971,
											"end": 56986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56964,
											"end": 57002,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 56440,
											"end": 57056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56572,
											"end": 56613,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 56572,
											"end": 56613,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56572,
											"end": 56613,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 56562,
											"end": 56613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56562,
											"end": 56613,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56562,
											"end": 56613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56562,
											"end": 56568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56562,
											"end": 56613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56562,
											"end": 56613,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56562,
											"end": 56613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56562,
											"end": 56613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 56688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 56558,
											"end": 56688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56666,
											"end": 56668,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 56644,
											"end": 56669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56644,
											"end": 56669,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56558,
											"end": 56688,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 56558,
											"end": 56688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56516,
											"end": 56702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56402,
											"end": 57066,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 56402,
											"end": 57066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56290,
											"end": 57072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56290,
											"end": 57072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56290,
											"end": 57072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56290,
											"end": 57072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56290,
											"end": 57072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59572,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 58979,
											"end": 59572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59052,
											"end": 59065,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 59077,
											"end": 59099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 59091,
											"end": 59098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 59077,
											"end": 59099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59099,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 59077,
											"end": 59099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59136,
											"end": 59146,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59136,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59147,
											"end": 59154,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59136,
											"end": 59155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59136,
											"end": 59155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59136,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59136,
											"end": 59155,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 59110,
											"end": 59155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 59110,
											"end": 59155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59165,
											"end": 59183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59186,
											"end": 59196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 59186,
											"end": 59194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 59186,
											"end": 59196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59186,
											"end": 59196,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 59186,
											"end": 59196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59165,
											"end": 59196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59165,
											"end": 59196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59291,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59275,
											"end": 59279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59269,
											"end": 59287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59269,
											"end": 59292,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59265,
											"end": 59335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 59265,
											"end": 59335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59315,
											"end": 59324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59308,
											"end": 59324,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59308,
											"end": 59324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59308,
											"end": 59324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59308,
											"end": 59324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59308,
											"end": 59324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 59308,
											"end": 59324,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59265,
											"end": 59335,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 59265,
											"end": 59335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59460,
											"end": 59461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59440,
											"end": 59449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59434,
											"end": 59457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59434,
											"end": 59461,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 59430,
											"end": 59525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59498,
											"end": 59502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59504,
											"end": 59513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 59484,
											"end": 59514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59484,
											"end": 59514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59477,
											"end": 59514,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59477,
											"end": 59514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59477,
											"end": 59514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59477,
											"end": 59514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59477,
											"end": 59514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 59477,
											"end": 59514,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59430,
											"end": 59525,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 59430,
											"end": 59525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59542,
											"end": 59565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 59557,
											"end": 59564,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59542,
											"end": 59556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 59542,
											"end": 59565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59542,
											"end": 59565,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 59542,
											"end": 59565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59535,
											"end": 59565,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59535,
											"end": 59565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59535,
											"end": 59565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59535,
											"end": 59565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59572,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 58979,
											"end": 59572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58979,
											"end": 59572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50005,
											"end": 50105,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 50005,
											"end": 50105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 50082,
											"end": 50084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50086,
											"end": 50093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50072,
											"end": 50081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 50072,
											"end": 50098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 50072,
											"end": 50098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50005,
											"end": 50105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50005,
											"end": 50105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50005,
											"end": 50105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59691,
											"end": 59858,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 59691,
											"end": 59858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59804,
											"end": 59813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59792,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59782,
											"end": 59801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59793,
											"end": 59800,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59801,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59782,
											"end": 59801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59801,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59782,
											"end": 59801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59782,
											"end": 59801,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 59782,
											"end": 59813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 59782,
											"end": 59813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59813,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 59782,
											"end": 59813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59782,
											"end": 59813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "PUSH",
											"source": 0,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 59843,
											"end": 59850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 59828,
											"end": 59851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59828,
											"end": 59851,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 59691,
											"end": 59858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59691,
											"end": 59858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59691,
											"end": 59858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40933,
											"end": 41233,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 40933,
											"end": 41233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41035,
											"end": 41039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41085,
											"end": 41110,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41070,
											"end": 41110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41070,
											"end": 41110,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41081,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41070,
											"end": 41110,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41110,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 41070,
											"end": 41174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41174,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41126,
											"end": 41174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41126,
											"end": 41174,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 41126,
											"end": 41174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41126,
											"end": 41137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41126,
											"end": 41174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41126,
											"end": 41174,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 41126,
											"end": 41174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41126,
											"end": 41174,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41174,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 41070,
											"end": 41174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 41070,
											"end": 41226,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41226,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41190,
											"end": 41226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 41214,
											"end": 41225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41190,
											"end": 41213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 41190,
											"end": 41226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41190,
											"end": 41226,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 41190,
											"end": 41226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41070,
											"end": 41226,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 41070,
											"end": 41226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41051,
											"end": 41226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41051,
											"end": 41226,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40933,
											"end": 41233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40933,
											"end": 41233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40933,
											"end": 41233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40933,
											"end": 41233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45194,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 45079,
											"end": 45194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45145,
											"end": 45152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45171,
											"end": 45178,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45179,
											"end": 45186,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45171,
											"end": 45187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45164,
											"end": 45187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45164,
											"end": 45187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54092,
											"end": 54754,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 54092,
											"end": 54754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54252,
											"end": 54261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54252,
											"end": 54283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54252,
											"end": 54283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 54252,
											"end": 54283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54252,
											"end": 54283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54281,
											"end": 54282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54265,
											"end": 54283,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54265,
											"end": 54283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54265,
											"end": 54269,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54265,
											"end": 54283,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54265,
											"end": 54283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54265,
											"end": 54283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54265,
											"end": 54283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54252,
											"end": 54283,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 54252,
											"end": 54283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54248,
											"end": 54708,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54248,
											"end": 54708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 54248,
											"end": 54708,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54299,
											"end": 54312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54315,
											"end": 54337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 54329,
											"end": 54336,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54315,
											"end": 54328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 54315,
											"end": 54337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54315,
											"end": 54337,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 54315,
											"end": 54337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54299,
											"end": 54337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54299,
											"end": 54337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54481,
											"end": 54482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54465,
											"end": 54483,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54465,
											"end": 54483,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54483,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54465,
											"end": 54483,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54483,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 54465,
											"end": 54500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54496,
											"end": 54500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54487,
											"end": 54500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54487,
											"end": 54500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54487,
											"end": 54492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54487,
											"end": 54500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54487,
											"end": 54500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54487,
											"end": 54500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54487,
											"end": 54500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54500,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 54465,
											"end": 54500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 54465,
											"end": 54534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54505,
											"end": 54534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 54522,
											"end": 54527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54529,
											"end": 54533,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54505,
											"end": 54521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 54505,
											"end": 54534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54505,
											"end": 54534,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 54505,
											"end": 54534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54504,
											"end": 54534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54465,
											"end": 54534,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 54465,
											"end": 54534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54461,
											"end": 54603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54461,
											"end": 54603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 54461,
											"end": 54603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54583,
											"end": 54587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "PUSH",
											"source": 0,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 54561,
											"end": 54588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54561,
											"end": 54588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54461,
											"end": 54603,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 54461,
											"end": 54603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54621,
											"end": 54630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54617,
											"end": 54698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54617,
											"end": 54698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 54617,
											"end": 54698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54675,
											"end": 54682,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54671,
											"end": 54673,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54655,
											"end": 54683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54655,
											"end": 54683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54664,
											"end": 54669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54655,
											"end": 54683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54655,
											"end": 54683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54655,
											"end": 54683,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 54655,
											"end": 54683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54655,
											"end": 54683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54655,
											"end": 54683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54655,
											"end": 54683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54655,
											"end": 54683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54655,
											"end": 54683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54655,
											"end": 54683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54655,
											"end": 54683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54655,
											"end": 54683,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 54617,
											"end": 54698,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 54617,
											"end": 54698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54285,
											"end": 54708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54248,
											"end": 54708,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 54248,
											"end": 54708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54745,
											"end": 54747,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54733,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54718,
											"end": 54742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54734,
											"end": 54741,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54718,
											"end": 54742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54718,
											"end": 54742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54718,
											"end": 54742,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54718,
											"end": 54747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54092,
											"end": 54754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54092,
											"end": 54754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54092,
											"end": 54754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54092,
											"end": 54754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54092,
											"end": 54754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46822,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 46454,
											"end": 46822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46566,
											"end": 46604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 46580,
											"end": 46585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46587,
											"end": 46594,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46596,
											"end": 46603,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46566,
											"end": 46579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 46566,
											"end": 46604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46566,
											"end": 46604,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 46566,
											"end": 46604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46561,
											"end": 46816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 46561,
											"end": 46816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46641,
											"end": 46642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46624,
											"end": 46643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46624,
											"end": 46643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46624,
											"end": 46629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46624,
											"end": 46643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46624,
											"end": 46643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46624,
											"end": 46643,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46620,
											"end": 46806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 46620,
											"end": 46806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46693,
											"end": 46700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 46670,
											"end": 46701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46670,
											"end": 46701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46620,
											"end": 46806,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 46620,
											"end": 46806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46774,
											"end": 46781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "PUSH",
											"source": 0,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 46747,
											"end": 46791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46791,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46561,
											"end": 46816,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 46561,
											"end": 46816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42546,
											"end": 42638,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 42546,
											"end": 42638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42597,
											"end": 42610,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42622,
											"end": 42631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42622,
											"end": 42631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42622,
											"end": 42631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42622,
											"end": 42631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42622,
											"end": 42631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42622,
											"end": 42631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42622,
											"end": 42631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42622,
											"end": 42631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42622,
											"end": 42631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42622,
											"end": 42631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42622,
											"end": 42631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42622,
											"end": 42631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42622,
											"end": 42631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42622,
											"end": 42631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42546,
											"end": 42638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42546,
											"end": 42638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42049,
											"end": 42304,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 42049,
											"end": 42304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42113,
											"end": 42126,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42138,
											"end": 42160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 42152,
											"end": 42159,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42138,
											"end": 42151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 42138,
											"end": 42160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42138,
											"end": 42160,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 42138,
											"end": 42160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42138,
											"end": 42160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42171,
											"end": 42192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42195,
											"end": 42205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 42195,
											"end": 42203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 42195,
											"end": 42205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42195,
											"end": 42205,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 42195,
											"end": 42205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42171,
											"end": 42205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42171,
											"end": 42205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42246,
											"end": 42247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42228,
											"end": 42235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42222,
											"end": 42243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42222,
											"end": 42247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42264,
											"end": 42271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42273,
											"end": 42291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 42273,
											"end": 42280,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42273,
											"end": 42289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 42273,
											"end": 42291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42273,
											"end": 42291,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 42273,
											"end": 42291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 42250,
											"end": 42292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42250,
											"end": 42292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 42222,
											"end": 42297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42215,
											"end": 42297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42215,
											"end": 42297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42215,
											"end": 42297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42049,
											"end": 42304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42049,
											"end": 42304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42049,
											"end": 42304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42049,
											"end": 42304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50326,
											"end": 50508,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 50326,
											"end": 50508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50420,
											"end": 50438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 50426,
											"end": 50428,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50430,
											"end": 50437,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50420,
											"end": 50425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 50420,
											"end": 50438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50420,
											"end": 50438,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 50420,
											"end": 50438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50448,
											"end": 50501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 50479,
											"end": 50480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50483,
											"end": 50485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50487,
											"end": 50494,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50496,
											"end": 50500,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50448,
											"end": 50470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 50448,
											"end": 50501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50448,
											"end": 50501,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 50448,
											"end": 50501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50326,
											"end": 50508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50326,
											"end": 50508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50326,
											"end": 50508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50326,
											"end": 50508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 33057,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 32911,
											"end": 33057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32987,
											"end": 32991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33025,
											"end": 33050,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33010,
											"end": 33050,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33010,
											"end": 33050,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33010,
											"end": 33050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33010,
											"end": 33021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33010,
											"end": 33050,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33010,
											"end": 33050,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33010,
											"end": 33050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33010,
											"end": 33050,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33003,
											"end": 33050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33003,
											"end": 33050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 33057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 33057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 33057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 33057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45748,
											"end": 46020,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 45748,
											"end": 46020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45851,
											"end": 45855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45905,
											"end": 45906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45886,
											"end": 45907,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45886,
											"end": 45907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45886,
											"end": 45893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45886,
											"end": 45907,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45886,
											"end": 45907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45886,
											"end": 45907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45886,
											"end": 45907,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45886,
											"end": 46013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45886,
											"end": 46013,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45886,
											"end": 46013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 45886,
											"end": 46013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45886,
											"end": 46013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45933,
											"end": 45940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45924,
											"end": 45940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45924,
											"end": 45940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45924,
											"end": 45929,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45924,
											"end": 45940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45924,
											"end": 45940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45924,
											"end": 45940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45924,
											"end": 45976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45924,
											"end": 45976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 45924,
											"end": 45976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45924,
											"end": 45976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45944,
											"end": 45976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 45961,
											"end": 45966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45968,
											"end": 45975,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45944,
											"end": 45960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 45944,
											"end": 45976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45944,
											"end": 45976,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 45944,
											"end": 45976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45924,
											"end": 45976,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 45924,
											"end": 45976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45924,
											"end": 46012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45924,
											"end": 46012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 45924,
											"end": 46012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45924,
											"end": 46012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46005,
											"end": 46012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45980,
											"end": 46012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 45993,
											"end": 46000,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 45992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 45980,
											"end": 46001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46001,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 45980,
											"end": 46001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45980,
											"end": 46012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45980,
											"end": 46012,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45924,
											"end": 46012,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 45924,
											"end": 46012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45886,
											"end": 46013,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 45886,
											"end": 46013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45867,
											"end": 46013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45867,
											"end": 46013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45748,
											"end": 46020,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 45748,
											"end": 46020,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45748,
											"end": 46020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45748,
											"end": 46020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45748,
											"end": 46020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45748,
											"end": 46020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23598,
											"end": 24296,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 23598,
											"end": 24296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23654,
											"end": 23667,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23703,
											"end": 23717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23740,
											"end": 23741,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23720,
											"end": 23737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 23731,
											"end": 23736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23720,
											"end": 23730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 23720,
											"end": 23737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23720,
											"end": 23737,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 23720,
											"end": 23737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23720,
											"end": 23741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23703,
											"end": 23741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23703,
											"end": 23741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23755,
											"end": 23775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23789,
											"end": 23795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 23778,
											"end": 23796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23755,
											"end": 23796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23755,
											"end": 23796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23810,
											"end": 23821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23936,
											"end": 23942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23932,
											"end": 23934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23928,
											"end": 23943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23920,
											"end": 23926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23916,
											"end": 23944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23971,
											"end": 24253,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 23971,
											"end": 24253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23978,
											"end": 23982,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23971,
											"end": 24253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23971,
											"end": 24253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 23971,
											"end": 24253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24002,
											"end": 24007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24002,
											"end": 24007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24002,
											"end": 24007,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24002,
											"end": 24007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24002,
											"end": 24007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24002,
											"end": 24007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24002,
											"end": 24007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24002,
											"end": 24007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24141,
											"end": 24151,
											"name": "PUSH",
											"source": 0,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 24136,
											"end": 24138,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 24129,
											"end": 24134,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24125,
											"end": 24139,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 24120,
											"end": 24152,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 24115,
											"end": 24118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24107,
											"end": 24153,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 24197,
											"end": 24199,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 24188,
											"end": 24199,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24188,
											"end": 24199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24188,
											"end": 24199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 24188,
											"end": 24199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24188,
											"end": 24199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 24188,
											"end": 24199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 24188,
											"end": 24199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24188,
											"end": 24199,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 24188,
											"end": 24199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24188,
											"end": 24199,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 24188,
											"end": 24199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24188,
											"end": 24199,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24188,
											"end": 24199,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24188,
											"end": 24199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24230,
											"end": 24231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24221,
											"end": 24226,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24221,
											"end": 24231,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23971,
											"end": 24253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 24217,
											"end": 24238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23971,
											"end": 24253,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 23971,
											"end": 24253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24273,
											"end": 24279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24279,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24266,
											"end": 24279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23598,
											"end": 24296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23598,
											"end": 24296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23598,
											"end": 24296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23598,
											"end": 24296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49327,
											"end": 49654,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 49327,
											"end": 49654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49408,
											"end": 49409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49394,
											"end": 49410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49394,
											"end": 49410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49394,
											"end": 49396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49394,
											"end": 49410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49394,
											"end": 49410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49394,
											"end": 49410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49390,
											"end": 49477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 49390,
											"end": 49477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49463,
											"end": 49464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 49433,
											"end": 49466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49433,
											"end": 49466,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49390,
											"end": 49477,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 49390,
											"end": 49477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49486,
											"end": 49507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49510,
											"end": 49542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 49518,
											"end": 49520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49522,
											"end": 49529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49539,
											"end": 49540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49510,
											"end": 49517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 49510,
											"end": 49542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49510,
											"end": 49542,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 49510,
											"end": 49542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49486,
											"end": 49542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49486,
											"end": 49542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49581,
											"end": 49582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49556,
											"end": 49583,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49556,
											"end": 49583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49556,
											"end": 49569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49556,
											"end": 49583,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49556,
											"end": 49583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49556,
											"end": 49583,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49552,
											"end": 49648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 49552,
											"end": 49648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49634,
											"end": 49635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "PUSH",
											"source": 0,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 49606,
											"end": 49637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49606,
											"end": 49637,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49552,
											"end": 49648,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 49552,
											"end": 49648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49380,
											"end": 49654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49327,
											"end": 49654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49327,
											"end": 49654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49327,
											"end": 49654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20116,
											"end": 21032,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 20116,
											"end": 21032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20169,
											"end": 20176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20188,
											"end": 20202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20205,
											"end": 20206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20188,
											"end": 20206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20253,
											"end": 20261,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 20244,
											"end": 20249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20244,
											"end": 20261,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 20240,
											"end": 20343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20290,
											"end": 20298,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 20281,
											"end": 20298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20281,
											"end": 20298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20281,
											"end": 20298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 20281,
											"end": 20298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20281,
											"end": 20298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 20281,
											"end": 20298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 20281,
											"end": 20298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20281,
											"end": 20298,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 20281,
											"end": 20298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20281,
											"end": 20298,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 20281,
											"end": 20298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20281,
											"end": 20298,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20281,
											"end": 20298,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20281,
											"end": 20298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20326,
											"end": 20328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20316,
											"end": 20328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20316,
											"end": 20328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20316,
											"end": 20328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20316,
											"end": 20328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20343,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 20240,
											"end": 20343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20377,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 20360,
											"end": 20365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20360,
											"end": 20377,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20356,
											"end": 20459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 20356,
											"end": 20459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20406,
											"end": 20414,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 20397,
											"end": 20414,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 20397,
											"end": 20414,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 20397,
											"end": 20414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 20397,
											"end": 20414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20414,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 20397,
											"end": 20414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20414,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 20397,
											"end": 20414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20414,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20414,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20442,
											"end": 20444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20432,
											"end": 20444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20432,
											"end": 20444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20432,
											"end": 20444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20432,
											"end": 20444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20356,
											"end": 20459,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 20356,
											"end": 20459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20485,
											"end": 20493,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 20476,
											"end": 20481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20493,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20472,
											"end": 20575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 20472,
											"end": 20575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20522,
											"end": 20530,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 20513,
											"end": 20530,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20513,
											"end": 20530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20513,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 20513,
											"end": 20530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20513,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 20513,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 20513,
											"end": 20530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20513,
											"end": 20530,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 20513,
											"end": 20530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20513,
											"end": 20530,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 20513,
											"end": 20530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20513,
											"end": 20530,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20513,
											"end": 20530,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20513,
											"end": 20530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20558,
											"end": 20560,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 20548,
											"end": 20560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20548,
											"end": 20560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20548,
											"end": 20560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20548,
											"end": 20560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20472,
											"end": 20575,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 20472,
											"end": 20575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20601,
											"end": 20608,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 20592,
											"end": 20597,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20592,
											"end": 20608,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 20588,
											"end": 20688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20637,
											"end": 20644,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 20628,
											"end": 20644,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20628,
											"end": 20644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20628,
											"end": 20644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 20628,
											"end": 20644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20628,
											"end": 20644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 20628,
											"end": 20644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 20628,
											"end": 20644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20628,
											"end": 20644,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 20628,
											"end": 20644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20628,
											"end": 20644,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 20628,
											"end": 20644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20628,
											"end": 20644,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20628,
											"end": 20644,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20628,
											"end": 20644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20672,
											"end": 20673,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 20662,
											"end": 20673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20688,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 20588,
											"end": 20688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20714,
											"end": 20721,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 20705,
											"end": 20710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20705,
											"end": 20721,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 20701,
											"end": 20801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20750,
											"end": 20757,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 20741,
											"end": 20757,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20741,
											"end": 20757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20741,
											"end": 20757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 20741,
											"end": 20757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20741,
											"end": 20757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 20741,
											"end": 20757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 20741,
											"end": 20757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20741,
											"end": 20757,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 20741,
											"end": 20757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20741,
											"end": 20757,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 20741,
											"end": 20757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20741,
											"end": 20757,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20741,
											"end": 20757,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20741,
											"end": 20757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20785,
											"end": 20786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20775,
											"end": 20786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20775,
											"end": 20786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20801,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 20701,
											"end": 20801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20827,
											"end": 20834,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 20818,
											"end": 20823,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20818,
											"end": 20834,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20814,
											"end": 20914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 20814,
											"end": 20914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 20870,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 20854,
											"end": 20870,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20854,
											"end": 20870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20854,
											"end": 20870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 20854,
											"end": 20870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20854,
											"end": 20870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 20854,
											"end": 20870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 20854,
											"end": 20870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20854,
											"end": 20870,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 20854,
											"end": 20870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20854,
											"end": 20870,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 20854,
											"end": 20870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20854,
											"end": 20870,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20854,
											"end": 20870,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20854,
											"end": 20870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20898,
											"end": 20899,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20888,
											"end": 20899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20888,
											"end": 20899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20814,
											"end": 20914,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 20814,
											"end": 20914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20940,
											"end": 20947,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 20931,
											"end": 20936,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20931,
											"end": 20947,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20927,
											"end": 20993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 20927,
											"end": 20993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 20978,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20967,
											"end": 20978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20927,
											"end": 20993,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 20927,
											"end": 20993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21019,
											"end": 21025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21012,
											"end": 21025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20116,
											"end": 21032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20116,
											"end": 21032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20116,
											"end": 21032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20116,
											"end": 21032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10053,
											"end": 10057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10143,
											"end": 10161,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10135,
											"end": 10141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10162,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 10165,
											"end": 10183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 10225,
											"end": 10231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 10203,
											"end": 10232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10195,
											"end": 10232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10195,
											"end": 10232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10287,
											"end": 10291,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10281,
											"end": 10285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10277,
											"end": 10292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 10466,
											"end": 10472,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 10424,
											"end": 10473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 10408,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10497,
											"end": 10503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10490,
											"end": 10495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10483,
											"end": 10504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10528,
											"end": 10533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10573,
											"end": 10576,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10564,
											"end": 10570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10559,
											"end": 10562,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10555,
											"end": 10571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10577,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 10580,
											"end": 10659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 10717,
											"end": 10723,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10712,
											"end": 10715,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10710,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 10670,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10389,
											"end": 10730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 10730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10852,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10840,
											"end": 10846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10859,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 10863,
											"end": 10942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10980,
											"end": 10986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10967,
											"end": 10987,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 11080,
											"end": 11083,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11065,
											"end": 11069,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11057,
											"end": 11063,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11053,
											"end": 11070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 11005,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10996,
											"end": 11084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10996,
											"end": 11084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10812,
											"end": 11090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 11090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11174,
											"end": 11180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11182,
											"end": 11188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11231,
											"end": 11233,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11219,
											"end": 11228,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11210,
											"end": 11217,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11206,
											"end": 11229,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11202,
											"end": 11234,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 11237,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 11237,
											"end": 11316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11316,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 11237,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 11199,
											"end": 11318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11357,
											"end": 11358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 11427,
											"end": 11434,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11418,
											"end": 11424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11416,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11403,
											"end": 11425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 11382,
											"end": 11435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 11382,
											"end": 11435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11372,
											"end": 11435,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11372,
											"end": 11435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11328,
											"end": 11445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11514,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11501,
											"end": 11510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11497,
											"end": 11515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11484,
											"end": 11516,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11535,
											"end": 11541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11532,
											"end": 11562,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 11565,
											"end": 11644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 11565,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 11529,
											"end": 11646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 11725,
											"end": 11732,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11714,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11701,
											"end": 11723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 11670,
											"end": 11733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11733,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 11670,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11660,
											"end": 11733,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11660,
											"end": 11733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11455,
											"end": 11743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11824,
											"end": 11830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11832,
											"end": 11838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11881,
											"end": 11883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11869,
											"end": 11878,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11860,
											"end": 11867,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11856,
											"end": 11879,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11852,
											"end": 11884,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 11887,
											"end": 11966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 11887,
											"end": 11966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 11849,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12007,
											"end": 12008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 12077,
											"end": 12084,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12068,
											"end": 12074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12057,
											"end": 12066,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12053,
											"end": 12075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 12032,
											"end": 12085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 12032,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12022,
											"end": 12085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12022,
											"end": 12085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11978,
											"end": 12095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12134,
											"end": 12136,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 12205,
											"end": 12212,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12196,
											"end": 12202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12185,
											"end": 12194,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12181,
											"end": 12203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 12160,
											"end": 12213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 12160,
											"end": 12213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12150,
											"end": 12213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12150,
											"end": 12213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12105,
											"end": 12223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11756,
											"end": 12230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11756,
											"end": 12230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12236,
											"end": 12416,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 12236,
											"end": 12416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12361,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12281,
											"end": 12282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12274,
											"end": 12362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12381,
											"end": 12385,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 12378,
											"end": 12379,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12371,
											"end": 12386,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12405,
											"end": 12409,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12402,
											"end": 12403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12395,
											"end": 12410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12466,
											"end": 12472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12503,
											"end": 12504,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12497,
											"end": 12501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12493,
											"end": 12505,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12550,
											"end": 12551,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12544,
											"end": 12548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12540,
											"end": 12552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12571,
											"end": 12589,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12627,
											"end": 12631,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 12619,
											"end": 12625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12615,
											"end": 12632,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12605,
											"end": 12632,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12605,
											"end": 12632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 12561,
											"end": 12642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12689,
											"end": 12691,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12681,
											"end": 12687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12678,
											"end": 12692,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12658,
											"end": 12676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12655,
											"end": 12693,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 12708,
											"end": 12726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 12708,
											"end": 12726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 12652,
											"end": 12736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12473,
											"end": 12742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12422,
											"end": 12742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12422,
											"end": 12742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12897,
											"end": 12901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12935,
											"end": 12937,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12924,
											"end": 12933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12920,
											"end": 12938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12912,
											"end": 12938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12948,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 13016,
											"end": 13017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13014,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13001,
											"end": 13018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12992,
											"end": 12998,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12948,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 12948,
											"end": 13019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12948,
											"end": 13019,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 12948,
											"end": 13019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13029,
											"end": 13101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 13097,
											"end": 13099,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13086,
											"end": 13095,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13082,
											"end": 13100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13073,
											"end": 13079,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13029,
											"end": 13101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 13029,
											"end": 13101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13029,
											"end": 13101,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 13029,
											"end": 13101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13111,
											"end": 13183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 13179,
											"end": 13181,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13168,
											"end": 13177,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13164,
											"end": 13182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13155,
											"end": 13161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13111,
											"end": 13183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 13111,
											"end": 13183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13111,
											"end": 13183,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 13111,
											"end": 13183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12748,
											"end": 13190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12748,
											"end": 13190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13196,
											"end": 13376,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 13196,
											"end": 13376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13244,
											"end": 13321,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13241,
											"end": 13242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13234,
											"end": 13322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13341,
											"end": 13345,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 13338,
											"end": 13339,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13331,
											"end": 13346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13365,
											"end": 13369,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13362,
											"end": 13363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 13370,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13382,
											"end": 13615,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 13382,
											"end": 13615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13421,
											"end": 13424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13444,
											"end": 13468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 13462,
											"end": 13467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 13444,
											"end": 13468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13468,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 13444,
											"end": 13468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13435,
											"end": 13468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13435,
											"end": 13468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13490,
											"end": 13556,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13483,
											"end": 13488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 13557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13477,
											"end": 13580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 13477,
											"end": 13580,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13560,
											"end": 13578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 13560,
											"end": 13578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 13560,
											"end": 13578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13560,
											"end": 13578,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 13560,
											"end": 13578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13477,
											"end": 13580,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 13477,
											"end": 13580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13607,
											"end": 13608,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13600,
											"end": 13605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13596,
											"end": 13609,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13589,
											"end": 13609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13589,
											"end": 13609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13382,
											"end": 13615,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13382,
											"end": 13615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13382,
											"end": 13615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13382,
											"end": 13615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13621,
											"end": 13719,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 13621,
											"end": 13719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13672,
											"end": 13678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13706,
											"end": 13711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13700,
											"end": 13712,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13690,
											"end": 13712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13690,
											"end": 13712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13621,
											"end": 13719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13621,
											"end": 13719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13621,
											"end": 13719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13621,
											"end": 13719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13725,
											"end": 13893,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 13725,
											"end": 13893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13808,
											"end": 13819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13842,
											"end": 13848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13837,
											"end": 13840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13830,
											"end": 13849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13882,
											"end": 13886,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13877,
											"end": 13880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13858,
											"end": 13887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13858,
											"end": 13887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13725,
											"end": 13893,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13725,
											"end": 13893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13725,
											"end": 13893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13725,
											"end": 13893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13725,
											"end": 13893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13899,
											"end": 14272,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 13899,
											"end": 14272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13985,
											"end": 13988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14013,
											"end": 14051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 14045,
											"end": 14050,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14013,
											"end": 14051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 14013,
											"end": 14051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14013,
											"end": 14051,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 14013,
											"end": 14051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14067,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 14130,
											"end": 14136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14128,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14067,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 14067,
											"end": 14137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14067,
											"end": 14137,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 14067,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14060,
											"end": 14137,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14060,
											"end": 14137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14146,
											"end": 14211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 14204,
											"end": 14210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14199,
											"end": 14202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14192,
											"end": 14196,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14185,
											"end": 14190,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14181,
											"end": 14197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14146,
											"end": 14211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 14146,
											"end": 14211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14146,
											"end": 14211,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 14146,
											"end": 14211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14236,
											"end": 14265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 14258,
											"end": 14264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14236,
											"end": 14265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 14236,
											"end": 14265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14236,
											"end": 14265,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 14236,
											"end": 14265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14231,
											"end": 14234,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14227,
											"end": 14266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14220,
											"end": 14266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14220,
											"end": 14266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13989,
											"end": 14272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13899,
											"end": 14272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13899,
											"end": 14272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13899,
											"end": 14272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13899,
											"end": 14272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13899,
											"end": 14272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14918,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 14278,
											"end": 14918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14473,
											"end": 14477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14511,
											"end": 14514,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14500,
											"end": 14509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14496,
											"end": 14515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14488,
											"end": 14515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14488,
											"end": 14515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14525,
											"end": 14596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 14593,
											"end": 14594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14582,
											"end": 14591,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14578,
											"end": 14595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14569,
											"end": 14575,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14525,
											"end": 14596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 14525,
											"end": 14596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14525,
											"end": 14596,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 14525,
											"end": 14596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14606,
											"end": 14678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 14674,
											"end": 14676,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14663,
											"end": 14672,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14650,
											"end": 14656,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14606,
											"end": 14678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 14606,
											"end": 14678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14606,
											"end": 14678,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 14606,
											"end": 14678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14688,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 14756,
											"end": 14758,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14745,
											"end": 14754,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14741,
											"end": 14759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14732,
											"end": 14738,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14688,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 14688,
											"end": 14760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14688,
											"end": 14760,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 14688,
											"end": 14760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14807,
											"end": 14816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14801,
											"end": 14805,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14797,
											"end": 14817,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14792,
											"end": 14794,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14781,
											"end": 14790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14777,
											"end": 14795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14770,
											"end": 14818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14835,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 14906,
											"end": 14910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14897,
											"end": 14903,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14835,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 14835,
											"end": 14911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14835,
											"end": 14911,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 14835,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14827,
											"end": 14911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14827,
											"end": 14911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14918,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14918,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14924,
											"end": 15065,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 14924,
											"end": 15065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14980,
											"end": 14985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15011,
											"end": 15017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15005,
											"end": 15018,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14996,
											"end": 15018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14996,
											"end": 15018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15027,
											"end": 15059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 15053,
											"end": 15058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15027,
											"end": 15059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 15027,
											"end": 15059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15027,
											"end": 15059,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 15027,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14924,
											"end": 15065,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14924,
											"end": 15065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14924,
											"end": 15065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14924,
											"end": 15065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14924,
											"end": 15065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15420,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 15071,
											"end": 15420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15140,
											"end": 15146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15189,
											"end": 15191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15177,
											"end": 15186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15168,
											"end": 15175,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15164,
											"end": 15187,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15160,
											"end": 15192,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15276,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 15157,
											"end": 15276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15195,
											"end": 15274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 15195,
											"end": 15274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 15195,
											"end": 15274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15195,
											"end": 15274,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 15195,
											"end": 15274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15276,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 15157,
											"end": 15276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15315,
											"end": 15316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15340,
											"end": 15403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 15395,
											"end": 15402,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15386,
											"end": 15392,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15375,
											"end": 15384,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15371,
											"end": 15393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15340,
											"end": 15403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 15340,
											"end": 15403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15340,
											"end": 15403,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 15340,
											"end": 15403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15330,
											"end": 15403,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15330,
											"end": 15403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15286,
											"end": 15413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15420,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15426,
											"end": 15574,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 15426,
											"end": 15574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15528,
											"end": 15539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15565,
											"end": 15568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15550,
											"end": 15568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15550,
											"end": 15568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15426,
											"end": 15574,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15426,
											"end": 15574,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15426,
											"end": 15574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15426,
											"end": 15574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15426,
											"end": 15574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15580,
											"end": 15970,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 15580,
											"end": 15970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15686,
											"end": 15689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15714,
											"end": 15753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 15747,
											"end": 15752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15714,
											"end": 15753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 15714,
											"end": 15753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15714,
											"end": 15753,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 15714,
											"end": 15753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15769,
											"end": 15858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 15851,
											"end": 15857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15846,
											"end": 15849,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15769,
											"end": 15858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 15769,
											"end": 15858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15769,
											"end": 15858,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 15769,
											"end": 15858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15762,
											"end": 15858,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15762,
											"end": 15858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 15925,
											"end": 15931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15920,
											"end": 15923,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15913,
											"end": 15917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15906,
											"end": 15911,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15902,
											"end": 15918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 15867,
											"end": 15932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 15932,
											"name": "tag",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 15867,
											"end": 15932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15957,
											"end": 15963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15952,
											"end": 15955,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15948,
											"end": 15964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15964,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15690,
											"end": 15970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15580,
											"end": 15970,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15580,
											"end": 15970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15580,
											"end": 15970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15580,
											"end": 15970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15580,
											"end": 15970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 16411,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 15976,
											"end": 16411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16156,
											"end": 16159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16178,
											"end": 16273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 16269,
											"end": 16272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16260,
											"end": 16266,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16178,
											"end": 16273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 16178,
											"end": 16273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16178,
											"end": 16273,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 16178,
											"end": 16273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16171,
											"end": 16273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16171,
											"end": 16273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16290,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 16381,
											"end": 16384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16372,
											"end": 16378,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16290,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 16290,
											"end": 16385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16290,
											"end": 16385,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 16290,
											"end": 16385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16283,
											"end": 16385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16283,
											"end": 16385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16402,
											"end": 16405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16395,
											"end": 16405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16395,
											"end": 16405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 16411,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 16411,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 16411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 16411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 16411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 16411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16417,
											"end": 16558,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 16417,
											"end": 16558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16466,
											"end": 16470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16489,
											"end": 16492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16481,
											"end": 16492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16481,
											"end": 16492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16512,
											"end": 16515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16509,
											"end": 16510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16502,
											"end": 16516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16546,
											"end": 16550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16543,
											"end": 16544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16533,
											"end": 16551,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16525,
											"end": 16551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16525,
											"end": 16551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16417,
											"end": 16558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16417,
											"end": 16558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16417,
											"end": 16558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16417,
											"end": 16558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16564,
											"end": 16657,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 16564,
											"end": 16657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16601,
											"end": 16607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16648,
											"end": 16650,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16643,
											"end": 16645,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 16636,
											"end": 16641,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16632,
											"end": 16646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16628,
											"end": 16651,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 16618,
											"end": 16651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16618,
											"end": 16651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16564,
											"end": 16657,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16564,
											"end": 16657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16564,
											"end": 16657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16564,
											"end": 16657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16663,
											"end": 16770,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 16663,
											"end": 16770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16707,
											"end": 16715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16757,
											"end": 16762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16751,
											"end": 16755,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16747,
											"end": 16763,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16726,
											"end": 16763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16726,
											"end": 16763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16663,
											"end": 16770,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16663,
											"end": 16770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16663,
											"end": 16770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16663,
											"end": 16770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16663,
											"end": 16770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16776,
											"end": 17169,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 16776,
											"end": 17169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16845,
											"end": 16851,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16895,
											"end": 16896,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 16883,
											"end": 16893,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16879,
											"end": 16897,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 16948,
											"end": 17014,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16937,
											"end": 16946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 16918,
											"end": 17015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17015,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 16918,
											"end": 17015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17036,
											"end": 17075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 17066,
											"end": 17074,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17055,
											"end": 17064,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17036,
											"end": 17075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 17036,
											"end": 17075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17036,
											"end": 17075,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 17036,
											"end": 17075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17024,
											"end": 17075,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 17024,
											"end": 17075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17108,
											"end": 17112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17104,
											"end": 17113,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17097,
											"end": 17102,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17093,
											"end": 17114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17084,
											"end": 17114,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17084,
											"end": 17114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17157,
											"end": 17161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17147,
											"end": 17155,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17143,
											"end": 17162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17136,
											"end": 17141,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17133,
											"end": 17163,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 17123,
											"end": 17163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17123,
											"end": 17163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16852,
											"end": 17169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16852,
											"end": 17169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16776,
											"end": 17169,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16776,
											"end": 17169,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16776,
											"end": 17169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16776,
											"end": 17169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16776,
											"end": 17169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16776,
											"end": 17169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17235,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 17175,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17203,
											"end": 17206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17224,
											"end": 17229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17217,
											"end": 17229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17217,
											"end": 17229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17241,
											"end": 17383,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 17241,
											"end": 17383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17291,
											"end": 17300,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17324,
											"end": 17377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 17342,
											"end": 17376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 17351,
											"end": 17375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 17369,
											"end": 17374,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 17351,
											"end": 17375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17375,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 17351,
											"end": 17375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17342,
											"end": 17376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 17342,
											"end": 17376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17342,
											"end": 17376,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 17342,
											"end": 17376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17324,
											"end": 17377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 17324,
											"end": 17377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17324,
											"end": 17377,
											"name": "tag",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 17324,
											"end": 17377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17311,
											"end": 17377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17311,
											"end": 17377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17241,
											"end": 17383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17241,
											"end": 17383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17241,
											"end": 17383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17241,
											"end": 17383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17389,
											"end": 17464,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 17389,
											"end": 17464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17432,
											"end": 17435,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17453,
											"end": 17458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17446,
											"end": 17458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17446,
											"end": 17458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17389,
											"end": 17464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17389,
											"end": 17464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17389,
											"end": 17464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17389,
											"end": 17464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17470,
											"end": 17739,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 17470,
											"end": 17739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17580,
											"end": 17619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 17611,
											"end": 17618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17580,
											"end": 17619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 17580,
											"end": 17619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17580,
											"end": 17619,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 17580,
											"end": 17619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17641,
											"end": 17732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 17690,
											"end": 17731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 17714,
											"end": 17730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17690,
											"end": 17731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 17690,
											"end": 17731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17690,
											"end": 17731,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 17690,
											"end": 17731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17682,
											"end": 17688,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17675,
											"end": 17679,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17669,
											"end": 17680,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17641,
											"end": 17732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 17641,
											"end": 17732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17641,
											"end": 17732,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 17641,
											"end": 17732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17628,
											"end": 17733,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 17546,
											"end": 17739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17470,
											"end": 17739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17470,
											"end": 17739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17470,
											"end": 17739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17470,
											"end": 17739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17745,
											"end": 17818,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 17745,
											"end": 17818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17790,
											"end": 17793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17745,
											"end": 17818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17745,
											"end": 17818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17824,
											"end": 18013,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 17824,
											"end": 18013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17901,
											"end": 17933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 17901,
											"end": 17933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 17901,
											"end": 17933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17901,
											"end": 17933,
											"name": "tag",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 17901,
											"end": 17933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17942,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 18000,
											"end": 18006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17992,
											"end": 17998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17986,
											"end": 17990,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17942,
											"end": 18007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 17942,
											"end": 18007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17942,
											"end": 18007,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 17942,
											"end": 18007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17877,
											"end": 18013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17824,
											"end": 18013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17824,
											"end": 18013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17824,
											"end": 18013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18019,
											"end": 18205,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 18019,
											"end": 18205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18079,
											"end": 18199,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 18079,
											"end": 18199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18096,
											"end": 18099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18089,
											"end": 18094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18086,
											"end": 18100,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18079,
											"end": 18199,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18079,
											"end": 18199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 18079,
											"end": 18199,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18150,
											"end": 18189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 18187,
											"end": 18188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18180,
											"end": 18185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18150,
											"end": 18189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 18150,
											"end": 18189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18150,
											"end": 18189,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 18150,
											"end": 18189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18123,
											"end": 18124,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18116,
											"end": 18121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18112,
											"end": 18125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18103,
											"end": 18125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18103,
											"end": 18125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18079,
											"end": 18199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 18079,
											"end": 18199,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18079,
											"end": 18199,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 18079,
											"end": 18199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18019,
											"end": 18205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18019,
											"end": 18205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18019,
											"end": 18205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18211,
											"end": 18754,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 18211,
											"end": 18754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18312,
											"end": 18314,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 18307,
											"end": 18310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18304,
											"end": 18315,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18301,
											"end": 18747,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18301,
											"end": 18747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 18301,
											"end": 18747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18346,
											"end": 18384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 18378,
											"end": 18383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18346,
											"end": 18384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 18346,
											"end": 18384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18346,
											"end": 18384,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 18346,
											"end": 18384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18430,
											"end": 18459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 18448,
											"end": 18458,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18430,
											"end": 18459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 18430,
											"end": 18459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18430,
											"end": 18459,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 18430,
											"end": 18459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18420,
											"end": 18428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18416,
											"end": 18460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18613,
											"end": 18615,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18601,
											"end": 18611,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18598,
											"end": 18616,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18595,
											"end": 18644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18595,
											"end": 18644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 18595,
											"end": 18644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18634,
											"end": 18642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18619,
											"end": 18642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18619,
											"end": 18642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18595,
											"end": 18644,
											"name": "tag",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 18595,
											"end": 18644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18657,
											"end": 18737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 18713,
											"end": 18735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 18731,
											"end": 18734,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18713,
											"end": 18735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 18713,
											"end": 18735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18713,
											"end": 18735,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 18713,
											"end": 18735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18703,
											"end": 18711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18699,
											"end": 18736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18686,
											"end": 18697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18657,
											"end": 18737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 18657,
											"end": 18737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18657,
											"end": 18737,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 18657,
											"end": 18737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18316,
											"end": 18747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18316,
											"end": 18747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18301,
											"end": 18747,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 18301,
											"end": 18747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18211,
											"end": 18754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18211,
											"end": 18754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18211,
											"end": 18754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18211,
											"end": 18754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18760,
											"end": 18877,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 18760,
											"end": 18877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18814,
											"end": 18822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18864,
											"end": 18869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18858,
											"end": 18862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18854,
											"end": 18870,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 18833,
											"end": 18870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18833,
											"end": 18870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18760,
											"end": 18877,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18760,
											"end": 18877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18760,
											"end": 18877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18760,
											"end": 18877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18760,
											"end": 18877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18883,
											"end": 19052,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 18883,
											"end": 19052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18927,
											"end": 18933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18960,
											"end": 19011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 19008,
											"end": 19009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19004,
											"end": 19010,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 18996,
											"end": 19001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18993,
											"end": 18994,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 18989,
											"end": 19002,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18960,
											"end": 19011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 18960,
											"end": 19011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18960,
											"end": 19011,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 18960,
											"end": 19011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18956,
											"end": 19012,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 19041,
											"end": 19045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19035,
											"end": 19039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19031,
											"end": 19046,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19021,
											"end": 19046,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19021,
											"end": 19046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18934,
											"end": 19052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18883,
											"end": 19052,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18883,
											"end": 19052,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18883,
											"end": 19052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18883,
											"end": 19052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18883,
											"end": 19052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19057,
											"end": 19352,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 19057,
											"end": 19352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19133,
											"end": 19137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19279,
											"end": 19308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 19304,
											"end": 19307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19298,
											"end": 19302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19279,
											"end": 19308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 19279,
											"end": 19308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19279,
											"end": 19308,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 19279,
											"end": 19308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19271,
											"end": 19308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19271,
											"end": 19308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19341,
											"end": 19344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19338,
											"end": 19339,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 19334,
											"end": 19345,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 19328,
											"end": 19332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19325,
											"end": 19346,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 19317,
											"end": 19346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19317,
											"end": 19346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19057,
											"end": 19352,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19057,
											"end": 19352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19057,
											"end": 19352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19057,
											"end": 19352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19057,
											"end": 19352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19357,
											"end": 20752,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 19357,
											"end": 20752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19474,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 19507,
											"end": 19510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19474,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 19474,
											"end": 19511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19474,
											"end": 19511,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 19474,
											"end": 19511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19576,
											"end": 19594,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19568,
											"end": 19574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19565,
											"end": 19595,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19562,
											"end": 19618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19562,
											"end": 19618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 19562,
											"end": 19618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19598,
											"end": 19616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 19598,
											"end": 19616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 19598,
											"end": 19616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19598,
											"end": 19616,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 19598,
											"end": 19616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19562,
											"end": 19618,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 19562,
											"end": 19618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19642,
											"end": 19680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 19674,
											"end": 19678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19668,
											"end": 19679,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19642,
											"end": 19680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 19642,
											"end": 19680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19642,
											"end": 19680,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 19642,
											"end": 19680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19727,
											"end": 19794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 19787,
											"end": 19793,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19779,
											"end": 19785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19773,
											"end": 19777,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19727,
											"end": 19794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 19727,
											"end": 19794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19727,
											"end": 19794,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 19727,
											"end": 19794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19821,
											"end": 19822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19845,
											"end": 19849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19832,
											"end": 19849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19832,
											"end": 19849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19877,
											"end": 19879,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 19869,
											"end": 19875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19866,
											"end": 19880,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19894,
											"end": 19895,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19889,
											"end": 20507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19889,
											"end": 20507,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19889,
											"end": 20507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 19889,
											"end": 20507,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20551,
											"end": 20552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20568,
											"end": 20574,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20565,
											"end": 20642,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20565,
											"end": 20642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 20565,
											"end": 20642,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20617,
											"end": 20626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20612,
											"end": 20615,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 20608,
											"end": 20627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20602,
											"end": 20628,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20593,
											"end": 20628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20593,
											"end": 20628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20565,
											"end": 20642,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 20565,
											"end": 20642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20668,
											"end": 20735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 20728,
											"end": 20734,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20721,
											"end": 20726,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20668,
											"end": 20735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 20668,
											"end": 20735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20668,
											"end": 20735,
											"name": "tag",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 20668,
											"end": 20735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20662,
											"end": 20666,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20655,
											"end": 20736,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 20524,
											"end": 20746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19859,
											"end": 20746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 19859,
											"end": 20746,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19889,
											"end": 20507,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 19889,
											"end": 20507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19941,
											"end": 19945,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 19937,
											"end": 19946,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 19929,
											"end": 19935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19925,
											"end": 19947,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19975,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 20007,
											"end": 20011,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19975,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 19975,
											"end": 20012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19975,
											"end": 20012,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 19975,
											"end": 20012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20034,
											"end": 20035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20048,
											"end": 20256,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 20048,
											"end": 20256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20062,
											"end": 20069,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20059,
											"end": 20060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20056,
											"end": 20070,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20048,
											"end": 20256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20048,
											"end": 20256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 20048,
											"end": 20256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20141,
											"end": 20150,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20136,
											"end": 20139,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 20132,
											"end": 20151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20126,
											"end": 20152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20118,
											"end": 20124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20111,
											"end": 20153,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 20192,
											"end": 20193,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 20184,
											"end": 20190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20180,
											"end": 20194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20170,
											"end": 20194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20170,
											"end": 20194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20239,
											"end": 20241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20228,
											"end": 20237,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20224,
											"end": 20242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20211,
											"end": 20242,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 20211,
											"end": 20242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20085,
											"end": 20089,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20082,
											"end": 20083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20078,
											"end": 20090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20073,
											"end": 20090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20073,
											"end": 20090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20048,
											"end": 20256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 20048,
											"end": 20256,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20048,
											"end": 20256,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 20048,
											"end": 20256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20284,
											"end": 20290,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20275,
											"end": 20282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20272,
											"end": 20291,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20269,
											"end": 20448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20269,
											"end": 20448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 20269,
											"end": 20448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20342,
											"end": 20351,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20337,
											"end": 20340,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 20333,
											"end": 20352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20327,
											"end": 20353,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20385,
											"end": 20433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 20427,
											"end": 20431,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 20419,
											"end": 20425,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 20415,
											"end": 20432,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20404,
											"end": 20413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20385,
											"end": 20433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 20385,
											"end": 20433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20385,
											"end": 20433,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 20385,
											"end": 20433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20377,
											"end": 20383,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20370,
											"end": 20434,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 20292,
											"end": 20448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20269,
											"end": 20448,
											"name": "tag",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 20269,
											"end": 20448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20494,
											"end": 20495,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 20490,
											"end": 20491,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 20482,
											"end": 20488,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 20478,
											"end": 20492,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 20474,
											"end": 20496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20468,
											"end": 20472,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 20461,
											"end": 20497,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 19896,
											"end": 20507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19896,
											"end": 20507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19896,
											"end": 20507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19859,
											"end": 20746,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 19859,
											"end": 20746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19859,
											"end": 20746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19449,
											"end": 20752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19449,
											"end": 20752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19449,
											"end": 20752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19357,
											"end": 20752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19357,
											"end": 20752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19357,
											"end": 20752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20758,
											"end": 21090,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 20758,
											"end": 21090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20879,
											"end": 20883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20917,
											"end": 20919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20906,
											"end": 20915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20902,
											"end": 20920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20894,
											"end": 20920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20894,
											"end": 20920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20930,
											"end": 21001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 20998,
											"end": 20999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20987,
											"end": 20996,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20983,
											"end": 21000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20974,
											"end": 20980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20930,
											"end": 21001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 20930,
											"end": 21001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20930,
											"end": 21001,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 20930,
											"end": 21001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21011,
											"end": 21083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 21079,
											"end": 21081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21068,
											"end": 21077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21064,
											"end": 21082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21055,
											"end": 21061,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21011,
											"end": 21083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 21011,
											"end": 21083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21011,
											"end": 21083,
											"name": "tag",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 21011,
											"end": 21083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20758,
											"end": 21090,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 20758,
											"end": 21090,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20758,
											"end": 21090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20758,
											"end": 21090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20758,
											"end": 21090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20758,
											"end": 21090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21096,
											"end": 21276,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 21096,
											"end": 21276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21144,
											"end": 21221,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21141,
											"end": 21142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21134,
											"end": 21222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21241,
											"end": 21245,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 21238,
											"end": 21239,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21231,
											"end": 21246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21265,
											"end": 21269,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21262,
											"end": 21263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21255,
											"end": 21270,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contract-dafc3583a0_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeMint(address,string)": "d204c45e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"SmileNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1935,
								"contract": "contract-dafc3583a0_flattened.sol:SmileNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1937,
								"contract": "contract-dafc3583a0_flattened.sol:SmileNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1941,
								"contract": "contract-dafc3583a0_flattened.sol:SmileNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1945,
								"contract": "contract-dafc3583a0_flattened.sol:SmileNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1949,
								"contract": "contract-dafc3583a0_flattened.sol:SmileNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1955,
								"contract": "contract-dafc3583a0_flattened.sol:SmileNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2954,
								"contract": "contract-dafc3583a0_flattened.sol:SmileNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 1570,
								"contract": "contract-dafc3583a0_flattened.sol:SmileNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 3063,
								"contract": "contract-dafc3583a0_flattened.sol:SmileNFT",
								"label": "_nextTokenId",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-dafc3583a0_flattened.sol\":23212:26059  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-dafc3583a0_flattened.sol\":23212:26059  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d198270302a3d72fa3b8b417a462126455150b1b4381c518089aef7aed6e328e64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d198270302a3d72fa3b8b417a462126455150b1b4381c518089aef7aed6e328e64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 SWAP9 0x27 SUB MUL LOG3 0xD7 0x2F LOG3 0xB8 0xB4 OR LOG4 PUSH3 0x126455 ISZERO SIGNEXTEND SHL NUMBER DUP2 0xC5 XOR ADDMOD SWAP11 0xEF PUSH27 0xED6E328E64736F6C63430008140033000000000000000000000000 ",
							"sourceMap": "23212:2847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d198270302a3d72fa3b8b417a462126455150b1b4381c518089aef7aed6e328e64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 SWAP9 0x27 SUB MUL LOG3 0xD7 0x2F LOG3 0xB8 0xB4 OR LOG4 PUSH3 0x126455 ISZERO SIGNEXTEND SHL NUMBER DUP2 0xC5 XOR ADDMOD SWAP11 0xEF PUSH27 0xED6E328E64736F6C63430008140033000000000000000000000000 ",
							"sourceMap": "23212:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23212,
									"end": 26059,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23212,
									"end": 26059,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d198270302a3d72fa3b8b417a462126455150b1b4381c518089aef7aed6e328e64736f6c63430008140033",
									".code": [
										{
											"begin": 23212,
											"end": 26059,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 23212,
											"end": 26059,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 23212,
											"end": 26059,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23212,
											"end": 26059,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23212,
											"end": 26059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23212,
											"end": 26059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23212,
											"end": 26059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23212,
											"end": 26059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23212,
											"end": 26059,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract-dafc3583a0_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-dafc3583a0_flattened.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-dafc3583a0_flattened.sol\":{\"keccak256\":\"0x663cf789649ff86ab44226cca5d8e62e2df5e375088f867c4f771db8e16bce52\",\"urls\":[\"bzz-raw://c86f8ad680b47d4fdaf753b3c5a3458139a1f45017ef2561022518e2eaee0e6a\",\"dweb:/ipfs/QmaxB8vr11kr3UwkkMxQFjpzBRswfHaL2H35g1LMzVB81i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contract-dafc3583a0_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contract-dafc3583a0_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contract-dafc3583a0_flattened.sol": {
				"ast": {
					"absolutePath": "contract-dafc3583a0_flattened.sol",
					"exportedSymbols": {
						"Context": [
							1564
						],
						"ERC165": [
							1759
						],
						"ERC721": [
							2911
						],
						"ERC721Burnable": [
							2935
						],
						"ERC721URIStorage": [
							3052
						],
						"IERC1155Errors": [
							136
						],
						"IERC165": [
							1737
						],
						"IERC20Errors": [
							41
						],
						"IERC4906": [
							1893
						],
						"IERC721": [
							1873
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1918
						],
						"IERC721Receiver": [
							1726
						],
						"Math": [
							1293
						],
						"Ownable": [
							1709
						],
						"SignedMath": [
							240
						],
						"SmileNFT": [
							3134
						],
						"Strings": [
							1543
						]
					},
					"id": 3135,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "152:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "178:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "328:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "347:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "667:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "700:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "692:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "716:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "708:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "733:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "725:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:49:0"
									},
									"src": "661:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "747:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "910:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "937:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "929:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:16:0"
									},
									"src": "904:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "951:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1121:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1150:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1142:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:18:0"
									},
									"src": "1115:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1166:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1522:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1557:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1549:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1574:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1566:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1593:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1585:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:52:0"
									},
									"src": "1516:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1607:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1792:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1821:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1813:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:18:0"
									},
									"src": "1786:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1837:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2043:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2071:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2063:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2062:17:0"
									},
									"src": "2037:43:0"
								}
							],
							"scope": 3135,
							"src": "318:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2084:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2236:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2256:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2486:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2504:15:0"
									},
									"src": "2480:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2526:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2669:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2700:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2692:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2691:17:0"
									},
									"src": "2663:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2715:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3015:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3044:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3036:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3060:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3052:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3077:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3069:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3035:48:0"
									},
									"src": "3009:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3090:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3253:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3281:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3273:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:16:0"
									},
									"src": "3247:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3295:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3465:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3495:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3487:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3486:18:0"
									},
									"src": "3459:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3511:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3769:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3804:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3796:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3796:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3822:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3814:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3795:35:0"
									},
									"src": "3763:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3837:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4022:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4052:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4044:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4044:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4043:18:0"
									},
									"src": "4016:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4068:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4276:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4297:18:0"
									},
									"src": "4270:46:0"
								}
							],
							"scope": 3135,
							"src": "2226:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4320:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4474:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4495:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4867:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4902:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4894:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4918:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4910:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4935:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4927:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4951:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4943:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4893:66:0"
									},
									"src": "4861:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4966:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5129:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5158:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5150:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5149:16:0"
									},
									"src": "5123:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5172:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5342:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5373:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5365:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5364:18:0"
									},
									"src": "5336:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5389:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5656:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5693:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5685:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5685:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5703:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5703:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5684:33:0"
									},
									"src": "5650:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5724:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5909:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5940:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5932:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5931:18:0"
									},
									"src": "5903:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5956:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6164:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6195:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6187:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6186:18:0"
									},
									"src": "6158:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6211:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6502:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6555:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6547:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6527:41:0"
									},
									"src": "6496:73:0"
								}
							],
							"scope": 3135,
							"src": "4464:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						},
						{
							"id": 137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6717:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 138,
								"nodeType": "StructuredDocumentation",
								"src": "6743:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240
							],
							"name": "SignedMath",
							"nameLocation": "6832:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "6984:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "7001:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "7005:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "7001:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 152,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "7013:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7001:13:0",
													"trueExpression": {
														"id": 151,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "7009:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 147,
												"id": 154,
												"nodeType": "Return",
												"src": "6994:20:0"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "6849:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "6929:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6940:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "6933:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 140,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6933:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6950:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "6943:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 142,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6932:20:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "6976:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 145,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6976:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6975:8:0"
									},
									"scope": 240,
									"src": "6920:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "7163:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 166,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "7180:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 167,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "7184:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "7180:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 170,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "7192:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7180:13:0",
													"trueExpression": {
														"id": 169,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "7188:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 165,
												"id": 172,
												"nodeType": "Return",
												"src": "7173:20:0"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "7027:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "7108:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7119:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "7112:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 158,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7112:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "7122:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 160,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7122:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7111:20:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "7155:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 163,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7155:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7154:8:0"
									},
									"scope": 240,
									"src": "7099:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "7405:162:0",
										"statements": [
											{
												"assignments": [
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "7474:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "7467:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 184,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7467:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 198,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 186,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "7479:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 187,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "7483:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7479:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 189,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7478:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 190,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 177,
																				"src": "7490:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 191,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "7494:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "7490:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 193,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7489:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7500:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7489:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 196,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7488:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7478:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7467:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 199,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "7519:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 204,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 185,
																						"src": "7539:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 203,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7531:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 202,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7531:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7531:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7545:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "7531:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7524:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 200,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7524:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7524:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 209,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 177,
																				"src": "7553:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 210,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "7557:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "7553:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 212,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7552:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7524:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 214,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7523:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7519:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 183,
												"id": 216,
												"nodeType": "Return",
												"src": "7512:48:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "7206:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "7346:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7361:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "7354:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 176,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7354:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7371:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "7364:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 178,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7364:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7353:20:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "7397:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 181,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7397:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7396:8:0"
									},
									"scope": 240,
									"src": "7337:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "7711:158:0",
										"statements": [
											{
												"id": 237,
												"nodeType": "UncheckedBlock",
												"src": "7721:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 228,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "7836:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7841:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7836:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "7849:2:0",
																		"subExpression": {
																			"id": 232,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "7850:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "7836:15:0",
																	"trueExpression": {
																		"id": 231,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "7845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7828:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 226,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7828:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7828:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 225,
														"id": 236,
														"nodeType": "Return",
														"src": "7821:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "7573:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "7665:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "7676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7669:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 220,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7669:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7668:10:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7702:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7701:9:0"
									},
									"scope": 240,
									"src": "7656:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3135,
							"src": "6824:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 241,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "8005:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 242,
								"nodeType": "StructuredDocumentation",
								"src": "8031:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293
							],
							"name": "Math",
							"nameLocation": "8113:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "8124:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 245,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "8185:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8205:2:0"
									},
									"src": "8179:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 250,
									"members": [
										{
											"id": 246,
											"name": "Floor",
											"nameLocation": "8238:5:0",
											"nodeType": "EnumValue",
											"src": "8238:5:0"
										},
										{
											"id": 247,
											"name": "Ceil",
											"nameLocation": "8281:4:0",
											"nodeType": "EnumValue",
											"src": "8281:4:0"
										},
										{
											"id": 248,
											"name": "Trunc",
											"nameLocation": "8323:5:0",
											"nodeType": "EnumValue",
											"src": "8323:5:0"
										},
										{
											"id": 249,
											"name": "Expand",
											"nameLocation": "8353:6:0",
											"nodeType": "EnumValue",
											"src": "8353:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "8219:8:0",
									"nodeType": "EnumDefinition",
									"src": "8214:169:0"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "8563:140:0",
										"statements": [
											{
												"id": 280,
												"nodeType": "UncheckedBlock",
												"src": "8573:124:0",
												"statements": [
													{
														"assignments": [
															263
														],
														"declarations": [
															{
																"constant": false,
																"id": 263,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "8605:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 280,
																"src": "8597:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 262,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8597:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 267,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 264,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "8609:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 265,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "8613:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8609:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8597:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 268,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "8632:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 269,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "8636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8632:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 275,
														"nodeType": "IfStatement",
														"src": "8628:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8647:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8654:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 273,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8646:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 261,
															"id": 274,
															"nodeType": "Return",
															"src": "8639:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8678:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 277,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "8684:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 278,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8677:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 261,
														"id": 279,
														"nodeType": "Return",
														"src": "8670:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "8389:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "8496:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8511:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8503:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8522:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8514:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8502:22:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8548:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 257,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8548:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8554:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8547:15:0"
									},
									"scope": 1293,
									"src": "8487:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "8886:113:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "8896:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "8924:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 295,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "8928:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8924:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 301,
														"nodeType": "IfStatement",
														"src": "8920:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8939:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8946:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8938:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 293,
															"id": 300,
															"nodeType": "Return",
															"src": "8931:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8970:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 303,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "8976:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 304,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "8980:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8976:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 306,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8969:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 293,
														"id": 307,
														"nodeType": "Return",
														"src": "8962:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "8709:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "8819:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8834:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8826:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8845:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8837:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8825:22:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8871:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8871:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8877:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8870:15:0"
									},
									"scope": 1293,
									"src": "8810:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "9185:417:0",
										"statements": [
											{
												"id": 350,
												"nodeType": "UncheckedBlock",
												"src": "9195:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 322,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9453:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9458:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9453:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 329,
														"nodeType": "IfStatement",
														"src": "9449:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9469:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9475:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 327,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9468:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 321,
															"id": 328,
															"nodeType": "Return",
															"src": "9461:16:0"
														}
													},
													{
														"assignments": [
															331
														],
														"declarations": [
															{
																"constant": false,
																"id": 331,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "9499:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 350,
																"src": "9491:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 330,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9491:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 335,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9503:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "9507:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9503:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9491:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 336,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "9526:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 337,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "9530:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9526:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 339,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "9535:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9526:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 345,
														"nodeType": "IfStatement",
														"src": "9522:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9546:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9553:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 343,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9545:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 321,
															"id": 344,
															"nodeType": "Return",
															"src": "9538:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9577:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 347,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "9583:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 348,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9576:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 321,
														"id": 349,
														"nodeType": "Return",
														"src": "9569:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "9005:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "9118:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9133:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9125:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9144:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9136:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9124:22:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9170:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9169:15:0"
									},
									"scope": 1293,
									"src": "9109:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "9789:114:0",
										"statements": [
											{
												"id": 378,
												"nodeType": "UncheckedBlock",
												"src": "9799:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "9827:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9832:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9827:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 371,
														"nodeType": "IfStatement",
														"src": "9823:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9843:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9850:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9842:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 363,
															"id": 370,
															"nodeType": "Return",
															"src": "9835:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9874:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 373,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 355,
																		"src": "9880:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 374,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "9884:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9880:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 376,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9873:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 363,
														"id": 377,
														"nodeType": "Return",
														"src": "9866:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "9608:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "9722:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9737:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9729:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9748:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9740:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9728:22:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9774:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9774:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9780:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9773:15:0"
									},
									"scope": 1293,
									"src": "9713:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "10100:114:0",
										"statements": [
											{
												"id": 406,
												"nodeType": "UncheckedBlock",
												"src": "10110:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 392,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "10138:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10143:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10138:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 399,
														"nodeType": "IfStatement",
														"src": "10134:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10154:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10161:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 397,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10153:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 391,
															"id": 398,
															"nodeType": "Return",
															"src": "10146:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10185:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 401,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "10191:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 402,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "10195:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10191:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 404,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10184:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 391,
														"id": 405,
														"nodeType": "Return",
														"src": "10177:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "9909:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "10033:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10048:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10040:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10059:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10051:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10039:22:0"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10085:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10085:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10091:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10084:15:0"
									},
									"scope": 1293,
									"src": "10024:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "10351:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 418,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "10368:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 419,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "10372:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10368:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 422,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "10380:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10368:13:0",
													"trueExpression": {
														"id": 421,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "10376:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 417,
												"id": 424,
												"nodeType": "Return",
												"src": "10361:20:0"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "10220:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "10293:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10305:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "10297:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10316:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "10308:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10296:22:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "10342:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10341:9:0"
									},
									"scope": 1293,
									"src": "10284:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "10526:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 436,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "10543:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 437,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "10547:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10543:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 440,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "10555:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10543:13:0",
													"trueExpression": {
														"id": 439,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "10551:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 435,
												"id": 442,
												"nodeType": "Return",
												"src": "10536:20:0"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "10394:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "10468:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10480:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10472:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10491:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10483:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10471:22:0"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10517:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10516:9:0"
									},
									"scope": 1293,
									"src": "10459:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "10747:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 454,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "10802:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 455,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "10806:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10802:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 457,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 458,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "10812:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 459,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "10816:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10812:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 461,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10811:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10821:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "10811:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10801:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 465,
												"nodeType": "Return",
												"src": "10794:28:0"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "10569:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "10685:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10701:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "10693:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10712:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "10704:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10692:22:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "10738:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10737:9:0"
									},
									"scope": 1293,
									"src": "10676:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "11121:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 477,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "11135:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11140:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11135:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 485,
												"nodeType": "IfStatement",
												"src": "11131:127:0",
												"trueBody": {
													"id": 484,
													"nodeType": "Block",
													"src": "11143:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 480,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "11242:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 481,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "11246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11242:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 476,
															"id": 483,
															"nodeType": "Return",
															"src": "11235:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 486,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "11346:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11351:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11346:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 490,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "11360:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11364:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11360:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 493,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11359:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 494,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "11369:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11359:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11373:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "11359:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11346:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11355:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 499,
												"nodeType": "Return",
												"src": "11339:35:0"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "10835:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "11059:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11075:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "11067:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11086:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "11078:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11066:22:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "11112:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11111:9:0"
									},
									"scope": 1293,
									"src": "11050:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "11803:4018:0",
										"statements": [
											{
												"id": 625,
												"nodeType": "UncheckedBlock",
												"src": "11813:4002:0",
												"statements": [
													{
														"assignments": [
															514
														],
														"declarations": [
															{
																"constant": false,
																"id": 514,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "12142:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "12134:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 513,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12134:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 518,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 515,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "12150:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 516,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "12154:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12150:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12134:21:0"
													},
													{
														"assignments": [
															520
														],
														"declarations": [
															{
																"constant": false,
																"id": 520,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "12222:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "12214:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 519,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12214:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 521,
														"nodeType": "VariableDeclarationStatement",
														"src": "12214:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "12294:122:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12312:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "12329:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12332:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12339:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "12335:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12335:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "12322:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12322:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "12316:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12359:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "12376:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "12380:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "12372:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12372:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "12391:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "12395:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "12388:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12388:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12368:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12368:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "12359:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "12380:5:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "12395:5:0",
																"valueSize": 1
															},
															{
																"declaration": 520,
																"isOffset": false,
																"isSlot": false,
																"src": "12359:5:0",
																"valueSize": 1
															},
															{
																"declaration": 504,
																"isOffset": false,
																"isSlot": false,
																"src": "12329:1:0",
																"valueSize": 1
															},
															{
																"declaration": 506,
																"isOffset": false,
																"isSlot": false,
																"src": "12332:1:0",
																"valueSize": 1
															}
														],
														"id": 522,
														"nodeType": "InlineAssembly",
														"src": "12285:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "12497:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12506:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12497:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 531,
														"nodeType": "IfStatement",
														"src": "12493:368:0",
														"trueBody": {
															"id": 530,
															"nodeType": "Block",
															"src": "12509:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 526,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 514,
																			"src": "12827:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 527,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "12835:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12827:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 512,
																	"id": 529,
																	"nodeType": "Return",
																	"src": "12820:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "12967:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 533,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "12982:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12967:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 539,
														"nodeType": "IfStatement",
														"src": "12963:88:0",
														"trueBody": {
															"id": 538,
															"nodeType": "Block",
															"src": "12989:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 535,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 245,
																			"src": "13014:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13014:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 537,
																	"nodeType": "RevertStatement",
																	"src": "13007:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															541
														],
														"declarations": [
															{
																"constant": false,
																"id": 541,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "13314:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "13306:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 540,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13306:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 542,
														"nodeType": "VariableDeclarationStatement",
														"src": "13306:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "13346:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "13415:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "13435:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13438:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "13441:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "13428:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13428:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "13415:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13535:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "13548:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "13558:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "13569:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "13555:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13555:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13544:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13544:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "13535:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13593:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "13606:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "13613:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13602:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13602:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "13593:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 508,
																"isOffset": false,
																"isSlot": false,
																"src": "13441:11:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "13569:5:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "13593:5:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "13606:5:0",
																"valueSize": 1
															},
															{
																"declaration": 520,
																"isOffset": false,
																"isSlot": false,
																"src": "13535:5:0",
																"valueSize": 1
															},
															{
																"declaration": 520,
																"isOffset": false,
																"isSlot": false,
																"src": "13548:5:0",
																"valueSize": 1
															},
															{
																"declaration": 541,
																"isOffset": false,
																"isSlot": false,
																"src": "13415:9:0",
																"valueSize": 1
															},
															{
																"declaration": 541,
																"isOffset": false,
																"isSlot": false,
																"src": "13558:9:0",
																"valueSize": 1
															},
															{
																"declaration": 541,
																"isOffset": false,
																"isSlot": false,
																"src": "13613:9:0",
																"valueSize": 1
															},
															{
																"declaration": 504,
																"isOffset": false,
																"isSlot": false,
																"src": "13435:1:0",
																"valueSize": 1
															},
															{
																"declaration": 506,
																"isOffset": false,
																"isSlot": false,
																"src": "13438:1:0",
																"valueSize": 1
															}
														],
														"id": 543,
														"nodeType": "InlineAssembly",
														"src": "13337:300:0"
													},
													{
														"assignments": [
															545
														],
														"declarations": [
															{
																"constant": false,
																"id": 545,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "13849:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "13841:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 544,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13841:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 552,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "13856:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13871:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 548,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "13875:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13871:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 550,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13870:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13856:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13841:46:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "13910:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "13975:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "13994:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "14007:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "13990:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13990:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "13975:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14079:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "14092:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "14099:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "14088:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14088:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "14079:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14219:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14239:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "14242:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "14235:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14235:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "14249:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "14231:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14231:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14256:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14227:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14227:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "14219:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 508,
																"isOffset": false,
																"isSlot": false,
																"src": "13975:11:0",
																"valueSize": 1
															},
															{
																"declaration": 508,
																"isOffset": false,
																"isSlot": false,
																"src": "13994:11:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "14079:5:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "14092:5:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "14007:4:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "14099:4:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "14219:4:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "14242:4:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "14249:4:0",
																"valueSize": 1
															}
														],
														"id": 553,
														"nodeType": "InlineAssembly",
														"src": "13901:371:0"
													},
													{
														"expression": {
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 554,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "14338:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 555,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "14347:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 556,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "14355:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14347:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14338:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 559,
														"nodeType": "ExpressionStatement",
														"src": "14338:21:0"
													},
													{
														"assignments": [
															561
														],
														"declarations": [
															{
																"constant": false,
																"id": 561,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "14685:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "14677:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 560,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14677:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 568,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14696:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 563,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "14700:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14696:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 565,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14695:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14715:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "14695:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14677:39:0"
													},
													{
														"expression": {
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 569,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "14933:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14944:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 571,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "14948:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 572,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "14962:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14948:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14944:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14933:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 576,
														"nodeType": "ExpressionStatement",
														"src": "14933:36:0"
													},
													{
														"expression": {
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 577,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "15002:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15013:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 579,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "15017:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 580,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15031:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15017:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15013:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15002:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 584,
														"nodeType": "ExpressionStatement",
														"src": "15002:36:0"
													},
													{
														"expression": {
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 585,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "15072:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15083:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 587,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "15087:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 588,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15101:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15087:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15083:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15072:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 592,
														"nodeType": "ExpressionStatement",
														"src": "15072:36:0"
													},
													{
														"expression": {
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 593,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "15142:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15153:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 595,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "15157:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 596,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15171:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15157:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15153:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15142:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 600,
														"nodeType": "ExpressionStatement",
														"src": "15142:36:0"
													},
													{
														"expression": {
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 601,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "15212:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15223:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 603,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "15227:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 604,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15241:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15227:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15223:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15212:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 608,
														"nodeType": "ExpressionStatement",
														"src": "15212:36:0"
													},
													{
														"expression": {
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 609,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "15283:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15294:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 611,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "15298:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 612,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15298:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15294:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15283:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 616,
														"nodeType": "ExpressionStatement",
														"src": "15283:36:0"
													},
													{
														"expression": {
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 617,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "15753:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 618,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "15762:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 619,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "15770:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15762:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15753:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 622,
														"nodeType": "ExpressionStatement",
														"src": "15753:24:0"
													},
													{
														"expression": {
															"id": 623,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "15798:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 512,
														"id": 624,
														"nodeType": "Return",
														"src": "15791:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "11387:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "11714:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11729:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "11721:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11740:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "11732:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11732:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "11751:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "11743:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11720:43:0"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "11795:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "11787:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11786:16:0"
									},
									"scope": 1293,
									"src": "11705:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "16063:192:0",
										"statements": [
											{
												"assignments": [
													643
												],
												"declarations": [
													{
														"constant": false,
														"id": 643,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16081:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 669,
														"src": "16073:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 645,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "16097:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 646,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "16100:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 647,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "16103:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 644,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															627,
															670
														],
														"referencedDeclaration": 627,
														"src": "16090:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16090:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16073:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 651,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "16146:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$250",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$250",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 650,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "16129:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16129:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 654,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "16166:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 655,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "16169:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 656,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "16172:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 653,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "16159:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16159:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16187:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16159:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16129:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 666,
												"nodeType": "IfStatement",
												"src": "16125:101:0",
												"trueBody": {
													"id": 665,
													"nodeType": "Block",
													"src": "16190:36:0",
													"statements": [
														{
															"expression": {
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 661,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "16204:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16214:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16204:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 664,
															"nodeType": "ExpressionStatement",
															"src": "16204:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 667,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 643,
													"src": "16242:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 641,
												"id": 668,
												"nodeType": "Return",
												"src": "16235:13:0"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "15827:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "15962:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "15977:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "15969:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "15988:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "15980:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "15999:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "15991:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "16021:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "16012:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 636,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 635,
														"name": "Rounding",
														"nameLocations": [
															"16012:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "16012:8:0"
													},
													"referencedDeclaration": 250,
													"src": "16012:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15968:62:0"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "16054:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16053:9:0"
									},
									"scope": 1293,
									"src": "15953:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "16546:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 678,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "16560:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16565:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16560:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 684,
												"nodeType": "IfStatement",
												"src": "16556:45:0",
												"trueBody": {
													"id": 683,
													"nodeType": "Block",
													"src": "16568:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16589:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 677,
															"id": 682,
															"nodeType": "Return",
															"src": "16582:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "17288:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 781,
														"src": "17280:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17280:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 689,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 673,
																			"src": "17308:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 688,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			949,
																			984
																		],
																		"referencedDeclaration": 949,
																		"src": "17303:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17303:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17314:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17303:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 693,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17302:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17297:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17280:36:0"
											},
											{
												"id": 780,
												"nodeType": "UncheckedBlock",
												"src": "17717:408:0",
												"statements": [
													{
														"expression": {
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 696,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17741:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 697,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17751:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 698,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17760:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 699,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17764:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17760:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17751:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 702,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17750:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17775:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17750:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17741:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 706,
														"nodeType": "ExpressionStatement",
														"src": "17741:35:0"
													},
													{
														"expression": {
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 707,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17790:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 708,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17800:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 709,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17809:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 710,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17813:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17809:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17800:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 713,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17799:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17824:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17799:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17790:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 717,
														"nodeType": "ExpressionStatement",
														"src": "17790:35:0"
													},
													{
														"expression": {
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 718,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17839:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 719,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17849:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 720,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17858:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 721,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17862:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17858:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17849:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 724,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17848:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17873:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17848:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17839:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 728,
														"nodeType": "ExpressionStatement",
														"src": "17839:35:0"
													},
													{
														"expression": {
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 729,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17888:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 730,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17898:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 731,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17907:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 732,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17911:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17907:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17898:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 735,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17897:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17897:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17888:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 739,
														"nodeType": "ExpressionStatement",
														"src": "17888:35:0"
													},
													{
														"expression": {
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 740,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17937:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 741,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17947:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 742,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17956:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 743,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17960:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17956:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17947:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 746,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17946:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17971:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17946:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17937:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 750,
														"nodeType": "ExpressionStatement",
														"src": "17937:35:0"
													},
													{
														"expression": {
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 751,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17986:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 752,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17996:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 753,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "18005:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 754,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "18009:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18005:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17996:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 757,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17995:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18020:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17995:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17986:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 761,
														"nodeType": "ExpressionStatement",
														"src": "17986:35:0"
													},
													{
														"expression": {
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 762,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "18035:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 763,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "18045:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 764,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "18054:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 765,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "18058:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18054:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18045:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 768,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18044:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18069:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18044:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18035:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 772,
														"nodeType": "ExpressionStatement",
														"src": "18035:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 774,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "18095:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 775,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "18103:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 776,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 686,
																		"src": "18107:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18103:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 773,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "18091:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18091:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 677,
														"id": 779,
														"nodeType": "Return",
														"src": "18084:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "16261:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "16498:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "16511:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "16503:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16502:11:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "16537:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16536:9:0"
									},
									"scope": 1293,
									"src": "16489:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "18307:164:0",
										"statements": [
											{
												"id": 815,
												"nodeType": "UncheckedBlock",
												"src": "18317:148:0",
												"statements": [
													{
														"assignments": [
															794
														],
														"declarations": [
															{
																"constant": false,
																"id": 794,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "18349:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 815,
																"src": "18341:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 793,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18341:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 798,
														"initialValue": {
															"arguments": [
																{
																	"id": 796,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "18363:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 795,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	782,
																	817
																],
																"referencedDeclaration": 782,
																"src": "18358:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18358:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18341:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 799,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "18386:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 801,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 788,
																						"src": "18413:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 800,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "18396:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "18396:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 805,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 803,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 794,
																						"src": "18426:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 804,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 794,
																						"src": "18435:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "18426:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 806,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 785,
																					"src": "18444:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18426:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "18396:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18452:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "18396:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18448:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 812,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "18395:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "18386:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 792,
														"id": 814,
														"nodeType": "Return",
														"src": "18379:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "18137:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "18240:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18253:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "18245:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "18265:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "18256:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 787,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 786,
														"name": "Rounding",
														"nameLocations": [
															"18256:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "18256:8:0"
													},
													"referencedDeclaration": 250,
													"src": "18256:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18244:30:0"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "18298:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18298:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18297:9:0"
									},
									"scope": 1293,
									"src": "18231:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "18662:922:0",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18680:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "18672:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18672:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": {
													"hexValue": "30",
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18689:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18672:18:0"
											},
											{
												"id": 945,
												"nodeType": "UncheckedBlock",
												"src": "18700:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 829,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "18728:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18737:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "18728:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18743:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18728:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 843,
														"nodeType": "IfStatement",
														"src": "18724:99:0",
														"trueBody": {
															"id": 842,
															"nodeType": "Block",
															"src": "18746:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 834,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "18764:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18774:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "18764:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 837,
																	"nodeType": "ExpressionStatement",
																	"src": "18764:13:0"
																},
																{
																	"expression": {
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 838,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "18795:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18805:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "18795:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 841,
																	"nodeType": "ExpressionStatement",
																	"src": "18795:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 844,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "18840:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18849:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "18840:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18854:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18840:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 858,
														"nodeType": "IfStatement",
														"src": "18836:96:0",
														"trueBody": {
															"id": 857,
															"nodeType": "Block",
															"src": "18857:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "18875:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18885:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "18875:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 852,
																	"nodeType": "ExpressionStatement",
																	"src": "18875:12:0"
																},
																{
																	"expression": {
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 853,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "18905:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18915:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "18905:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 856,
																	"nodeType": "ExpressionStatement",
																	"src": "18905:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 859,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "18949:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18958:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "18949:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18963:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18949:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 873,
														"nodeType": "IfStatement",
														"src": "18945:96:0",
														"trueBody": {
															"id": 872,
															"nodeType": "Block",
															"src": "18966:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 864,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "18984:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18994:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "18984:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "18984:12:0"
																},
																{
																	"expression": {
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 868,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19014:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19024:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19014:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 871,
																	"nodeType": "ExpressionStatement",
																	"src": "19014:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 874,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19058:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19067:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "19058:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19072:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19058:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 888,
														"nodeType": "IfStatement",
														"src": "19054:96:0",
														"trueBody": {
															"id": 887,
															"nodeType": "Block",
															"src": "19075:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 879,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "19093:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19103:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19093:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 882,
																	"nodeType": "ExpressionStatement",
																	"src": "19093:12:0"
																},
																{
																	"expression": {
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 883,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19123:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19133:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19123:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 886,
																	"nodeType": "ExpressionStatement",
																	"src": "19123:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 889,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19167:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19176:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "19167:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19180:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19167:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 903,
														"nodeType": "IfStatement",
														"src": "19163:93:0",
														"trueBody": {
															"id": 902,
															"nodeType": "Block",
															"src": "19183:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 894,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "19201:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19211:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19201:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 897,
																	"nodeType": "ExpressionStatement",
																	"src": "19201:11:0"
																},
																{
																	"expression": {
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 898,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19230:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19240:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19230:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "19230:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 904,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19273:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19282:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "19273:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19286:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19273:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 918,
														"nodeType": "IfStatement",
														"src": "19269:93:0",
														"trueBody": {
															"id": 917,
															"nodeType": "Block",
															"src": "19289:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 909,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "19307:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19317:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19307:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 912,
																	"nodeType": "ExpressionStatement",
																	"src": "19307:11:0"
																},
																{
																	"expression": {
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 913,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19336:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19346:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19336:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 916,
																	"nodeType": "ExpressionStatement",
																	"src": "19336:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 919,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19379:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19388:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "19379:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19392:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19379:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 933,
														"nodeType": "IfStatement",
														"src": "19375:93:0",
														"trueBody": {
															"id": 932,
															"nodeType": "Block",
															"src": "19395:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 924,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "19413:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19423:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19413:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 927,
																	"nodeType": "ExpressionStatement",
																	"src": "19413:11:0"
																},
																{
																	"expression": {
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 928,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19442:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19452:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19442:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 931,
																	"nodeType": "ExpressionStatement",
																	"src": "19442:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 934,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19485:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19494:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19485:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19498:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19485:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 944,
														"nodeType": "IfStatement",
														"src": "19481:64:0",
														"trueBody": {
															"id": 943,
															"nodeType": "Block",
															"src": "19501:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 939,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19519:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19529:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19519:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 942,
																	"nodeType": "ExpressionStatement",
																	"src": "19519:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 946,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 826,
													"src": "19571:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 824,
												"id": 947,
												"nodeType": "Return",
												"src": "19564:13:0"
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "18477:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "18610:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18623:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "18615:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18614:15:0"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "18653:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18652:9:0"
									},
									"scope": 1293,
									"src": "18601:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "19817:168:0",
										"statements": [
											{
												"id": 982,
												"nodeType": "UncheckedBlock",
												"src": "19827:152:0",
												"statements": [
													{
														"assignments": [
															961
														],
														"declarations": [
															{
																"constant": false,
																"id": 961,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "19859:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 982,
																"src": "19851:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 960,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19851:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 965,
														"initialValue": {
															"arguments": [
																{
																	"id": 963,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "19873:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 962,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	949,
																	984
																],
																"referencedDeclaration": 949,
																"src": "19868:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19868:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19851:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 966,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "19900:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 968,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 955,
																						"src": "19927:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 967,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "19910:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 969,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19910:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 972,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 970,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "19940:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 971,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 961,
																						"src": "19945:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19940:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 973,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 952,
																					"src": "19954:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19940:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "19910:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19966:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "19910:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19962:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19909:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "19900:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 959,
														"id": 981,
														"nodeType": "Return",
														"src": "19893:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "19590:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "19746:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19759:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "19751:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "19775:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "19766:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 954,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 953,
														"name": "Rounding",
														"nameLocations": [
															"19766:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "19766:8:0"
													},
													"referencedDeclaration": 250,
													"src": "19766:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19750:34:0"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "19808:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19807:9:0"
									},
									"scope": 1293,
									"src": "19737:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "20178:854:0",
										"statements": [
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20196:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1112,
														"src": "20188:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 992,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20188:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"hexValue": "30",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20205:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20188:18:0"
											},
											{
												"id": 1109,
												"nodeType": "UncheckedBlock",
												"src": "20216:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 996,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20244:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20253:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20259:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "20253:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "20244:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1012,
														"nodeType": "IfStatement",
														"src": "20240:103:0",
														"trueBody": {
															"id": 1011,
															"nodeType": "Block",
															"src": "20263:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1001,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20281:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20290:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20296:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "20290:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "20281:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1006,
																	"nodeType": "ExpressionStatement",
																	"src": "20281:17:0"
																},
																{
																	"expression": {
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1007,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20316:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20326:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "20316:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1010,
																	"nodeType": "ExpressionStatement",
																	"src": "20316:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1013,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20360:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20369:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20375:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "20369:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "20360:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1029,
														"nodeType": "IfStatement",
														"src": "20356:103:0",
														"trueBody": {
															"id": 1028,
															"nodeType": "Block",
															"src": "20379:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1018,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20397:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20406:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20412:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "20406:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "20397:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1023,
																	"nodeType": "ExpressionStatement",
																	"src": "20397:17:0"
																},
																{
																	"expression": {
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1024,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20432:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20442:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "20432:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1027,
																	"nodeType": "ExpressionStatement",
																	"src": "20432:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1030,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20476:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20485:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20491:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "20485:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "20476:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1046,
														"nodeType": "IfStatement",
														"src": "20472:103:0",
														"trueBody": {
															"id": 1045,
															"nodeType": "Block",
															"src": "20495:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1035,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20513:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20522:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1037,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20528:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "20522:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "20513:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1040,
																	"nodeType": "ExpressionStatement",
																	"src": "20513:17:0"
																},
																{
																	"expression": {
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1041,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20548:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20558:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "20548:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1044,
																	"nodeType": "ExpressionStatement",
																	"src": "20548:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1047,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20592:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20601:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20607:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "20601:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "20592:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1063,
														"nodeType": "IfStatement",
														"src": "20588:100:0",
														"trueBody": {
															"id": 1062,
															"nodeType": "Block",
															"src": "20610:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1052,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20628:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20637:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20643:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "20637:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "20628:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1057,
																	"nodeType": "ExpressionStatement",
																	"src": "20628:16:0"
																},
																{
																	"expression": {
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1058,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20662:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20672:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "20662:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1061,
																	"nodeType": "ExpressionStatement",
																	"src": "20662:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1064,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20705:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20714:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20720:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "20714:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "20705:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1080,
														"nodeType": "IfStatement",
														"src": "20701:100:0",
														"trueBody": {
															"id": 1079,
															"nodeType": "Block",
															"src": "20723:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1069,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20741:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20750:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20756:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "20750:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "20741:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1074,
																	"nodeType": "ExpressionStatement",
																	"src": "20741:16:0"
																},
																{
																	"expression": {
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1075,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20775:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20785:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "20775:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1078,
																	"nodeType": "ExpressionStatement",
																	"src": "20775:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1081,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20818:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20827:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20833:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "20827:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "20818:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1097,
														"nodeType": "IfStatement",
														"src": "20814:100:0",
														"trueBody": {
															"id": 1096,
															"nodeType": "Block",
															"src": "20836:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1086,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20854:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20863:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20869:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "20863:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "20854:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1091,
																	"nodeType": "ExpressionStatement",
																	"src": "20854:16:0"
																},
																{
																	"expression": {
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1092,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20888:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20898:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "20888:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1095,
																	"nodeType": "ExpressionStatement",
																	"src": "20888:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1098,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20931:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20940:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20946:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20940:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "20931:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1108,
														"nodeType": "IfStatement",
														"src": "20927:66:0",
														"trueBody": {
															"id": 1107,
															"nodeType": "Block",
															"src": "20949:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1103,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20967:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20977:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "20967:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1106,
																	"nodeType": "ExpressionStatement",
																	"src": "20967:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1110,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 993,
													"src": "21019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 991,
												"id": 1111,
												"nodeType": "Return",
												"src": "21012:13:0"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "19991:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "20125:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20139:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "20131:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20130:15:0"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "20169:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20168:9:0"
									},
									"scope": 1293,
									"src": "20116:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "21267:170:0",
										"statements": [
											{
												"id": 1146,
												"nodeType": "UncheckedBlock",
												"src": "21277:154:0",
												"statements": [
													{
														"assignments": [
															1125
														],
														"declarations": [
															{
																"constant": false,
																"id": 1125,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "21309:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1146,
																"src": "21301:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1124,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21301:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1129,
														"initialValue": {
															"arguments": [
																{
																	"id": 1127,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "21324:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1126,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1113,
																	1148
																],
																"referencedDeclaration": 1113,
																"src": "21318:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21318:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21301:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1130,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "21351:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1132,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1119,
																						"src": "21378:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1131,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "21361:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "21361:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1136,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1134,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "21391:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1135,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1125,
																						"src": "21397:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "21391:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1137,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "21406:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21391:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "21361:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21418:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "21361:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21414:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21360:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "21351:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1123,
														"id": 1145,
														"nodeType": "Return",
														"src": "21344:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "21038:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "21195:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21209:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "21201:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "21225:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "21216:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1117,
														"name": "Rounding",
														"nameLocations": [
															"21216:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "21216:8:0"
													},
													"referencedDeclaration": 250,
													"src": "21216:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21200:34:0"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "21258:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21257:9:0"
									},
									"scope": 1293,
									"src": "21186:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "21757:600:0",
										"statements": [
											{
												"assignments": [
													1157
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "21775:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "21767:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1159,
												"initialValue": {
													"hexValue": "30",
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21784:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21767:18:0"
											},
											{
												"id": 1231,
												"nodeType": "UncheckedBlock",
												"src": "21795:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1160,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "21823:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21832:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "21823:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21838:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21823:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1174,
														"nodeType": "IfStatement",
														"src": "21819:98:0",
														"trueBody": {
															"id": 1173,
															"nodeType": "Block",
															"src": "21841:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1165,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "21859:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21869:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21859:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1168,
																	"nodeType": "ExpressionStatement",
																	"src": "21859:13:0"
																},
																{
																	"expression": {
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1169,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "21890:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21900:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "21890:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1172,
																	"nodeType": "ExpressionStatement",
																	"src": "21890:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1175,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "21934:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21943:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "21934:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21948:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21934:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1189,
														"nodeType": "IfStatement",
														"src": "21930:95:0",
														"trueBody": {
															"id": 1188,
															"nodeType": "Block",
															"src": "21951:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1180,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "21969:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21979:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21969:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1183,
																	"nodeType": "ExpressionStatement",
																	"src": "21969:12:0"
																},
																{
																	"expression": {
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1184,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "21999:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22009:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "21999:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1187,
																	"nodeType": "ExpressionStatement",
																	"src": "21999:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1190,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "22042:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22051:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "22042:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22056:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22042:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1204,
														"nodeType": "IfStatement",
														"src": "22038:95:0",
														"trueBody": {
															"id": 1203,
															"nodeType": "Block",
															"src": "22059:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1195,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "22077:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22087:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22077:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1198,
																	"nodeType": "ExpressionStatement",
																	"src": "22077:12:0"
																},
																{
																	"expression": {
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1199,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "22107:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22117:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22107:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1202,
																	"nodeType": "ExpressionStatement",
																	"src": "22107:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1205,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "22150:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22159:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "22150:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22164:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22150:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1219,
														"nodeType": "IfStatement",
														"src": "22146:95:0",
														"trueBody": {
															"id": 1218,
															"nodeType": "Block",
															"src": "22167:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1210,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "22185:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22195:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22185:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1213,
																	"nodeType": "ExpressionStatement",
																	"src": "22185:12:0"
																},
																{
																	"expression": {
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1214,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "22215:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22225:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22215:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1217,
																	"nodeType": "ExpressionStatement",
																	"src": "22215:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1220,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "22258:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22267:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "22258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22271:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22258:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1230,
														"nodeType": "IfStatement",
														"src": "22254:64:0",
														"trueBody": {
															"id": 1229,
															"nodeType": "Block",
															"src": "22274:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1225,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "22292:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22302:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22292:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1228,
																	"nodeType": "ExpressionStatement",
																	"src": "22292:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1232,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1157,
													"src": "22344:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1233,
												"nodeType": "Return",
												"src": "22337:13:0"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "21443:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "21703:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21718:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "21710:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21709:15:0"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "21748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21747:9:0"
									},
									"scope": 1293,
									"src": "21694:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "22594:177:0",
										"statements": [
											{
												"id": 1271,
												"nodeType": "UncheckedBlock",
												"src": "22604:161:0",
												"statements": [
													{
														"assignments": [
															1247
														],
														"declarations": [
															{
																"constant": false,
																"id": 1247,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "22636:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1271,
																"src": "22628:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1246,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22628:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1251,
														"initialValue": {
															"arguments": [
																{
																	"id": 1249,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "22652:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1248,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1235,
																	1273
																],
																"referencedDeclaration": 1235,
																"src": "22645:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22645:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22628:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1252,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "22679:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1254,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1241,
																						"src": "22706:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1253,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "22689:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22689:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1256,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "22719:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1259,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1257,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1247,
																									"src": "22725:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1258,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "22735:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "22725:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1260,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "22724:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22719:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1262,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1238,
																					"src": "22740:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22719:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "22689:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22752:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "22689:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22748:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1268,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22688:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "22679:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1245,
														"id": 1270,
														"nodeType": "Return",
														"src": "22672:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "22363:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "22521:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22536:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "22528:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22552:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "22543:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1239,
														"name": "Rounding",
														"nameLocations": [
															"22543:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "22543:8:0"
													},
													"referencedDeclaration": 250,
													"src": "22543:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22527:34:0"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "22585:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22584:9:0"
									},
									"scope": 1293,
									"src": "22512:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "22969:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1284,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "22992:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$250",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$250",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22986:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1282,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "22986:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22986:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23004:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "22986:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23009:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "22986:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1281,
												"id": 1290,
												"nodeType": "Return",
												"src": "22979:31:0"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "22777:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "22904:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22930:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "22921:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1276,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1275,
														"name": "Rounding",
														"nameLocations": [
															"22921:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "22921:8:0"
													},
													"referencedDeclaration": 250,
													"src": "22921:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22920:19:0"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "22963:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22963:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22962:6:0"
									},
									"scope": 1293,
									"src": "22895:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3135,
							"src": "8105:14914:0",
							"usedErrors": [
								245
							],
							"usedEvents": []
						},
						{
							"id": 1294,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "23149:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1295,
								"nodeType": "StructuredDocumentation",
								"src": "23177:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1543,
							"linearizedBaseContracts": [
								1543
							],
							"name": "Strings",
							"nameLocation": "23220:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1298,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "23259:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1543,
									"src": "23234:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1296,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "23234:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1297,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23272:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1301,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "23319:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1543,
									"src": "23296:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1299,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "23296:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1300,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23336:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "23345:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1308,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "23437:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23474:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "23466:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "23489:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "23481:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23465:31:0"
									},
									"src": "23431:66:0"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "23669:627:0",
										"statements": [
											{
												"id": 1354,
												"nodeType": "UncheckedBlock",
												"src": "23679:611:0",
												"statements": [
													{
														"assignments": [
															1317
														],
														"declarations": [
															{
																"constant": false,
																"id": 1317,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "23711:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1354,
																"src": "23703:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1316,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23703:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1324,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1320,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1311,
																		"src": "23731:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1318,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "23720:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1293_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23725:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1113,
																	"src": "23720:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23720:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23740:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "23720:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23703:38:0"
													},
													{
														"assignments": [
															1326
														],
														"declarations": [
															{
																"constant": false,
																"id": 1326,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "23769:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1354,
																"src": "23755:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1325,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "23755:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1331,
														"initialValue": {
															"arguments": [
																{
																	"id": 1329,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "23789:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "23778:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1327,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "23782:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23778:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23755:41:0"
													},
													{
														"assignments": [
															1333
														],
														"declarations": [
															{
																"constant": false,
																"id": 1333,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "23818:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1354,
																"src": "23810:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1332,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23810:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1334,
														"nodeType": "VariableDeclarationStatement",
														"src": "23810:11:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "23891:67:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "23909:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "23920:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "23932:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "23936:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "23928:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23928:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23916:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23916:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "23909:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1326,
																"isOffset": false,
																"isSlot": false,
																"src": "23920:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1317,
																"isOffset": false,
																"isSlot": false,
																"src": "23936:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1333,
																"isOffset": false,
																"isSlot": false,
																"src": "23909:3:0",
																"valueSize": 1
															}
														],
														"id": 1335,
														"nodeType": "InlineAssembly",
														"src": "23882:76:0"
													},
													{
														"body": {
															"id": 1350,
															"nodeType": "Block",
															"src": "23984:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "24002:5:0",
																		"subExpression": {
																			"id": 1337,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1333,
																			"src": "24002:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1339,
																	"nodeType": "ExpressionStatement",
																	"src": "24002:5:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "24085:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "24115:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "24129:5:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "24136:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "24125:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "24125:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nodeType": "YulIdentifier",
																									"src": "24141:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "24120:4:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "24120:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "24107:7:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24107:46:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "24107:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1298,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "24141:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1333,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "24115:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1311,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "24129:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1340,
																	"nodeType": "InlineAssembly",
																	"src": "24076:95:0"
																},
																{
																	"expression": {
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1341,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "24188:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24197:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "24188:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1344,
																	"nodeType": "ExpressionStatement",
																	"src": "24188:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1345,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "24221:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24230:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24221:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1349,
																	"nodeType": "IfStatement",
																	"src": "24217:21:0",
																	"trueBody": {
																		"id": 1348,
																		"nodeType": "Break",
																		"src": "24233:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23978:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1351,
														"nodeType": "WhileStatement",
														"src": "23971:282:0"
													},
													{
														"expression": {
															"id": 1352,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "24273:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1315,
														"id": 1353,
														"nodeType": "Return",
														"src": "24266:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "23503:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "23607:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "23616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23615:15:0"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "23654:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23654:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23653:15:0"
									},
									"scope": 1543,
									"src": "23598:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "24472:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1367,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "24503:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24511:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "24503:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24521:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "24503:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24515:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1376,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1359,
																			"src": "24549:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1374,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 240,
																			"src": "24534:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$240_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24545:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 239,
																		"src": "24534:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24534:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1373,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "24525:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24525:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24489:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1364,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "24489:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24496:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "24489:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24489:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1363,
												"id": 1380,
												"nodeType": "Return",
												"src": "24482:75:0"
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "24302:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "24405:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24427:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "24420:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1358,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24420:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24419:14:0"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "24457:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24457:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24456:15:0"
									},
									"scope": 1543,
									"src": "24396:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "24743:100:0",
										"statements": [
											{
												"id": 1400,
												"nodeType": "UncheckedBlock",
												"src": "24753:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1391,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "24796:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1394,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1385,
																				"src": "24815:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1392,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1293,
																				"src": "24803:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1293_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "24808:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1235,
																			"src": "24803:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24803:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24824:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "24803:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1390,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1402,
																	1485,
																	1505
																],
																"referencedDeclaration": 1485,
																"src": "24784:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24784:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1389,
														"id": 1399,
														"nodeType": "Return",
														"src": "24777:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "24570:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "24678:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24698:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "24690:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24689:15:0"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "24728:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24728:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24727:15:0"
									},
									"scope": 1543,
									"src": "24669:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "25056:435:0",
										"statements": [
											{
												"assignments": [
													1413
												],
												"declarations": [
													{
														"constant": false,
														"id": 1413,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "25074:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "25066:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25066:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1415,
												"initialValue": {
													"id": 1414,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1405,
													"src": "25087:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25066:26:0"
											},
											{
												"assignments": [
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "25115:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "25102:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1416,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "25102:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1426,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25134:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1421,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "25138:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25134:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25147:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "25134:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "25124:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1418,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "25128:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25124:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25102:47:0"
											},
											{
												"expression": {
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1427,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "25159:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1429,
														"indexExpression": {
															"hexValue": "30",
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25166:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25159:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25171:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "25159:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "25159:15:0"
											},
											{
												"expression": {
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1433,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "25184:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1435,
														"indexExpression": {
															"hexValue": "31",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25191:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25184:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25196:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "25184:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "25184:15:0"
											},
											{
												"body": {
													"id": 1467,
													"nodeType": "Block",
													"src": "25254:95:0",
													"statements": [
														{
															"expression": {
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1453,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1417,
																		"src": "25268:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1455,
																	"indexExpression": {
																		"id": 1454,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "25275:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "25268:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1456,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1298,
																		"src": "25280:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1460,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1457,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "25291:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25304:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "25291:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "25280:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "25268:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1462,
															"nodeType": "ExpressionStatement",
															"src": "25268:40:0"
														},
														{
															"expression": {
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1463,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1413,
																	"src": "25322:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25337:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25322:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1466,
															"nodeType": "ExpressionStatement",
															"src": "25322:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1447,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "25242:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25246:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "25242:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1468,
												"initializationExpression": {
													"assignments": [
														1440
													],
													"declarations": [
														{
															"constant": false,
															"id": 1440,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "25222:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1468,
															"src": "25214:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1439,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25214:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1446,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25226:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1442,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "25230:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25226:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25239:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "25226:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "25214:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "25249:3:0",
														"subExpression": {
															"id": 1450,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "25251:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1452,
													"nodeType": "ExpressionStatement",
													"src": "25249:3:0"
												},
												"nodeType": "ForStatement",
												"src": "25209:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1469,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "25362:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25376:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25362:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1478,
												"nodeType": "IfStatement",
												"src": "25358:96:0",
												"trueBody": {
													"id": 1477,
													"nodeType": "Block",
													"src": "25379:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1473,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "25429:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1474,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "25436:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1472,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "25400:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25400:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1476,
															"nodeType": "RevertStatement",
															"src": "25393:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1481,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "25477:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "25470:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1479,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "25470:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25470:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1411,
												"id": 1483,
												"nodeType": "Return",
												"src": "25463:21:0"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "24849:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "24975:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24995:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "24987:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "25010:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "25002:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24986:31:0"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "25041:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25041:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25040:15:0"
									},
									"scope": 1543,
									"src": "24966:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "25723:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1498,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1488,
																			"src": "25768:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "25760:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1496,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "25760:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25760:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25752:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25752:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25752:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1501,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "25776:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1493,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1402,
															1485,
															1505
														],
														"referencedDeclaration": 1485,
														"src": "25740:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25740:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1492,
												"id": 1503,
												"nodeType": "Return",
												"src": "25733:58:0"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "25497:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "25659:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "25679:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "25671:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25670:14:0"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "25708:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25708:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25707:15:0"
									},
									"scope": 1543,
									"src": "25650:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "25953:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1517,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "25976:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25970:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1515,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "25970:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25970:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25979:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "25970:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1522,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "25995:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25989:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1520,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "25989:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25989:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25998:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "25989:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "25970:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1529,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1508,
																			"src": "26024:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26018:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1527,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "26018:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26018:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1526,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "26008:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26008:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1535,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1510,
																			"src": "26047:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26041:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1533,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "26041:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26041:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1532,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "26031:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26031:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "26008:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25970:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1540,
												"nodeType": "Return",
												"src": "25963:87:0"
											}
										]
									},
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "25804:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "25884:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25904:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "25890:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1507,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25890:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "25921:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "25907:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1509,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25907:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25889:34:0"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "25947:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25947:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:6:0"
									},
									"scope": 1543,
									"src": "25875:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3135,
							"src": "23212:2847:0",
							"usedErrors": [
								1308
							],
							"usedEvents": []
						},
						{
							"id": 1544,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "26189:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1545,
								"nodeType": "StructuredDocumentation",
								"src": "26215:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1564,
							"linearizedBaseContracts": [
								1564
							],
							"name": "Context",
							"nameLocation": "26730:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "26806:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1550,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "26823:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "26827:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "26823:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1549,
												"id": 1552,
												"nodeType": "Return",
												"src": "26816:17:0"
											}
										]
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "26753:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26763:2:0"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "26797:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26796:9:0"
									},
									"scope": 1564,
									"src": "26744:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "26913:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1559,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "26930:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "26934:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "26930:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1561,
												"nodeType": "Return",
												"src": "26923:15:0"
											}
										]
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "26855:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26863:2:0"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "26897:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26897:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26896:16:0"
									},
									"scope": 1564,
									"src": "26846:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3135,
							"src": "26712:235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1565,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "27079:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1567,
										"name": "Context",
										"nameLocations": [
											"27623:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1564,
										"src": "27623:7:0"
									},
									"id": 1568,
									"nodeType": "InheritanceSpecifier",
									"src": "27623:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1566,
								"nodeType": "StructuredDocumentation",
								"src": "27106:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1709,
							"linearizedBaseContracts": [
								1709,
								1564
							],
							"name": "Ownable",
							"nameLocation": "27612:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1570,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "27653:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1709,
									"src": "27637:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1569,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27637:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "27666:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 1575,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "27762:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "27797:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "27789:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27788:17:0"
									},
									"src": "27756:50:0"
								},
								{
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "27812:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 1580,
									"name": "OwnableInvalidOwner",
									"nameLocation": "27905:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "27933:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "27925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27924:15:0"
									},
									"src": "27899:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1586,
									"name": "OwnershipTransferred",
									"nameLocation": "27952:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "27989:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "27973:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "28020:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "28004:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27972:57:0"
									},
									"src": "27946:84:0"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "28190:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1592,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1589,
														"src": "28204:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28228:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1593,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "28220:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28220:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28204:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1606,
												"nodeType": "IfStatement",
												"src": "28200:95:0",
												"trueBody": {
													"id": 1605,
													"nodeType": "Block",
													"src": "28232:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28281:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "28273:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1599,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "28273:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28273:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1598,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "28253:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28253:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1604,
															"nodeType": "RevertStatement",
															"src": "28246:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1608,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "28323:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1607,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "28304:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28304:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1610,
												"nodeType": "ExpressionStatement",
												"src": "28304:32:0"
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "28036:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 1612,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "28176:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "28168:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28167:22:0"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28190:0:0"
									},
									"scope": 1709,
									"src": "28156:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "28452:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1615,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "28462:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28462:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "28462:13:0"
											},
											{
												"id": 1618,
												"nodeType": "PlaceholderStatement",
												"src": "28485:1:0"
											}
										]
									},
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "28349:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1620,
									"name": "onlyOwner",
									"nameLocation": "28440:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28449:2:0"
									},
									"src": "28431:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "28624:30:0",
										"statements": [
											{
												"expression": {
													"id": 1626,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1570,
													"src": "28641:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1625,
												"id": 1627,
												"nodeType": "Return",
												"src": "28634:13:0"
											}
										]
									},
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "28499:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "28578:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28583:2:0"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "28615:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28615:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28614:9:0"
									},
									"scope": 1709,
									"src": "28569:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "28772:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1633,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "28786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28786:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1635,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "28797:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28797:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28786:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1644,
												"nodeType": "IfStatement",
												"src": "28782:101:0",
												"trueBody": {
													"id": 1643,
													"nodeType": "Block",
													"src": "28811:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1639,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "28859:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28859:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1638,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1575,
																	"src": "28832:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28832:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1642,
															"nodeType": "RevertStatement",
															"src": "28825:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "28660:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "28736:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28747:2:0"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28772:0:0"
									},
									"scope": 1709,
									"src": "28727:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "29278:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29315:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29307:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1653,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29307:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29307:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1652,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "29288:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29288:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1658,
												"nodeType": "ExpressionStatement",
												"src": "29288:30:0"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "28895:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1650,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1649,
												"name": "onlyOwner",
												"nameLocations": [
													"29268:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1620,
												"src": "29268:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29268:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "29233:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29250:2:0"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29278:0:0"
									},
									"scope": 1709,
									"src": "29224:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "29544:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1668,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "29558:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29578:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29570:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1669,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "29570:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29570:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29558:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1682,
												"nodeType": "IfStatement",
												"src": "29554:91:0",
												"trueBody": {
													"id": 1681,
													"nodeType": "Block",
													"src": "29582:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1677,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29631:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29623:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1675,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "29623:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29623:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1674,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "29603:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29603:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1680,
															"nodeType": "RevertStatement",
															"src": "29596:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1684,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "29673:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1683,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "29654:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29654:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "29654:28:0"
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "29331:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1666,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1665,
												"name": "onlyOwner",
												"nameLocations": [
													"29534:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1620,
												"src": "29534:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29534:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "29483:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "29509:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "29501:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29500:18:0"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29544:0:0"
									},
									"scope": 1709,
									"src": "29474:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "29906:124:0",
										"statements": [
											{
												"assignments": [
													1695
												],
												"declarations": [
													{
														"constant": false,
														"id": 1695,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "29924:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1707,
														"src": "29916:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1694,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "29916:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1697,
												"initialValue": {
													"id": 1696,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1570,
													"src": "29935:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29916:25:0"
											},
											{
												"expression": {
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1698,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "29951:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1699,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "29960:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29951:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1701,
												"nodeType": "ExpressionStatement",
												"src": "29951:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1703,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "30004:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1704,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1691,
															"src": "30014:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1702,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "29983:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29983:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "EmitStatement",
												"src": "29978:45:0"
											}
										]
									},
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "29695:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "29852:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "29879:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "29871:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29870:18:0"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29906:0:0"
									},
									"scope": 1709,
									"src": "29843:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3135,
							"src": "27594:2438:0",
							"usedErrors": [
								1575,
								1580
							],
							"usedEvents": [
								1586
							]
						},
						{
							"id": 1710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "30192:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1711,
								"nodeType": "StructuredDocumentation",
								"src": "30218:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1726,
							"linearizedBaseContracts": [
								1726
							],
							"name": "IERC721Receiver",
							"nameLocation": "30381:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1712,
										"nodeType": "StructuredDocumentation",
										"src": "30403:500:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "30917:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "30951:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "30943:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30977:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "30969:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "30999:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "30991:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "31031:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "31016:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1719,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "31016:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30933:108:0"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "31060:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1722,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "31060:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31059:8:0"
									},
									"scope": 1726,
									"src": "30908:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3135,
							"src": "30371:699:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1727,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "31228:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1728,
								"nodeType": "StructuredDocumentation",
								"src": "31254:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1737,
							"linearizedBaseContracts": [
								1737
							],
							"name": "IERC165",
							"nameLocation": "31544:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "31558:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "31912:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "31937:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "31930:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "31930:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31929:20:0"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "31973:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1733,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31973:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31972:6:0"
									},
									"scope": 1737,
									"src": "31903:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3135,
							"src": "31534:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1738,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32121:24:0"
						},
						{
							"id": 1739,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32302:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1741,
										"name": "IERC165",
										"nameLocations": [
											"32836:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1737,
										"src": "32836:7:0"
									},
									"id": 1742,
									"nodeType": "InheritanceSpecifier",
									"src": "32836:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1740,
								"nodeType": "StructuredDocumentation",
								"src": "32329:478:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1759,
							"linearizedBaseContracts": [
								1759,
								1737
							],
							"name": "ERC165",
							"nameLocation": "32826:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1736
									],
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "32993:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1750,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "33010:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1752,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "33030:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1737_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1737_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1751,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "33025:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33025:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1737",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "33039:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "33025:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "33010:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1749,
												"id": 1756,
												"nodeType": "Return",
												"src": "33003:47:0"
											}
										]
									},
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "32850:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "32920:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "32945:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "32938:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "32938:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32937:20:0"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "32987:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1747,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32987:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32986:6:0"
									},
									"scope": 1759,
									"src": "32911:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3135,
							"src": "32808:251:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1760,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33203:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1762,
										"name": "IERC165",
										"nameLocations": [
											"33319:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1737,
										"src": "33319:7:0"
									},
									"id": 1763,
									"nodeType": "InheritanceSpecifier",
									"src": "33319:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1761,
								"nodeType": "StructuredDocumentation",
								"src": "33230:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1873,
							"linearizedBaseContracts": [
								1873,
								1737
							],
							"name": "IERC721",
							"nameLocation": "33308:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "33333:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1772,
									"name": "Transfer",
									"nameLocation": "33432:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "33457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "33441:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33479:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "33463:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33499:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "33483:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33440:67:0"
									},
									"src": "33426:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "33514:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1781,
									"name": "Approval",
									"nameLocation": "33619:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33644:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "33628:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33628:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "33667:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "33651:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33693:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "33677:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33627:74:0"
									},
									"src": "33613:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "33708:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1790,
									"name": "ApprovalForAll",
									"nameLocation": "33836:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33867:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "33851:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "33890:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "33874:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33874:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "33905:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "33900:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33900:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33850:64:0"
									},
									"src": "33830:85:0"
								},
								{
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "33921:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "34011:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34029:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "34021:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34020:15:0"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "34067:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "34059:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34058:17:0"
									},
									"scope": 1873,
									"src": "34002:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "34082:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "34227:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "34235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34234:17:0"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34283:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "34275:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34274:15:0"
									},
									"scope": 1873,
									"src": "34218:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "34296:565:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "34875:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34900:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "34892:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34914:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "34906:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34926:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "34918:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "34950:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "34935:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1814,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34935:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34891:64:0"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34964:0:0"
									},
									"scope": 1873,
									"src": "34866:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "34971:705:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "35690:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "35715:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "35707:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35707:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35729:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "35721:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35721:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35741:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "35733:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35706:43:0"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35758:0:0"
									},
									"scope": 1873,
									"src": "35681:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "35765:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1838,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "36511:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36532:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "36524:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36546:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "36538:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36558:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "36550:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36523:43:0"
									},
									"returnParameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36575:0:0"
									},
									"scope": 1873,
									"src": "36502:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1839,
										"nodeType": "StructuredDocumentation",
										"src": "36582:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "37048:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37064:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "37056:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37076:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "37068:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37055:29:0"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37093:0:0"
									},
									"scope": 1873,
									"src": "37039:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1847,
										"nodeType": "StructuredDocumentation",
										"src": "37100:315:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "37429:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "37447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "37470:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "37465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37465:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37446:33:0"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37488:0:0"
									},
									"scope": 1873,
									"src": "37420:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "37495:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "37648:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37668:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "37660:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37659:17:0"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37708:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "37700:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37699:18:0"
									},
									"scope": 1873,
									"src": "37639:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "37724:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "37876:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "37901:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "37893:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37893:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37916:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "37908:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37892:33:0"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "37949:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37949:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37948:6:0"
									},
									"scope": 1873,
									"src": "37867:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3135,
							"src": "33298:4659:0",
							"usedErrors": [],
							"usedEvents": [
								1772,
								1781,
								1790
							]
						},
						{
							"id": 1874,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38097:24:0"
						},
						{
							"id": 1875,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38264:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1877,
										"name": "IERC165",
										"nameLocations": [
											"38359:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1737,
										"src": "38359:7:0"
									},
									"id": 1878,
									"nodeType": "InheritanceSpecifier",
									"src": "38359:7:0"
								},
								{
									"baseName": {
										"id": 1879,
										"name": "IERC721",
										"nameLocations": [
											"38368:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "38368:7:0"
									},
									"id": 1880,
									"nodeType": "InheritanceSpecifier",
									"src": "38368:7:0"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1876,
								"nodeType": "StructuredDocumentation",
								"src": "38292:45:0",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 1893,
							"linearizedBaseContracts": [
								1893,
								1873,
								1737
							],
							"name": "IERC4906",
							"nameLocation": "38347:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1881,
										"nodeType": "StructuredDocumentation",
										"src": "38382:201:0",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 1885,
									"name": "MetadataUpdate",
									"nameLocation": "38594:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "38617:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "38609:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38608:18:0"
									},
									"src": "38588:39:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1886,
										"nodeType": "StructuredDocumentation",
										"src": "38633:212:0",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 1892,
									"name": "BatchMetadataUpdate",
									"nameLocation": "38856:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "38884:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "38876:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "38906:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "38898:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38875:42:0"
									},
									"src": "38850:68:0"
								}
							],
							"scope": 3135,
							"src": "38337:583:0",
							"usedErrors": [],
							"usedEvents": [
								1772,
								1781,
								1790,
								1885,
								1892
							]
						},
						{
							"id": 1894,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "39102:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1896,
										"name": "IERC721",
										"nameLocations": [
											"39292:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "39292:7:0"
									},
									"id": 1897,
									"nodeType": "InheritanceSpecifier",
									"src": "39292:7:0"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1895,
								"nodeType": "StructuredDocumentation",
								"src": "39129:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1918,
							"linearizedBaseContracts": [
								1918,
								1873,
								1737
							],
							"name": "IERC721Metadata",
							"nameLocation": "39273:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "39306:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1903,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "39378:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39382:2:0"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "39408:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1900,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39408:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39407:15:0"
									},
									"scope": 1918,
									"src": "39369:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1904,
										"nodeType": "StructuredDocumentation",
										"src": "39429:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "39503:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39509:2:0"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "39535:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1906,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39535:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39534:15:0"
									},
									"scope": 1918,
									"src": "39494:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1910,
										"nodeType": "StructuredDocumentation",
										"src": "39556:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1917,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "39660:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39677:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "39669:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39668:17:0"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "39709:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1914,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39709:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39708:15:0"
									},
									"scope": 1918,
									"src": "39651:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3135,
							"src": "39263:463:0",
							"usedErrors": [],
							"usedEvents": [
								1772,
								1781,
								1790
							]
						},
						{
							"id": 1919,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "39868:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1921,
										"name": "Context",
										"nameLocations": [
											"40176:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1564,
										"src": "40176:7:0"
									},
									"id": 1922,
									"nodeType": "InheritanceSpecifier",
									"src": "40176:7:0"
								},
								{
									"baseName": {
										"id": 1923,
										"name": "ERC165",
										"nameLocations": [
											"40185:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1759,
										"src": "40185:6:0"
									},
									"id": 1924,
									"nodeType": "InheritanceSpecifier",
									"src": "40185:6:0"
								},
								{
									"baseName": {
										"id": 1925,
										"name": "IERC721",
										"nameLocations": [
											"40193:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "40193:7:0"
									},
									"id": 1926,
									"nodeType": "InheritanceSpecifier",
									"src": "40193:7:0"
								},
								{
									"baseName": {
										"id": 1927,
										"name": "IERC721Metadata",
										"nameLocations": [
											"40202:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1918,
										"src": "40202:15:0"
									},
									"id": 1928,
									"nodeType": "InheritanceSpecifier",
									"src": "40202:15:0"
								},
								{
									"baseName": {
										"id": 1929,
										"name": "IERC721Errors",
										"nameLocations": [
											"40219:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "40219:13:0"
									},
									"id": 1930,
									"nodeType": "InheritanceSpecifier",
									"src": "40219:13:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1920,
								"nodeType": "StructuredDocumentation",
								"src": "39901:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 2911,
							"linearizedBaseContracts": [
								2911,
								89,
								1918,
								1873,
								1759,
								1737,
								1564
							],
							"name": "ERC721",
							"nameLocation": "40166:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1933,
									"libraryName": {
										"id": 1931,
										"name": "Strings",
										"nameLocations": [
											"40245:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1543,
										"src": "40245:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "40239:26:0",
									"typeName": {
										"id": 1932,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "40257:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1935,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "40304:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2911,
									"src": "40289:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1934,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "40289:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1937,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "40351:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2911,
									"src": "40336:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1936,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "40336:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1941,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "40409:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2911,
									"src": "40365:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1940,
										"keyName": "tokenId",
										"keyNameLocation": "40381:7:0",
										"keyType": {
											"id": 1938,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "40373:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "40365:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1939,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "40392:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1945,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "40465:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2911,
									"src": "40423:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1944,
										"keyName": "owner",
										"keyNameLocation": "40439:5:0",
										"keyType": {
											"id": 1942,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "40431:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "40423:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1943,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "40448:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1949,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "40525:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2911,
									"src": "40481:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1948,
										"keyName": "tokenId",
										"keyNameLocation": "40497:7:0",
										"keyType": {
											"id": 1946,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "40489:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "40481:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1947,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "40508:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1955,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "40615:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2911,
									"src": "40547:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1954,
										"keyName": "owner",
										"keyNameLocation": "40563:5:0",
										"keyType": {
											"id": 1950,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "40555:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "40547:59:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1953,
											"keyName": "operator",
											"keyNameLocation": "40588:8:0",
											"keyType": {
												"id": 1951,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "40580:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "40572:33:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1952,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "40600:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1971,
										"nodeType": "Block",
										"src": "40809:57:0",
										"statements": [
											{
												"expression": {
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1963,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "40819:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1964,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "40827:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "40819:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1966,
												"nodeType": "ExpressionStatement",
												"src": "40819:13:0"
											},
											{
												"expression": {
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1967,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1937,
														"src": "40842:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1968,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "40852:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "40842:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1970,
												"nodeType": "ExpressionStatement",
												"src": "40842:17:0"
											}
										]
									},
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "40640:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 1972,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "40779:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "40765:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1957,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "40800:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "40786:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1959,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40786:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40764:44:0"
									},
									"returnParameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40809:0:0"
									},
									"scope": 2911,
									"src": "40753:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1736,
										1758
									],
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "41041:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1983,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1975,
																"src": "41070:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1985,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1873,
																			"src": "41090:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1873_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1873_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1984,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "41085:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41085:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1873",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "41099:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "41085:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "41070:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1989,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1975,
																"src": "41126:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1991,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1918,
																			"src": "41146:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1918_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1918_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1990,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "41141:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41141:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1918",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "41163:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "41141:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "41126:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "41070:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1998,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1975,
																"src": "41214:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1996,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "41190:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$2911_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41196:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1758,
															"src": "41190:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41190:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "41070:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1982,
												"id": 2001,
												"nodeType": "Return",
												"src": "41051:175:0"
											}
										]
									},
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "40872:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "40942:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1979,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1977,
												"name": "ERC165",
												"nameLocations": [
													"41009:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1759,
												"src": "41009:6:0"
											},
											{
												"id": 1978,
												"name": "IERC165",
												"nameLocations": [
													"41017:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1737,
												"src": "41017:7:0"
											}
										],
										"src": "41000:25:0"
									},
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "40967:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "40960:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "40960:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40959:20:0"
									},
									"returnParameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "41035:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1980,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41035:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41034:6:0"
									},
									"scope": 2911,
									"src": "40933:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1798
									],
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "41364:136:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2011,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "41378:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "41395:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "41387:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2012,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "41387:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41387:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "41378:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2025,
												"nodeType": "IfStatement",
												"src": "41374:87:0",
												"trueBody": {
													"id": 2024,
													"nodeType": "Block",
													"src": "41399:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "41447:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "41439:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2018,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "41439:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41439:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2017,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "41420:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41420:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2023,
															"nodeType": "RevertStatement",
															"src": "41413:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2026,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1945,
														"src": "41477:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2028,
													"indexExpression": {
														"id": 2027,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "41487:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "41477:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2010,
												"id": 2029,
												"nodeType": "Return",
												"src": "41470:23:0"
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "41239:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "41301:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "41319:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "41311:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41310:15:0"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "41355:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41354:9:0"
									},
									"scope": 2911,
									"src": "41292:208:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1806
									],
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "41629:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2040,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "41660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2039,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2846,
														"src": "41646:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41646:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2038,
												"id": 2042,
												"nodeType": "Return",
												"src": "41639:29:0"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "41506:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "41566:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "41574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41573:17:0"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "41620:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41619:9:0"
									},
									"scope": 2911,
									"src": "41557:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1903
									],
									"body": {
										"id": 2052,
										"nodeType": "Block",
										"src": "41797:29:0",
										"statements": [
											{
												"expression": {
													"id": 2050,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1935,
													"src": "41814:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2049,
												"id": 2051,
												"nodeType": "Return",
												"src": "41807:12:0"
											}
										]
									},
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "41681:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 2053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "41746:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41750:2:0"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "41782:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2047,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41782:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41781:15:0"
									},
									"scope": 2911,
									"src": "41737:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1909
									],
									"body": {
										"id": 2061,
										"nodeType": "Block",
										"src": "41952:31:0",
										"statements": [
											{
												"expression": {
													"id": 2059,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1937,
													"src": "41969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2058,
												"id": 2060,
												"nodeType": "Return",
												"src": "41962:14:0"
											}
										]
									},
									"documentation": {
										"id": 2054,
										"nodeType": "StructuredDocumentation",
										"src": "41832:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 2062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "41899:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41905:2:0"
									},
									"returnParameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2062,
												"src": "41937:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2056,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41937:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41936:15:0"
									},
									"scope": 2911,
									"src": "41890:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1917
									],
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "42128:176:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2071,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "42152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2070,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2846,
														"src": "42138:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42138:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2073,
												"nodeType": "ExpressionStatement",
												"src": "42138:22:0"
											},
											{
												"assignments": [
													2075
												],
												"declarations": [
													{
														"constant": false,
														"id": 2075,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "42185:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2097,
														"src": "42171:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2074,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "42171:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2078,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2076,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2107,
														"src": "42195:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42195:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42171:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2081,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2075,
																		"src": "42228:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "42222:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2079,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "42222:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42222:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "42237:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "42222:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42246:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "42222:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42295:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "42222:75:0",
													"trueExpression": {
														"arguments": [
															{
																"id": 2089,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2075,
																"src": "42264:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2090,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2065,
																		"src": "42273:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "42281:8:0",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1356,
																	"src": "42273:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42273:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 2087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42250:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 2086,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "42250:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "42257:6:0",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "42250:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42250:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2069,
												"id": 2096,
												"nodeType": "Return",
												"src": "42215:82:0"
											}
										]
									},
									"documentation": {
										"id": 2063,
										"nodeType": "StructuredDocumentation",
										"src": "41989:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "42058:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42075:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "42067:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42066:17:0"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "42113:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2067,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42113:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42112:15:0"
									},
									"scope": 2911,
									"src": "42049:255:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2106,
										"nodeType": "Block",
										"src": "42612:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "42629:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2103,
												"id": 2105,
												"nodeType": "Return",
												"src": "42622:9:0"
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "42310:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 2107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "42555:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42563:2:0"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "42597:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2101,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42597:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42596:15:0"
									},
									"scope": 2911,
									"src": "42546:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1846
									],
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "42756:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "42775:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2117,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2112,
															"src": "42779:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2118,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "42788:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42788:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2115,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2714,
															2780
														],
														"referencedDeclaration": 2714,
														"src": "42766:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42766:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "42766:35:0"
											}
										]
									},
									"documentation": {
										"id": 2108,
										"nodeType": "StructuredDocumentation",
										"src": "42644:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 2123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "42704:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42720:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "42712:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42732:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "42724:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42711:29:0"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42756:0:0"
									},
									"scope": 2911,
									"src": "42695:113:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1862
									],
									"body": {
										"id": 2139,
										"nodeType": "Block",
										"src": "42945:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2132,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "42969:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2131,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2846,
														"src": "42955:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42955:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2134,
												"nodeType": "ExpressionStatement",
												"src": "42955:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2136,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "43008:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2135,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2289,
														"src": "42995:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42995:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2130,
												"id": 2138,
												"nodeType": "Return",
												"src": "42988:28:0"
											}
										]
									},
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "42814:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 2140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "42878:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42898:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "42890:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42889:17:0"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "42936:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42935:9:0"
									},
									"scope": 2911,
									"src": "42869:154:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1854
									],
									"body": {
										"id": 2155,
										"nodeType": "Block",
										"src": "43165:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2149,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "43194:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43194:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2151,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "43208:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2152,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "43218:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2148,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2817,
														"src": "43175:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43175:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2154,
												"nodeType": "ExpressionStatement",
												"src": "43175:52:0"
											}
										]
									},
									"documentation": {
										"id": 2141,
										"nodeType": "StructuredDocumentation",
										"src": "43029:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 2156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "43099:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "43125:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "43117:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "43140:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "43135:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "43135:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43116:33:0"
									},
									"returnParameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43165:0:0"
									},
									"scope": 2911,
									"src": "43090:144:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1872
									],
									"body": {
										"id": 2172,
										"nodeType": "Block",
										"src": "43394:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2166,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1955,
															"src": "43411:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2168,
														"indexExpression": {
															"id": 2167,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "43430:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "43411:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2170,
													"indexExpression": {
														"id": 2169,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2161,
														"src": "43437:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "43411:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2165,
												"id": 2171,
												"nodeType": "Return",
												"src": "43404:42:0"
											}
										]
									},
									"documentation": {
										"id": 2157,
										"nodeType": "StructuredDocumentation",
										"src": "43240:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "43309:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "43334:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "43326:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "43349:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "43341:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43325:33:0"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "43388:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "43388:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43387:6:0"
									},
									"scope": 2911,
									"src": "43300:153:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1838
									],
									"body": {
										"id": 2218,
										"nodeType": "Block",
										"src": "43595:498:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2183,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2178,
														"src": "43609:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43623:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "43615:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2184,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "43615:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "43615:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "43609:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2197,
												"nodeType": "IfStatement",
												"src": "43605:87:0",
												"trueBody": {
													"id": 2196,
													"nodeType": "Block",
													"src": "43627:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "43678:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "43670:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2190,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "43670:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43670:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2189,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "43648:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43648:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2195,
															"nodeType": "RevertStatement",
															"src": "43641:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2199
												],
												"declarations": [
													{
														"constant": false,
														"id": 2199,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "43918:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2218,
														"src": "43910:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2198,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "43910:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2206,
												"initialValue": {
													"arguments": [
														{
															"id": 2201,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2178,
															"src": "43942:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2202,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "43946:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2203,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "43955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2200,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2468,
														"src": "43934:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43934:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43910:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2207,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2199,
														"src": "43982:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2208,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2176,
														"src": "43999:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "43982:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2217,
												"nodeType": "IfStatement",
												"src": "43978:109:0",
												"trueBody": {
													"id": 2216,
													"nodeType": "Block",
													"src": "44005:82:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2211,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2176,
																		"src": "44047:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2212,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2180,
																		"src": "44053:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2213,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2199,
																		"src": "44062:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2210,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "44026:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44026:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2215,
															"nodeType": "RevertStatement",
															"src": "44019:57:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2174,
										"nodeType": "StructuredDocumentation",
										"src": "43459:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 2219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "43524:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43545:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "43537:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43537:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43559:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "43551:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43571:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "43563:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43536:43:0"
									},
									"returnParameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43595:0:0"
									},
									"scope": 2911,
									"src": "43515:578:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1828
									],
									"body": {
										"id": 2236,
										"nodeType": "Block",
										"src": "44235:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2230,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2222,
															"src": "44262:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2231,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "44268:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2232,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2226,
															"src": "44272:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44281:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2229,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2237,
															2263
														],
														"referencedDeclaration": 2263,
														"src": "44245:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44245:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2235,
												"nodeType": "ExpressionStatement",
												"src": "44245:39:0"
											}
										]
									},
									"documentation": {
										"id": 2220,
										"nodeType": "StructuredDocumentation",
										"src": "44099:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 2237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "44168:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "44193:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "44185:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "44207:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "44199:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44219:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "44211:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44184:43:0"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44235:0:0"
									},
									"scope": 2911,
									"src": "44159:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1818
									],
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "44460:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2250,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "44483:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2251,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "44489:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2252,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "44493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2249,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "44470:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44470:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2254,
												"nodeType": "ExpressionStatement",
												"src": "44470:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2256,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "44534:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2257,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "44540:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2258,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "44544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2259,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2246,
															"src": "44553:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2255,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2910,
														"src": "44511:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44511:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2261,
												"nodeType": "ExpressionStatement",
												"src": "44511:47:0"
											}
										]
									},
									"documentation": {
										"id": 2238,
										"nodeType": "StructuredDocumentation",
										"src": "44297:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "44366:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "44391:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "44383:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "44405:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "44397:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44417:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "44409:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "44439:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "44426:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44426:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44382:62:0"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44460:0:0"
									},
									"scope": 2911,
									"src": "44357:208:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "45154:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2271,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "45171:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2273,
													"indexExpression": {
														"id": 2272,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2266,
														"src": "45179:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "45171:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2270,
												"id": 2274,
												"nodeType": "Return",
												"src": "45164:23:0"
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "44571:503:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 2276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "45088:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45105:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "45097:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45096:17:0"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "45145:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45144:9:0"
									},
									"scope": 2911,
									"src": "45079:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2288,
										"nodeType": "Block",
										"src": "45389:48:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2284,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "45406:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2286,
													"indexExpression": {
														"id": 2285,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2279,
														"src": "45422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "45406:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2283,
												"id": 2287,
												"nodeType": "Return",
												"src": "45399:31:0"
											}
										]
									},
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "45200:105:0",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 2289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "45319:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45340:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "45332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45331:17:0"
									},
									"returnParameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "45380:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45379:9:0"
									},
									"scope": 2911,
									"src": "45310:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2324,
										"nodeType": "Block",
										"src": "45857:163:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2301,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "45886:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45905:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45897:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2302,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45897:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45897:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "45886:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2307,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2292,
																			"src": "45924:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2308,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "45933:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "45924:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2311,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2292,
																				"src": "45961:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2312,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2294,
																				"src": "45968:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2310,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2173,
																			"src": "45944:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45944:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "45924:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2316,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2296,
																				"src": "45993:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2315,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2289,
																			"src": "45980:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45980:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2318,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2294,
																		"src": "46005:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "45980:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "45924:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2321,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "45923:90:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "45886:127:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2300,
												"id": 2323,
												"nodeType": "Return",
												"src": "45867:146:0"
											}
										]
									},
									"documentation": {
										"id": 2290,
										"nodeType": "StructuredDocumentation",
										"src": "45443:300:0",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "45757:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "45779:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "45771:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "45794:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "45786:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45811:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "45803:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45770:49:0"
									},
									"returnParameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "45851:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45851:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45850:6:0"
									},
									"scope": 2911,
									"src": "45748:272:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2361,
										"nodeType": "Block",
										"src": "46551:271:0",
										"statements": [
											{
												"condition": {
													"id": 2340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "46565:39:0",
													"subExpression": {
														"arguments": [
															{
																"id": 2336,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2328,
																"src": "46580:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2337,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2330,
																"src": "46587:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2338,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "46596:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2335,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "46566:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 2339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46566:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2360,
												"nodeType": "IfStatement",
												"src": "46561:255:0",
												"trueBody": {
													"id": 2359,
													"nodeType": "Block",
													"src": "46606:210:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2341,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "46624:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "46641:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "46633:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2342,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "46633:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "46633:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "46624:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2357,
																"nodeType": "Block",
																"src": "46722:84:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2353,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2330,
																					"src": "46774:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2354,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2332,
																					"src": "46783:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2352,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "46747:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 2355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "46747:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2356,
																		"nodeType": "RevertStatement",
																		"src": "46740:51:0"
																	}
																]
															},
															"id": 2358,
															"nodeType": "IfStatement",
															"src": "46620:186:0",
															"trueBody": {
																"id": 2351,
																"nodeType": "Block",
																"src": "46645:71:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2348,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2332,
																					"src": "46693:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2347,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "46670:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "46670:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2350,
																		"nodeType": "RevertStatement",
																		"src": "46663:38:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2326,
										"nodeType": "StructuredDocumentation",
										"src": "46026:423:0",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "46463:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "46488:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "46480:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "46503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "46495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46520:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "46512:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46479:49:0"
									},
									"returnParameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46551:0:0"
									},
									"scope": 2911,
									"src": "46454:368:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2377,
										"nodeType": "Block",
										"src": "47539:78:0",
										"statements": [
											{
												"id": 2376,
												"nodeType": "UncheckedBlock",
												"src": "47549:62:0",
												"statements": [
													{
														"expression": {
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2370,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1945,
																	"src": "47573:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2372,
																"indexExpression": {
																	"id": 2371,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2365,
																	"src": "47583:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "47573:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2373,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "47595:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "47573:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2375,
														"nodeType": "ExpressionStatement",
														"src": "47573:27:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2363,
										"nodeType": "StructuredDocumentation",
										"src": "46828:631:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 2378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "47473:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "47498:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "47490:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "47515:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "47507:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2366,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "47507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47489:32:0"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47539:0:0"
									},
									"scope": 2911,
									"src": "47464:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2467,
										"nodeType": "Block",
										"src": "48305:700:0",
										"statements": [
											{
												"assignments": [
													2391
												],
												"declarations": [
													{
														"constant": false,
														"id": 2391,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "48323:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2467,
														"src": "48315:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2390,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "48315:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2395,
												"initialValue": {
													"arguments": [
														{
															"id": 2393,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2383,
															"src": "48339:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2392,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2276,
														"src": "48330:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48330:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48315:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2396,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2385,
														"src": "48407:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48423:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "48415:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2397,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "48415:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48415:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48407:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2409,
												"nodeType": "IfStatement",
												"src": "48403:86:0",
												"trueBody": {
													"id": 2408,
													"nodeType": "Block",
													"src": "48427:62:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2403,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2391,
																		"src": "48458:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2404,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2385,
																		"src": "48464:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2405,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2383,
																		"src": "48470:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2402,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "48441:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48441:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2407,
															"nodeType": "ExpressionStatement",
															"src": "48441:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2410,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2391,
														"src": "48533:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48549:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "48541:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2411,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "48541:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48541:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48533:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2437,
												"nodeType": "IfStatement",
												"src": "48529:256:0",
												"trueBody": {
													"id": 2436,
													"nodeType": "Block",
													"src": "48553:232:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "48666:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "48658:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2417,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "48658:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48658:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2421,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2383,
																		"src": "48670:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "48687:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "48679:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2422,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "48679:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48679:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 2426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "48691:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2416,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2714,
																		2780
																	],
																	"referencedDeclaration": 2780,
																	"src": "48649:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48649:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2428,
															"nodeType": "ExpressionStatement",
															"src": "48649:48:0"
														},
														{
															"id": 2435,
															"nodeType": "UncheckedBlock",
															"src": "48712:63:0",
															"statements": [
																{
																	"expression": {
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2429,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1945,
																				"src": "48740:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2431,
																			"indexExpression": {
																				"id": 2430,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2391,
																				"src": "48750:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "48740:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48759:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "48740:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2434,
																	"nodeType": "ExpressionStatement",
																	"src": "48740:20:0"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2438,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "48799:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48813:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "48805:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2439,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "48805:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48805:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48799:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2452,
												"nodeType": "IfStatement",
												"src": "48795:107:0",
												"trueBody": {
													"id": 2451,
													"nodeType": "Block",
													"src": "48817:85:0",
													"statements": [
														{
															"id": 2450,
															"nodeType": "UncheckedBlock",
															"src": "48831:61:0",
															"statements": [
																{
																	"expression": {
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2444,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1945,
																				"src": "48859:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2446,
																			"indexExpression": {
																				"id": 2445,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2381,
																				"src": "48869:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "48859:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48876:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "48859:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2449,
																	"nodeType": "ExpressionStatement",
																	"src": "48859:18:0"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 2457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2453,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "48912:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2455,
														"indexExpression": {
															"id": 2454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2383,
															"src": "48920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "48912:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2456,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "48931:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48912:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2458,
												"nodeType": "ExpressionStatement",
												"src": "48912:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2460,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2391,
															"src": "48958:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2461,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "48964:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2462,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2383,
															"src": "48968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2459,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "48949:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48949:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2464,
												"nodeType": "EmitStatement",
												"src": "48944:32:0"
											},
											{
												"expression": {
													"id": 2465,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2391,
													"src": "48994:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2389,
												"id": 2466,
												"nodeType": "Return",
												"src": "48987:11:0"
											}
										]
									},
									"documentation": {
										"id": 2379,
										"nodeType": "StructuredDocumentation",
										"src": "47623:582:0",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 2468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "48219:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48235:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "48227:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48247:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "48239:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "48264:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "48256:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48256:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48226:43:0"
									},
									"returnParameters": {
										"id": 2389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "48296:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48296:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48295:9:0"
									},
									"scope": 2911,
									"src": "48210:795:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2517,
										"nodeType": "Block",
										"src": "49380:274:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2476,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "49394:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49408:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "49400:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2477,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "49400:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "49400:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "49394:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2490,
												"nodeType": "IfStatement",
												"src": "49390:87:0",
												"trueBody": {
													"id": 2489,
													"nodeType": "Block",
													"src": "49412:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2485,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49463:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "49455:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2483,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "49455:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "49455:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2482,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "49433:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49433:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2488,
															"nodeType": "RevertStatement",
															"src": "49426:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2492
												],
												"declarations": [
													{
														"constant": false,
														"id": 2492,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "49494:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2517,
														"src": "49486:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2491,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "49486:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2501,
												"initialValue": {
													"arguments": [
														{
															"id": 2494,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2471,
															"src": "49518:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2495,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2473,
															"src": "49522:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49539:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49531:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2496,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49531:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49531:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2493,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2468,
														"src": "49510:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49510:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49486:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2502,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2492,
														"src": "49556:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49581:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "49573:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2503,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "49573:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "49573:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "49556:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2516,
												"nodeType": "IfStatement",
												"src": "49552:96:0",
												"trueBody": {
													"id": 2515,
													"nodeType": "Block",
													"src": "49585:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2511,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49634:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "49626:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2509,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "49626:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "49626:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2508,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "49606:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49606:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2514,
															"nodeType": "RevertStatement",
															"src": "49599:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2469,
										"nodeType": "StructuredDocumentation",
										"src": "49011:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 2518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "49336:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49350:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "49342:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49362:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "49354:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49341:29:0"
									},
									"returnParameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49380:0:0"
									},
									"scope": 2911,
									"src": "49327:327:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2532,
										"nodeType": "Block",
										"src": "50062:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2527,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2521,
															"src": "50082:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2528,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2523,
															"src": "50086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50095:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2526,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2533,
															2559
														],
														"referencedDeclaration": 2559,
														"src": "50072:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50072:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2531,
												"nodeType": "ExpressionStatement",
												"src": "50072:26:0"
											}
										]
									},
									"documentation": {
										"id": 2519,
										"nodeType": "StructuredDocumentation",
										"src": "49660:340:0",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "50014:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "50032:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "50024:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50044:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "50036:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50023:29:0"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50062:0:0"
									},
									"scope": 2911,
									"src": "50005:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2558,
										"nodeType": "Block",
										"src": "50410:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2544,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2536,
															"src": "50426:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2545,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2538,
															"src": "50430:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2543,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2518,
														"src": "50420:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50420:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2547,
												"nodeType": "ExpressionStatement",
												"src": "50420:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50479:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50471:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2549,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50471:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50471:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2553,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2536,
															"src": "50483:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2554,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2538,
															"src": "50487:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2555,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2540,
															"src": "50496:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2548,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2910,
														"src": "50448:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50448:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2557,
												"nodeType": "ExpressionStatement",
												"src": "50448:53:0"
											}
										]
									},
									"documentation": {
										"id": 2534,
										"nodeType": "StructuredDocumentation",
										"src": "50111:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "50335:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "50353:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "50345:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50365:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "50357:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "50387:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "50374:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "50374:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50344:48:0"
									},
									"returnParameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50410:0:0"
									},
									"scope": 2911,
									"src": "50326:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2591,
										"nodeType": "Block",
										"src": "50875:186:0",
										"statements": [
											{
												"assignments": [
													2566
												],
												"declarations": [
													{
														"constant": false,
														"id": 2566,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "50893:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2591,
														"src": "50885:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2565,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "50885:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2578,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50917:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2568,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50917:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50917:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2572,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2562,
															"src": "50929:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50946:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50938:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2573,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50938:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50938:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2567,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2468,
														"src": "50909:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50909:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50885:64:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2579,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2566,
														"src": "50963:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50988:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2580,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50980:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50980:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50963:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2590,
												"nodeType": "IfStatement",
												"src": "50959:96:0",
												"trueBody": {
													"id": 2589,
													"nodeType": "Block",
													"src": "50992:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2586,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2562,
																		"src": "51036:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2585,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "51013:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51013:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2588,
															"nodeType": "RevertStatement",
															"src": "51006:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2560,
										"nodeType": "StructuredDocumentation",
										"src": "50514:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "50843:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50857:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2592,
												"src": "50849:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50848:17:0"
									},
									"returnParameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50875:0:0"
									},
									"scope": 2911,
									"src": "50834:227:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2651,
										"nodeType": "Block",
										"src": "51456:389:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2602,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2597,
														"src": "51470:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51484:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2603,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "51476:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51476:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "51470:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2616,
												"nodeType": "IfStatement",
												"src": "51466:87:0",
												"trueBody": {
													"id": 2615,
													"nodeType": "Block",
													"src": "51488:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2611,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "51539:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "51531:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2609,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "51531:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "51531:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2608,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "51509:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51509:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2614,
															"nodeType": "RevertStatement",
															"src": "51502:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2618
												],
												"declarations": [
													{
														"constant": false,
														"id": 2618,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "51570:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2651,
														"src": "51562:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2617,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "51562:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2627,
												"initialValue": {
													"arguments": [
														{
															"id": 2620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2597,
															"src": "51594:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2621,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2599,
															"src": "51598:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51615:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "51607:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2622,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "51607:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51607:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2619,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2468,
														"src": "51586:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51586:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51562:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2628,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2618,
														"src": "51632:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51657:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51649:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2629,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "51649:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51649:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "51632:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2639,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2618,
															"src": "51734:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2640,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2595,
															"src": "51751:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "51734:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2649,
													"nodeType": "IfStatement",
													"src": "51730:109:0",
													"trueBody": {
														"id": 2648,
														"nodeType": "Block",
														"src": "51757:82:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 2643,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2595,
																			"src": "51799:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2644,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2599,
																			"src": "51805:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2645,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2618,
																			"src": "51814:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2642,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "51778:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 2646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "51778:50:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2647,
																"nodeType": "RevertStatement",
																"src": "51771:57:0"
															}
														]
													}
												},
												"id": 2650,
												"nodeType": "IfStatement",
												"src": "51628:211:0",
												"trueBody": {
													"id": 2638,
													"nodeType": "Block",
													"src": "51661:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2635,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2599,
																		"src": "51705:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2634,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "51682:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51682:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2637,
															"nodeType": "RevertStatement",
															"src": "51675:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2593,
										"nodeType": "StructuredDocumentation",
										"src": "51067:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "51394:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "51412:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2652,
												"src": "51404:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51426:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2652,
												"src": "51418:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "51438:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2652,
												"src": "51430:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51403:43:0"
									},
									"returnParameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51456:0:0"
									},
									"scope": 2911,
									"src": "51385:460:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2669,
										"nodeType": "Block",
										"src": "52853:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2663,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2655,
															"src": "52877:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2664,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "52883:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2665,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2659,
															"src": "52887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52896:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2662,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2670,
															2696
														],
														"referencedDeclaration": 2696,
														"src": "52863:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52863:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2668,
												"nodeType": "ExpressionStatement",
												"src": "52863:36:0"
											}
										]
									},
									"documentation": {
										"id": 2653,
										"nodeType": "StructuredDocumentation",
										"src": "51851:922:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "52787:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "52809:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "52801:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52801:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52823:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "52815:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52815:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52835:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "52827:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52800:43:0"
									},
									"returnParameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52853:0:0"
									},
									"scope": 2911,
									"src": "52778:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2695,
										"nodeType": "Block",
										"src": "53245:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2683,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2673,
															"src": "53265:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2684,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "53271:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2685,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2677,
															"src": "53275:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2682,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2652,
														"src": "53255:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53255:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2687,
												"nodeType": "ExpressionStatement",
												"src": "53255:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2689,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2673,
															"src": "53316:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2690,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "53322:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2691,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2677,
															"src": "53326:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2692,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2679,
															"src": "53335:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2688,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2910,
														"src": "53293:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53293:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2694,
												"nodeType": "ExpressionStatement",
												"src": "53293:47:0"
											}
										]
									},
									"documentation": {
										"id": 2671,
										"nodeType": "StructuredDocumentation",
										"src": "52912:226:0",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "53152:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "53174:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "53166:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "53188:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "53180:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "53200:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "53192:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53192:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "53222:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "53209:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "53209:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53165:62:0"
									},
									"returnParameters": {
										"id": 2681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53245:0:0"
									},
									"scope": 2911,
									"src": "53143:204:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2713,
										"nodeType": "Block",
										"src": "53860:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2707,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "53879:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2708,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2701,
															"src": "53883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2709,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2703,
															"src": "53892:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53898:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2706,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2714,
															2780
														],
														"referencedDeclaration": 2780,
														"src": "53870:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53870:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2712,
												"nodeType": "ExpressionStatement",
												"src": "53870:33:0"
											}
										]
									},
									"documentation": {
										"id": 2697,
										"nodeType": "StructuredDocumentation",
										"src": "53353:432:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 2714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "53799:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "53816:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "53808:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53808:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "53828:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "53820:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "53845:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2714,
												"src": "53837:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53837:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53807:43:0"
									},
									"returnParameters": {
										"id": 2705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53860:0:0"
									},
									"scope": 2911,
									"src": "53790:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2779,
										"nodeType": "Block",
										"src": "54186:568:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2726,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2723,
														"src": "54252:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2727,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2721,
															"src": "54265:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54281:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "54273:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2728,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "54273:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54273:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "54265:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "54252:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2772,
												"nodeType": "IfStatement",
												"src": "54248:460:0",
												"trueBody": {
													"id": 2771,
													"nodeType": "Block",
													"src": "54285:423:0",
													"statements": [
														{
															"assignments": [
																2735
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2735,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "54307:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2771,
																	"src": "54299:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2734,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "54299:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2739,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2737,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2719,
																		"src": "54329:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2736,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2846,
																	"src": "54315:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54315:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "54299:38:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2740,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2721,
																			"src": "54465:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2743,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "54481:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "54473:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2741,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "54473:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "54473:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "54465:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2746,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2735,
																			"src": "54487:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2747,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2721,
																			"src": "54496:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "54487:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "54465:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "54504:30:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 2751,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2735,
																				"src": "54522:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2752,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2721,
																				"src": "54529:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2750,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2173,
																			"src": "54505:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54505:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "54465:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2761,
															"nodeType": "IfStatement",
															"src": "54461:142:0",
															"trueBody": {
																"id": 2760,
																"nodeType": "Block",
																"src": "54536:67:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2757,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2721,
																					"src": "54583:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2756,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "54561:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 2758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "54561:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2759,
																		"nodeType": "RevertStatement",
																		"src": "54554:34:0"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 2762,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2723,
																"src": "54621:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2770,
															"nodeType": "IfStatement",
															"src": "54617:81:0",
															"trueBody": {
																"id": 2769,
																"nodeType": "Block",
																"src": "54632:66:0",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 2764,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2735,
																					"src": "54664:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2765,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2717,
																					"src": "54671:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2766,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2719,
																					"src": "54675:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2763,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1781,
																				"src": "54655:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "54655:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2768,
																		"nodeType": "EmitStatement",
																		"src": "54650:33:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2773,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "54718:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2775,
														"indexExpression": {
															"id": 2774,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2719,
															"src": "54734:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "54718:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2776,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2717,
														"src": "54745:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54718:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2778,
												"nodeType": "ExpressionStatement",
												"src": "54718:29:0"
											}
										]
									},
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "53916:171:0",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 2780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "54101:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "54118:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "54110:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54130:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "54122:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "54147:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "54139:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "54158:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2780,
												"src": "54153:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2722,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54153:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54109:59:0"
									},
									"returnParameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54186:0:0"
									},
									"scope": 2911,
									"src": "54092:662:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2816,
										"nodeType": "Block",
										"src": "55056:219:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2790,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2785,
														"src": "55070:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55090:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "55082:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2791,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "55082:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55082:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "55070:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2801,
												"nodeType": "IfStatement",
												"src": "55066:91:0",
												"trueBody": {
													"id": 2800,
													"nodeType": "Block",
													"src": "55094:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2797,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2785,
																		"src": "55137:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2796,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "55115:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55115:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2799,
															"nodeType": "RevertStatement",
															"src": "55108:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2802,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1955,
																"src": "55166:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2805,
															"indexExpression": {
																"id": 2803,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2783,
																"src": "55185:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "55166:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2806,
														"indexExpression": {
															"id": 2804,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2785,
															"src": "55192:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "55166:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2807,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2787,
														"src": "55204:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "55166:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2809,
												"nodeType": "ExpressionStatement",
												"src": "55166:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2811,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2783,
															"src": "55242:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2812,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2785,
															"src": "55249:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2813,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2787,
															"src": "55259:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2810,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "55227:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55227:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2815,
												"nodeType": "EmitStatement",
												"src": "55222:46:0"
											}
										]
									},
									"documentation": {
										"id": 2781,
										"nodeType": "StructuredDocumentation",
										"src": "54760:198:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 2817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "54972:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "54999:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "54991:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "55014:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "55006:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55006:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "55029:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "55024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "55024:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54990:48:0"
									},
									"returnParameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55056:0:0"
									},
									"scope": 2911,
									"src": "54963:312:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2845,
										"nodeType": "Block",
										"src": "55582:169:0",
										"statements": [
											{
												"assignments": [
													2826
												],
												"declarations": [
													{
														"constant": false,
														"id": 2826,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "55600:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2845,
														"src": "55592:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2825,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "55592:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2830,
												"initialValue": {
													"arguments": [
														{
															"id": 2828,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2820,
															"src": "55617:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2827,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2276,
														"src": "55608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55608:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55592:33:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2831,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2826,
														"src": "55639:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55656:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "55648:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2832,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "55648:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55648:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "55639:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2842,
												"nodeType": "IfStatement",
												"src": "55635:88:0",
												"trueBody": {
													"id": 2841,
													"nodeType": "Block",
													"src": "55660:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2838,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2820,
																		"src": "55704:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2837,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "55681:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55681:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2840,
															"nodeType": "RevertStatement",
															"src": "55674:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2843,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2826,
													"src": "55739:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2824,
												"id": 2844,
												"nodeType": "Return",
												"src": "55732:12:0"
											}
										]
									},
									"documentation": {
										"id": 2818,
										"nodeType": "StructuredDocumentation",
										"src": "55281:224:0",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 2846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "55519:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "55541:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "55533:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55532:17:0"
									},
									"returnParameters": {
										"id": 2824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "55573:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55572:9:0"
									},
									"scope": 2911,
									"src": "55510:241:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2909,
										"nodeType": "Block",
										"src": "56392:680:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2858,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2851,
																"src": "56406:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56409:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "56406:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "56414:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "56406:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56423:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56406:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2908,
												"nodeType": "IfStatement",
												"src": "56402:664:0",
												"trueBody": {
													"id": 2907,
													"nodeType": "Block",
													"src": "56426:640:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2887,
																		"nodeType": "Block",
																		"src": "56540:162:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2880,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2876,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2874,
																						"src": "56562:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2877,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1726,
																								"src": "56572:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1726_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 2878,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "56588:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1725,
																							"src": "56572:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2879,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "56605:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "56572:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "56562:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2886,
																				"nodeType": "IfStatement",
																				"src": "56558:130:0",
																				"trueBody": {
																					"id": 2885,
																					"nodeType": "Block",
																					"src": "56615:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2882,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2851,
																										"src": "56666:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2881,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "56644:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2883,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "56644:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2884,
																							"nodeType": "RevertStatement",
																							"src": "56637:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2888,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2875,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2874,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "56532:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2888,
																				"src": "56525:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2873,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "56525:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "56524:15:0"
																	},
																	"src": "56516:186:0"
																},
																{
																	"block": {
																		"id": 2904,
																		"nodeType": "Block",
																		"src": "56731:325:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2895,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2892,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2890,
																							"src": "56753:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2893,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "56760:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "56753:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2894,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "56770:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "56753:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2902,
																					"nodeType": "Block",
																					"src": "56852:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "56938:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "56975:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "56979:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "56971:3:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "56971:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "56994:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "56988:5:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "56988:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "56964:6:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "56964:38:0"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "56964:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 2890,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "56979:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2890,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "56994:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2901,
																							"nodeType": "InlineAssembly",
																							"src": "56929:95:0"
																						}
																					]
																				},
																				"id": 2903,
																				"nodeType": "IfStatement",
																				"src": "56749:293:0",
																				"trueBody": {
																					"id": 2900,
																					"nodeType": "Block",
																					"src": "56773:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2897,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2851,
																										"src": "56824:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2896,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "56802:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2898,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "56802:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2899,
																							"nodeType": "RevertStatement",
																							"src": "56795:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2905,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2891,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2890,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "56723:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2905,
																				"src": "56710:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2889,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "56710:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "56709:21:0"
																	},
																	"src": "56703:353:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2867,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "56481:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "56481:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2869,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2849,
																		"src": "56495:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2870,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2853,
																		"src": "56501:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2871,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2855,
																		"src": "56510:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2864,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2851,
																				"src": "56460:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2863,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "56444:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1726_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 2865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "56444:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1726",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 2866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "56464:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1725,
																	"src": "56444:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56444:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2906,
															"nodeType": "TryStatement",
															"src": "56440:616:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2847,
										"nodeType": "StructuredDocumentation",
										"src": "55757:528:0",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 2910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "56299:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "56330:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "56322:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "56344:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "56336:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "56356:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "56348:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "56378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "56365:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2854,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "56365:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56321:62:0"
									},
									"returnParameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56392:0:0"
									},
									"scope": 2911,
									"src": "56290:782:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3135,
							"src": "40148:16926:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1772,
								1781,
								1790
							]
						},
						{
							"id": 2912,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "57254:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2914,
										"name": "Context",
										"nameLocations": [
											"57411:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1564,
										"src": "57411:7:0"
									},
									"id": 2915,
									"nodeType": "InheritanceSpecifier",
									"src": "57411:7:0"
								},
								{
									"baseName": {
										"id": 2916,
										"name": "ERC721",
										"nameLocations": [
											"57420:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2911,
										"src": "57420:6:0"
									},
									"id": 2917,
									"nodeType": "InheritanceSpecifier",
									"src": "57420:6:0"
								}
							],
							"canonicalName": "ERC721Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2913,
								"nodeType": "StructuredDocumentation",
								"src": "57282:92:0",
								"text": " @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."
							},
							"fullyImplemented": true,
							"id": 2935,
							"linearizedBaseContracts": [
								2935,
								2911,
								89,
								1918,
								1873,
								1759,
								1737,
								1564
							],
							"name": "ERC721Burnable",
							"nameLocation": "57393:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2933,
										"nodeType": "Block",
										"src": "57646:268:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "57881:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "57873:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2924,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "57873:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57873:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2928,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2920,
															"src": "57885:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2929,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "57894:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57894:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2923,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2468,
														"src": "57865:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57865:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2932,
												"nodeType": "ExpressionStatement",
												"src": "57865:42:0"
											}
										]
									},
									"documentation": {
										"id": 2918,
										"nodeType": "StructuredDocumentation",
										"src": "57433:162:0",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 2934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "57609:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "57622:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "57614:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57613:17:0"
									},
									"returnParameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57646:0:0"
									},
									"scope": 2935,
									"src": "57600:314:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3135,
							"src": "57375:541:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1772,
								1781,
								1790
							]
						},
						{
							"id": 2936,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "58100:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2938,
										"name": "IERC4906",
										"nameLocations": [
											"58238:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1893,
										"src": "58238:8:0"
									},
									"id": 2939,
									"nodeType": "InheritanceSpecifier",
									"src": "58238:8:0"
								},
								{
									"baseName": {
										"id": 2940,
										"name": "ERC721",
										"nameLocations": [
											"58248:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2911,
										"src": "58248:6:0"
									},
									"id": 2941,
									"nodeType": "InheritanceSpecifier",
									"src": "58248:6:0"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2937,
								"nodeType": "StructuredDocumentation",
								"src": "58130:69:0",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 3052,
							"linearizedBaseContracts": [
								3052,
								2911,
								89,
								1918,
								1893,
								1873,
								1759,
								1737,
								1564
							],
							"name": "ERC721URIStorage",
							"nameLocation": "58218:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2944,
									"libraryName": {
										"id": 2942,
										"name": "Strings",
										"nameLocations": [
											"58267:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1543,
										"src": "58267:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "58261:26:0",
									"typeName": {
										"id": 2943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "58279:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 2950,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "58499:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 3052,
									"src": "58475:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 2945,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "58475:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 2948,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "58529:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 2947,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "58522:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 2946,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "58522:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 2949,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "58522:18:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2954,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "58629:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 3052,
									"src": "58586:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 2953,
										"keyName": "tokenId",
										"keyNameLocation": "58602:7:0",
										"keyType": {
											"id": 2951,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "58594:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "58586:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2952,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "58613:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1736,
										2003
									],
									"body": {
										"id": 2974,
										"nodeType": "Block",
										"src": "58814:99:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2965,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2957,
															"src": "58831:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2966,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2950,
															"src": "58846:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "58831:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2970,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2957,
																"src": "58894:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2968,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "58870:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$3052_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 2969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58876:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2003,
															"src": "58870:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58870:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "58831:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2964,
												"id": 2973,
												"nodeType": "Return",
												"src": "58824:82:0"
											}
										]
									},
									"documentation": {
										"id": 2955,
										"nodeType": "StructuredDocumentation",
										"src": "58646:55:0",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 2975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "58715:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2961,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2959,
												"name": "ERC721",
												"nameLocations": [
													"58782:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2911,
												"src": "58782:6:0"
											},
											{
												"id": 2960,
												"name": "IERC165",
												"nameLocations": [
													"58790:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1737,
												"src": "58790:7:0"
											}
										],
										"src": "58773:25:0"
									},
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "58740:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "58733:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2956,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "58733:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58732:20:0"
									},
									"returnParameters": {
										"id": 2964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "58808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2962,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "58808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58807:6:0"
									},
									"scope": 3052,
									"src": "58706:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2098
									],
									"body": {
										"id": 3031,
										"nodeType": "Block",
										"src": "59067:505:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2985,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2978,
															"src": "59091:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2984,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2846,
														"src": "59077:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59077:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2987,
												"nodeType": "ExpressionStatement",
												"src": "59077:22:0"
											},
											{
												"assignments": [
													2989
												],
												"declarations": [
													{
														"constant": false,
														"id": 2989,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "59124:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 3031,
														"src": "59110:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2988,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "59110:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2993,
												"initialValue": {
													"baseExpression": {
														"id": 2990,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2954,
														"src": "59136:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 2992,
													"indexExpression": {
														"id": 2991,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2978,
														"src": "59147:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "59136:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59110:45:0"
											},
											{
												"assignments": [
													2995
												],
												"declarations": [
													{
														"constant": false,
														"id": 2995,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "59179:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3031,
														"src": "59165:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2994,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "59165:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2998,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2996,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2107,
														"src": "59186:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 2997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59186:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59165:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3001,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2995,
																	"src": "59275:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "59269:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2999,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "59269:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59269:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59281:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "59269:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59291:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "59269:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3009,
												"nodeType": "IfStatement",
												"src": "59265:70:0",
												"trueBody": {
													"id": 3008,
													"nodeType": "Block",
													"src": "59294:41:0",
													"statements": [
														{
															"expression": {
																"id": 3006,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2989,
																"src": "59315:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2983,
															"id": 3007,
															"nodeType": "Return",
															"src": "59308:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3012,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2989,
																	"src": "59440:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "59434:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 3010,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "59434:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59434:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59451:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "59434:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59460:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "59434:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3025,
												"nodeType": "IfStatement",
												"src": "59430:95:0",
												"trueBody": {
													"id": 3024,
													"nodeType": "Block",
													"src": "59463:62:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3020,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2995,
																		"src": "59498:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 3021,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2989,
																		"src": "59504:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 3018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "59484:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 3017,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "59484:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "59491:6:0",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "59484:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 3022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59484:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2983,
															"id": 3023,
															"nodeType": "Return",
															"src": "59477:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3028,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2978,
															"src": "59557:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3026,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "59542:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$3052_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 3027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59548:8:0",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2098,
														"src": "59542:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 3029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59542:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2983,
												"id": 3030,
												"nodeType": "Return",
												"src": "59535:30:0"
											}
										]
									},
									"documentation": {
										"id": 2976,
										"nodeType": "StructuredDocumentation",
										"src": "58919:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 3032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "58988:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2980,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "59034:8:0"
									},
									"parameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "59005:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "58997:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58996:17:0"
									},
									"returnParameters": {
										"id": 2983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "59052:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2981,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "59052:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59051:15:0"
									},
									"scope": 3052,
									"src": "58979:593:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3050,
										"nodeType": "Block",
										"src": "59772:86:0",
										"statements": [
											{
												"expression": {
													"id": 3044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3040,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2954,
															"src": "59782:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 3042,
														"indexExpression": {
															"id": 3041,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3035,
															"src": "59793:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "59782:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3043,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3037,
														"src": "59804:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "59782:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3045,
												"nodeType": "ExpressionStatement",
												"src": "59782:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3047,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3035,
															"src": "59843:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3046,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1885,
														"src": "59828:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59828:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3049,
												"nodeType": "EmitStatement",
												"src": "59823:28:0"
											}
										]
									},
									"documentation": {
										"id": 3033,
										"nodeType": "StructuredDocumentation",
										"src": "59578:108:0",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 3051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "59700:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3035,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "59721:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "59713:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3037,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "59744:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "59730:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3036,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "59730:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59712:42:0"
									},
									"returnParameters": {
										"id": 3039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59772:0:0"
									},
									"scope": 3052,
									"src": "59691:167:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3135,
							"src": "58200:1660:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1772,
								1781,
								1790,
								1885,
								1892
							]
						},
						{
							"id": 3053,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "59897:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3054,
										"name": "ERC721",
										"nameLocations": [
											"59948:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2911,
										"src": "59948:6:0"
									},
									"id": 3055,
									"nodeType": "InheritanceSpecifier",
									"src": "59948:6:0"
								},
								{
									"baseName": {
										"id": 3056,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"59956:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3052,
										"src": "59956:16:0"
									},
									"id": 3057,
									"nodeType": "InheritanceSpecifier",
									"src": "59956:16:0"
								},
								{
									"baseName": {
										"id": 3058,
										"name": "ERC721Burnable",
										"nameLocations": [
											"59974:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2935,
										"src": "59974:14:0"
									},
									"id": 3059,
									"nodeType": "InheritanceSpecifier",
									"src": "59974:14:0"
								},
								{
									"baseName": {
										"id": 3060,
										"name": "Ownable",
										"nameLocations": [
											"59990:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1709,
										"src": "59990:7:0"
									},
									"id": 3061,
									"nodeType": "InheritanceSpecifier",
									"src": "59990:7:0"
								}
							],
							"canonicalName": "SmileNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3134,
							"linearizedBaseContracts": [
								3134,
								1709,
								2935,
								3052,
								2911,
								89,
								1918,
								1893,
								1873,
								1759,
								1737,
								1564
							],
							"name": "SmileNFT",
							"nameLocation": "59936:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3063,
									"mutability": "mutable",
									"name": "_nextTokenId",
									"nameLocation": "60020:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3134,
									"src": "60004:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3062,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "60004:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3075,
										"nodeType": "Block",
										"src": "60143:2:0",
										"statements": []
									},
									"id": 3076,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "536d696c654e4654",
													"id": 3068,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "60088:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_17925d6c4eb8d2c4e2eea7036fe5cb834821a186bbd991d13710a2b3f1489a44",
														"typeString": "literal_string \"SmileNFT\""
													},
													"value": "SmileNFT"
												},
												{
													"hexValue": "534d494c45",
													"id": 3069,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "60100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a72b03cede318b7af0e2d0468801342eddf11af3003560ce19c90ceb503a4236",
														"typeString": "literal_string \"SMILE\""
													},
													"value": "SMILE"
												}
											],
											"id": 3070,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3067,
												"name": "ERC721",
												"nameLocations": [
													"60081:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2911,
												"src": "60081:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60081:27:0"
										},
										{
											"arguments": [
												{
													"id": 3072,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3065,
													"src": "60125:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3073,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3071,
												"name": "Ownable",
												"nameLocations": [
													"60117:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1709,
												"src": "60117:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60117:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3065,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "60059:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 3076,
												"src": "60051:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60050:22:0"
									},
									"returnParameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60143:0:0"
									},
									"scope": 3134,
									"src": "60039:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3100,
										"nodeType": "Block",
										"src": "60217:117:0",
										"statements": [
											{
												"assignments": [
													3086
												],
												"declarations": [
													{
														"constant": false,
														"id": 3086,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "60235:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3100,
														"src": "60227:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3085,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "60227:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3089,
												"initialValue": {
													"id": 3088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "60245:14:0",
													"subExpression": {
														"id": 3087,
														"name": "_nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3063,
														"src": "60245:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60227:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3091,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3078,
															"src": "60279:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3092,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3086,
															"src": "60283:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3090,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2533,
															2559
														],
														"referencedDeclaration": 2533,
														"src": "60269:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60269:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3094,
												"nodeType": "ExpressionStatement",
												"src": "60269:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3096,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3086,
															"src": "60314:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3097,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3080,
															"src": "60323:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3095,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3051,
														"src": "60301:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60301:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3099,
												"nodeType": "ExpressionStatement",
												"src": "60301:26:0"
											}
										]
									},
									"functionSelector": "d204c45e",
									"id": 3101,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3083,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3082,
												"name": "onlyOwner",
												"nameLocations": [
													"60207:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1620,
												"src": "60207:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60207:9:0"
										}
									],
									"name": "safeMint",
									"nameLocation": "60160:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "60177:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3101,
												"src": "60169:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "60195:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3101,
												"src": "60181:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3079,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "60181:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60168:31:0"
									},
									"returnParameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60217:0:0"
									},
									"scope": 3134,
									"src": "60151:183:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2098,
										3032
									],
									"body": {
										"id": 3116,
										"nodeType": "Block",
										"src": "60550:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3113,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3103,
															"src": "60582:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3111,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "60567:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SmileNFT_$3134_$",
																"typeString": "type(contract super SmileNFT)"
															}
														},
														"id": 3112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60573:8:0",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3032,
														"src": "60567:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 3114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60567:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3110,
												"id": 3115,
												"nodeType": "Return",
												"src": "60560:30:0"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "60417:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3107,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3105,
												"name": "ERC721",
												"nameLocations": [
													"60488:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2911,
												"src": "60488:6:0"
											},
											{
												"id": 3106,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"60496:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3052,
												"src": "60496:16:0"
											}
										],
										"src": "60479:34:0"
									},
									"parameters": {
										"id": 3104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3103,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "60434:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3117,
												"src": "60426:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60425:17:0"
									},
									"returnParameters": {
										"id": 3110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3117,
												"src": "60531:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3108,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "60531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60530:15:0"
									},
									"scope": 3134,
									"src": "60408:189:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2003,
										2975
									],
									"body": {
										"id": 3132,
										"nodeType": "Block",
										"src": "60748:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3129,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3119,
															"src": "60789:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3127,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "60765:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SmileNFT_$3134_$",
																"typeString": "type(contract super SmileNFT)"
															}
														},
														"id": 3128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "60771:17:0",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2975,
														"src": "60765:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60765:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3126,
												"id": 3131,
												"nodeType": "Return",
												"src": "60758:43:0"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "60612:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3123,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3121,
												"name": "ERC721",
												"nameLocations": [
													"60695:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2911,
												"src": "60695:6:0"
											},
											{
												"id": 3122,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"60703:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3052,
												"src": "60703:16:0"
											}
										],
										"src": "60686:34:0"
									},
									"parameters": {
										"id": 3120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3119,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "60637:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "60630:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3118,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "60630:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60629:20:0"
									},
									"returnParameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "60738:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "60738:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60737:6:0"
									},
									"scope": 3134,
									"src": "60603:205:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3135,
							"src": "59927:883:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88,
								1575,
								1580
							],
							"usedEvents": [
								1586,
								1772,
								1781,
								1790,
								1885,
								1892
							]
						}
					],
					"src": "152:60659:0"
				},
				"id": 0
			}
		}
	}
}